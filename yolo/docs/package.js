(function(pkg) {
  (function() {
  var annotateSourceURL, cacheFor, circularGuard, defaultEntryPoint, fileSeparator, generateRequireFn, global, isPackage, loadModule, loadPackage, loadPath, normalizePath, rootModule, startsWith,
    __slice = [].slice;

  fileSeparator = '/';

  global = window;

  defaultEntryPoint = "main";

  circularGuard = {};

  rootModule = {
    path: ""
  };

  loadPath = function(parentModule, pkg, path) {
    var cache, localPath, module, normalizedPath;
    if (startsWith(path, '/')) {
      localPath = [];
    } else {
      localPath = parentModule.path.split(fileSeparator);
    }
    normalizedPath = normalizePath(path, localPath);
    cache = cacheFor(pkg);
    if (module = cache[normalizedPath]) {
      if (module === circularGuard) {
        throw "Circular dependency detected when requiring " + normalizedPath;
      }
    } else {
      cache[normalizedPath] = circularGuard;
      try {
        cache[normalizedPath] = module = loadModule(pkg, normalizedPath);
      } finally {
        if (cache[normalizedPath] === circularGuard) {
          delete cache[normalizedPath];
        }
      }
    }
    return module.exports;
  };

  normalizePath = function(path, base) {
    var piece, result;
    if (base == null) {
      base = [];
    }
    base = base.concat(path.split(fileSeparator));
    result = [];
    while (base.length) {
      switch (piece = base.shift()) {
        case "..":
          result.pop();
          break;
        case "":
        case ".":
          break;
        default:
          result.push(piece);
      }
    }
    return result.join(fileSeparator);
  };

  loadPackage = function(pkg) {
    var path;
    path = pkg.entryPoint || defaultEntryPoint;
    return loadPath(rootModule, pkg, path);
  };

  loadModule = function(pkg, path) {
    var args, context, dirname, file, module, program, values;
    if (!(file = pkg.distribution[path])) {
      throw "Could not find file at " + path + " in " + pkg.name;
    }
    program = annotateSourceURL(file.content, pkg, path);
    dirname = path.split(fileSeparator).slice(0, -1).join(fileSeparator);
    module = {
      path: dirname,
      exports: {}
    };
    context = {
      require: generateRequireFn(pkg, module),
      global: global,
      module: module,
      exports: module.exports,
      PACKAGE: pkg,
      __filename: path,
      __dirname: dirname
    };
    args = Object.keys(context);
    values = args.map(function(name) {
      return context[name];
    });
    Function.apply(null, __slice.call(args).concat([program])).apply(module, values);
    return module;
  };

  isPackage = function(path) {
    if (!(startsWith(path, fileSeparator) || startsWith(path, "." + fileSeparator) || startsWith(path, ".." + fileSeparator))) {
      return path.split(fileSeparator)[0];
    } else {
      return false;
    }
  };

  generateRequireFn = function(pkg, module) {
    if (module == null) {
      module = rootModule;
    }
    if (pkg.name == null) {
      pkg.name = "ROOT";
    }
    if (pkg.scopedName == null) {
      pkg.scopedName = "ROOT";
    }
    return function(path) {
      var otherPackage;
      if (isPackage(path)) {
        if (!(otherPackage = pkg.dependencies[path])) {
          throw "Package: " + path + " not found.";
        }
        if (otherPackage.name == null) {
          otherPackage.name = path;
        }
        if (otherPackage.scopedName == null) {
          otherPackage.scopedName = "" + pkg.scopedName + ":" + path;
        }
        return loadPackage(otherPackage);
      } else {
        return loadPath(module, pkg, path);
      }
    };
  };

  if (typeof exports !== "undefined" && exports !== null) {
    exports.generateFor = generateRequireFn;
  } else {
    global.Require = {
      generateFor: generateRequireFn
    };
  }

  startsWith = function(string, prefix) {
    return string.lastIndexOf(prefix, 0) === 0;
  };

  cacheFor = function(pkg) {
    if (pkg.cache) {
      return pkg.cache;
    }
    Object.defineProperty(pkg, "cache", {
      value: {}
    });
    return pkg.cache;
  };

  annotateSourceURL = function(program, pkg, path) {
    return "" + program + "\n//# sourceURL=" + pkg.scopedName + "/" + path;
  };

}).call(this);

//# sourceURL=main.coffee
  window.require = Require.generateFor(pkg);
})({
  "source": {
    "LICENSE": {
      "path": "LICENSE",
      "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Daniel X Moore\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n",
      "mode": "100644",
      "type": "blob"
    },
    "README.md": {
      "path": "README.md",
      "content": "# blog\nAn S3 backed blog.\n",
      "mode": "100644",
      "type": "blob"
    },
    "main.coffee": {
      "path": "main.coffee",
      "content": "require \"cornerstone\"\nglobal.markdown = marked\n\n# Store posts as JSON\n# Also store posts as html\n# Display Ace editor to edit markdown\n# Stylesheet\n# Header\n# Navigation\n# Manifest JSON\n# Filetree\n\nFiletreePresenter = require \"./presenters/filetree\"\n\napplication = require(\"./application\")()\n\nstyle = document.createElement \"style\"\nstyle.innerHTML = require \"./style\"\ndocument.head.appendChild style\ndocument.body.appendChild require(\"./template\")(application)\n\napplication.include require(\"./ace_shim\")\n\nglobal.application = application\n",
      "mode": "100644"
    },
    "pixie.cson": {
      "path": "pixie.cson",
      "content": "version: \"0.0.1\"\nremoteDependencies: [\n  \"https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.0/ace.js\"\n  \"https://cdnjs.cloudflare.com/ajax/libs/marked/0.3.2/marked.min.js\"\n  \"https://cdnjs.cloudflare.com/ajax/libs/coffee-script/1.7.1/coffee-script.min.js\"\n]\ndependencies:\n  cornerstone: \"distri/cornerstone:master\"\n  \"s3-uploader\": \"distri/s3-uploader:v0.1.3\"\n  styl: \"distri/styl:v0.2.8.1\"\n",
      "mode": "100644"
    },
    "lib/markdown.js": {
      "path": "lib/markdown.js",
      "content": "!function(a){function b(){return\"Markdown.mk_block( \"+uneval(this.toString())+\", \"+uneval(this.trailing)+\", \"+uneval(this.lineNumber)+\" )\"}function c(){var a=require(\"util\");return\"Markdown.mk_block( \"+a.inspect(this.toString())+\", \"+a.inspect(this.trailing)+\", \"+a.inspect(this.lineNumber)+\" )\"}function d(a){for(var b=0,c=-1;-1!==(c=a.indexOf(\"\\n\",c+1));)b++;return b}function e(a){return a.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\"/g,\"&quot;\").replace(/'/g,\"&#39;\")}function f(a){if(\"string\"==typeof a)return e(a);var b=a.shift(),c={},d=[];for(!a.length||\"object\"!=typeof a[0]||a[0]instanceof Array||(c=a.shift());a.length;)d.push(f(a.shift()));var g=\"\";for(var h in c)g+=\" \"+h+'=\"'+e(c[h])+'\"';return\"img\"===b||\"br\"===b||\"hr\"===b?\"<\"+b+g+\"/>\":\"<\"+b+g+\">\"+d.join(\"\")+\"</\"+b+\">\"}function g(a,b,c){var d;c=c||{};var e=a.slice(0);\"function\"==typeof c.preprocessTreeNode&&(e=c.preprocessTreeNode(e,b));var f=o(e);if(f){e[1]={};for(d in f)e[1][d]=f[d];f=e[1]}if(\"string\"==typeof e)return e;switch(e[0]){case\"header\":e[0]=\"h\"+e[1].level,delete e[1].level;break;case\"bulletlist\":e[0]=\"ul\";break;case\"numberlist\":e[0]=\"ol\";break;case\"listitem\":e[0]=\"li\";break;case\"para\":e[0]=\"p\";break;case\"markdown\":e[0]=\"html\",f&&delete f.references;break;case\"code_block\":e[0]=\"pre\",d=f?2:1;var h=[\"code\"];h.push.apply(h,e.splice(d,e.length-d)),e[d]=h;break;case\"inlinecode\":e[0]=\"code\";break;case\"img\":e[1].src=e[1].href,delete e[1].href;break;case\"linebreak\":e[0]=\"br\";break;case\"link\":e[0]=\"a\";break;case\"link_ref\":e[0]=\"a\";var i=b[f.ref];if(!i)return f.original;delete f.ref,f.href=i.href,i.title&&(f.title=i.title),delete f.original;break;case\"img_ref\":e[0]=\"img\";var i=b[f.ref];if(!i)return f.original;delete f.ref,f.src=i.href,i.title&&(f.title=i.title),delete f.original}if(d=1,f){for(var j in e[1]){d=2;break}1===d&&e.splice(d,1)}for(;d<e.length;++d)e[d]=g(e[d],b,c);return e}function h(a){for(var b=o(a)?2:1;b<a.length;)\"string\"==typeof a[b]?b+1<a.length&&\"string\"==typeof a[b+1]?a[b]+=a.splice(b+1,1)[0]:++b:(h(a[b]),++b)}function i(a,b){function c(a){this.len_after=a,this.name=\"close_\"+b}var d=a+\"_state\",e=\"strong\"===a?\"em_state\":\"strong_state\";return function(f){if(this[d][0]===b)return this[d].shift(),[f.length,new c(f.length-b.length)];var g=this[e].slice(),h=this[d].slice();this[d].unshift(b);var i=this.processInline(f.substr(b.length)),j=i[i.length-1];if(this[d].shift(),j instanceof c){i.pop();var k=f.length-j.len_after;return[k,[a].concat(i)]}return this[e]=g,this[d]=h,[b.length,b]}}function j(a){for(var b=a.split(\"\"),c=[\"\"],d=!1;b.length;){var e=b.shift();switch(e){case\" \":d?c[c.length-1]+=e:c.push(\"\");break;case\"'\":case'\"':d=!d;break;case\"\\\\\":e=b.shift();default:c[c.length-1]+=e}}return c}var k={};k.mk_block=function(a,d,e){1===arguments.length&&(d=\"\\n\\n\");var f=new String(a);return f.trailing=d,f.inspect=c,f.toSource=b,void 0!==e&&(f.lineNumber=e),f};var l=k.isArray=Array.isArray||function(a){return\"[object Array]\"===Object.prototype.toString.call(a)};k.forEach=Array.prototype.forEach?function(a,b,c){return a.forEach(b,c)}:function(a,b,c){for(var d=0;d<a.length;d++)b.call(c||a,a[d],d,a)},k.isEmpty=function(a){for(var b in a)if(hasOwnProperty.call(a,b))return!1;return!0},k.extract_attr=function(a){return l(a)&&a.length>1&&\"object\"==typeof a[1]&&!l(a[1])?a[1]:void 0};var m=function(a){switch(typeof a){case\"undefined\":this.dialect=m.dialects.Gruber;break;case\"object\":this.dialect=a;break;default:if(!(a in m.dialects))throw new Error(\"Unknown Markdown dialect '\"+String(a)+\"'\");this.dialect=m.dialects[a]}this.em_state=[],this.strong_state=[],this.debug_indent=\"\"};m.dialects={};var n=m.mk_block=k.mk_block,l=k.isArray;m.parse=function(a,b){var c=new m(b);return c.toTree(a)},m.prototype.split_blocks=function(a){a=a.replace(/(\\r\\n|\\n|\\r)/g,\"\\n\");var b,c=/([\\s\\S]+?)($|\\n#|\\n(?:\\s*\\n|$)+)/g,e=[],f=1;for(null!==(b=/^(\\s*\\n)/.exec(a))&&(f+=d(b[0]),c.lastIndex=b[0].length);null!==(b=c.exec(a));)\"\\n#\"===b[2]&&(b[2]=\"\\n\",c.lastIndex--),e.push(n(b[1],b[2],f)),f+=d(b[0]);return e},m.prototype.processBlock=function(a,b){var c=this.dialect.block,d=c.__order__;if(\"__call__\"in c)return c.__call__.call(this,a,b);for(var e=0;e<d.length;e++){var f=c[d[e]].call(this,a,b);if(f)return(!l(f)||f.length>0&&!l(f[0]))&&this.debug(d[e],\"didn't return a proper array\"),f}return[]},m.prototype.processInline=function(a){return this.dialect.inline.__call__.call(this,String(a))},m.prototype.toTree=function(a,b){var c=a instanceof Array?a:this.split_blocks(a),d=this.tree;try{for(this.tree=b||this.tree||[\"markdown\"];c.length;){var e=this.processBlock(c.shift(),c);e.length&&this.tree.push.apply(this.tree,e)}return this.tree}finally{b&&(this.tree=d)}},m.prototype.debug=function(){var a=Array.prototype.slice.call(arguments);a.unshift(this.debug_indent),\"undefined\"!=typeof print&&print.apply(print,a),\"undefined\"!=typeof console&&\"undefined\"!=typeof console.log&&console.log.apply(null,a)},m.prototype.loop_re_over_block=function(a,b,c){for(var d,e=b.valueOf();e.length&&null!==(d=a.exec(e));)e=e.substr(d[0].length),c.call(this,d);return e},m.buildBlockOrder=function(a){var b=[];for(var c in a)\"__order__\"!==c&&\"__call__\"!==c&&b.push(c);a.__order__=b},m.buildInlinePatterns=function(a){var b=[];for(var c in a)if(!c.match(/^__.*__$/)){var d=c.replace(/([\\\\.*+?|()\\[\\]{}])/g,\"\\\\$1\").replace(/\\n/,\"\\\\n\");b.push(1===c.length?d:\"(?:\"+d+\")\")}b=b.join(\"|\"),a.__patterns__=b;var e=a.__call__;a.__call__=function(a,c){return void 0!==c?e.call(this,a,c):e.call(this,a,b)}};var o=k.extract_attr;m.renderJsonML=function(a,b){b=b||{},b.root=b.root||!1;var c=[];if(b.root)c.push(f(a));else for(a.shift(),!a.length||\"object\"!=typeof a[0]||a[0]instanceof Array||a.shift();a.length;)c.push(f(a.shift()));return c.join(\"\\n\\n\")},m.toHTMLTree=function(a,b,c){\"string\"==typeof a&&(a=this.parse(a,b));var d=o(a),e={};d&&d.references&&(e=d.references);var f=g(a,e,c);return h(f),f},m.toHTML=function(a,b,c){var d=this.toHTMLTree(a,b,c);return this.renderJsonML(d)};var p={};p.inline_until_char=function(a,b){for(var c=0,d=[];;){if(a.charAt(c)===b)return c++,[c,d];if(c>=a.length)return null;var e=this.dialect.inline.__oneElement__.call(this,a.substr(c));c+=e[0],d.push.apply(d,e.slice(1))}},p.subclassDialect=function(a){function b(){}function c(){}return b.prototype=a.block,c.prototype=a.inline,{block:new b,inline:new c}};var q=k.forEach,o=k.extract_attr,n=k.mk_block,r=k.isEmpty,s=p.inline_until_char,t={block:{atxHeader:function(a,b){var c=a.match(/^(#{1,6})\\s*(.*?)\\s*#*\\s*(?:\\n|$)/);if(!c)return void 0;var d=[\"header\",{level:c[1].length}];return Array.prototype.push.apply(d,this.processInline(c[2])),c[0].length<a.length&&b.unshift(n(a.substr(c[0].length),a.trailing,a.lineNumber+2)),[d]},setextHeader:function(a,b){var c=a.match(/^(.*)\\n([-=])\\2\\2+(?:\\n|$)/);if(!c)return void 0;var d=\"=\"===c[2]?1:2,e=[\"header\",{level:d},c[1]];return c[0].length<a.length&&b.unshift(n(a.substr(c[0].length),a.trailing,a.lineNumber+2)),[e]},code:function(a,b){var c=[],d=/^(?: {0,3}\\t| {4})(.*)\\n?/;if(!a.match(d))return void 0;a:for(;;){var e=this.loop_re_over_block(d,a.valueOf(),function(a){c.push(a[1])});if(e.length){b.unshift(n(e,a.trailing));break a}if(!b.length)break a;if(!b[0].match(d))break a;c.push(a.trailing.replace(/[^\\n]/g,\"\").substring(2)),a=b.shift()}return[[\"code_block\",c.join(\"\\n\")]]},horizRule:function(a,b){var c=a.match(/^(?:([\\s\\S]*?)\\n)?[ \\t]*([-_*])(?:[ \\t]*\\2){2,}[ \\t]*(?:\\n([\\s\\S]*))?$/);if(!c)return void 0;var d=[[\"hr\"]];if(c[1]){var e=n(c[1],\"\",a.lineNumber);d.unshift.apply(d,this.toTree(e,[]))}return c[3]&&b.unshift(n(c[3],a.trailing,a.lineNumber+1)),d},lists:function(){function a(a){return new RegExp(\"(?:^(\"+i+\"{0,\"+a+\"} {0,3})(\"+f+\")\\\\s+)|\"+\"(^\"+i+\"{0,\"+(a-1)+\"}[ ]{0,4})\")}function b(a){return a.replace(/ {0,3}\\t/g,\"    \")}function c(a,b,c,d){if(b)return a.push([\"para\"].concat(c)),void 0;var e=a[a.length-1]instanceof Array&&\"para\"===a[a.length-1][0]?a[a.length-1]:a;d&&a.length>1&&c.unshift(d);for(var f=0;f<c.length;f++){var g=c[f],h=\"string\"==typeof g;h&&e.length>1&&\"string\"==typeof e[e.length-1]?e[e.length-1]+=g:e.push(g)}}function d(a,b){for(var c=new RegExp(\"^(\"+i+\"{\"+a+\"}.*?\\\\n?)*$\"),d=new RegExp(\"^\"+i+\"{\"+a+\"}\",\"gm\"),e=[];b.length>0&&c.exec(b[0]);){var f=b.shift(),g=f.replace(d,\"\");e.push(n(g,f.trailing,f.lineNumber))}return e}function e(a,b,c){var d=a.list,e=d[d.length-1];if(!(e[1]instanceof Array&&\"para\"===e[1][0]))if(b+1===c.length)e.push([\"para\"].concat(e.splice(1,e.length-1)));else{var f=e.pop();e.push([\"para\"].concat(e.splice(1,e.length-1)),f)}}var f=\"[*+-]|\\\\d+\\\\.\",g=/[*+-]/,h=new RegExp(\"^( {0,3})(\"+f+\")[ \t]+\"),i=\"(?: {0,3}\\\\t| {4})\";return function(f,i){function j(a){var b=g.exec(a[2])?[\"bulletlist\"]:[\"numberlist\"];return n.push({list:b,indent:a[1]}),b}var k=f.match(h);if(!k)return void 0;for(var l,m,n=[],o=j(k),p=!1,r=[n[0].list];;){for(var s=f.split(/(?=\\n)/),t=\"\",u=\"\",v=0;v<s.length;v++){u=\"\";var w=s[v].replace(/^\\n/,function(a){return u=a,\"\"}),x=a(n.length);if(k=w.match(x),void 0!==k[1]){t.length&&(c(l,p,this.processInline(t),u),p=!1,t=\"\"),k[1]=b(k[1]);var y=Math.floor(k[1].length/4)+1;if(y>n.length)o=j(k),l.push(o),l=o[1]=[\"listitem\"];else{var z=!1;for(m=0;m<n.length;m++)if(n[m].indent===k[1]){o=n[m].list,n.splice(m+1,n.length-(m+1)),z=!0;break}z||(y++,y<=n.length?(n.splice(y,n.length-y),o=n[y-1].list):(o=j(k),l.push(o))),l=[\"listitem\"],o.push(l)}u=\"\"}w.length>k[0].length&&(t+=u+w.substr(k[0].length))}t.length&&(c(l,p,this.processInline(t),u),p=!1,t=\"\");var A=d(n.length,i);A.length>0&&(q(n,e,this),l.push.apply(l,this.toTree(A,[])));var B=i[0]&&i[0].valueOf()||\"\";if(!B.match(h)&&!B.match(/^ /))break;f=i.shift();var C=this.dialect.block.horizRule(f,i);if(C){r.push.apply(r,C);break}q(n,e,this),p=!0}return r}}(),blockquote:function(a,b){if(!a.match(/^>/m))return void 0;var c=[];if(\">\"!==a[0]){for(var d=a.split(/\\n/),e=[],f=a.lineNumber;d.length&&\">\"!==d[0][0];)e.push(d.shift()),f++;var g=n(e.join(\"\\n\"),\"\\n\",a.lineNumber);c.push.apply(c,this.processBlock(g,[])),a=n(d.join(\"\\n\"),a.trailing,f)}for(;b.length&&\">\"===b[0][0];){var h=b.shift();a=n(a+a.trailing+h,h.trailing,a.lineNumber)}var i=a.replace(/^> ?/gm,\"\"),j=(this.tree,this.toTree(i,[\"blockquote\"])),k=o(j);return k&&k.references&&(delete k.references,r(k)&&j.splice(1,1)),c.push(j),c},referenceDefn:function(a,b){var c=/^\\s*\\[(.*?)\\]:\\s*(\\S+)(?:\\s+(?:(['\"])(.*?)\\3|\\((.*?)\\)))?\\n?/;if(!a.match(c))return void 0;o(this.tree)||this.tree.splice(1,0,{});var d=o(this.tree);void 0===d.references&&(d.references={});var e=this.loop_re_over_block(c,a,function(a){a[2]&&\"<\"===a[2][0]&&\">\"===a[2][a[2].length-1]&&(a[2]=a[2].substring(1,a[2].length-1));var b=d.references[a[1].toLowerCase()]={href:a[2]};void 0!==a[4]?b.title=a[4]:void 0!==a[5]&&(b.title=a[5])});return e.length&&b.unshift(n(e,a.trailing)),[]},para:function(a){return[[\"para\"].concat(this.processInline(a))]}},inline:{__oneElement__:function(a,b,c){var d,e;b=b||this.dialect.inline.__patterns__;var f=new RegExp(\"([\\\\s\\\\S]*?)(\"+(b.source||b)+\")\");if(d=f.exec(a),!d)return[a.length,a];if(d[1])return[d[1].length,d[1]];var e;return d[2]in this.dialect.inline&&(e=this.dialect.inline[d[2]].call(this,a.substr(d.index),d,c||[])),e=e||[d[2].length,d[2]]},__call__:function(a,b){function c(a){\"string\"==typeof a&&\"string\"==typeof e[e.length-1]?e[e.length-1]+=a:e.push(a)}for(var d,e=[];a.length>0;)d=this.dialect.inline.__oneElement__.call(this,a,b,e),a=a.substr(d.shift()),q(d,c);return e},\"]\":function(){},\"}\":function(){},__escape__:/^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-]/,\"\\\\\":function(a){return this.dialect.inline.__escape__.exec(a)?[2,a.charAt(1)]:[1,\"\\\\\"]},\"![\":function(a){var b=a.match(/^!\\[(.*?)\\][ \\t]*\\([ \\t]*([^\")]*?)(?:[ \\t]+([\"'])(.*?)\\3)?[ \\t]*\\)/);if(b){b[2]&&\"<\"===b[2][0]&&\">\"===b[2][b[2].length-1]&&(b[2]=b[2].substring(1,b[2].length-1)),b[2]=this.dialect.inline.__call__.call(this,b[2],/\\\\/)[0];var c={alt:b[1],href:b[2]||\"\"};return void 0!==b[4]&&(c.title=b[4]),[b[0].length,[\"img\",c]]}return b=a.match(/^!\\[(.*?)\\][ \\t]*\\[(.*?)\\]/),b?[b[0].length,[\"img_ref\",{alt:b[1],ref:b[2].toLowerCase(),original:b[0]}]]:[2,\"![\"]},\"[\":function v(a){var b=String(a),c=s.call(this,a.substr(1),\"]\");if(!c)return[1,\"[\"];var v,d,e=1+c[0],f=c[1];a=a.substr(e);var g=a.match(/^\\s*\\([ \\t]*([^\"']*)(?:[ \\t]+([\"'])(.*?)\\2)?[ \\t]*\\)/);if(g){var h=g[1];if(e+=g[0].length,h&&\"<\"===h[0]&&\">\"===h[h.length-1]&&(h=h.substring(1,h.length-1)),!g[3])for(var i=1,j=0;j<h.length;j++)switch(h[j]){case\"(\":i++;break;case\")\":0===--i&&(e-=h.length-j,h=h.substring(0,j))}return h=this.dialect.inline.__call__.call(this,h,/\\\\/)[0],d={href:h||\"\"},void 0!==g[3]&&(d.title=g[3]),v=[\"link\",d].concat(f),[e,v]}return g=a.match(/^\\s*\\[(.*?)\\]/),g?(e+=g[0].length,d={ref:(g[1]||String(f)).toLowerCase(),original:b.substr(0,e)},v=[\"link_ref\",d].concat(f),[e,v]):1===f.length&&\"string\"==typeof f[0]?(d={ref:f[0].toLowerCase(),original:b.substr(0,e)},v=[\"link_ref\",d,f[0]],[e,v]):[1,\"[\"]},\"<\":function(a){var b;return null!==(b=a.match(/^<(?:((https?|ftp|mailto):[^>]+)|(.*?@.*?\\.[a-zA-Z]+))>/))?b[3]?[b[0].length,[\"link\",{href:\"mailto:\"+b[3]},b[3]]]:\"mailto\"===b[2]?[b[0].length,[\"link\",{href:b[1]},b[1].substr(\"mailto:\".length)]]:[b[0].length,[\"link\",{href:b[1]},b[1]]]:[1,\"<\"]},\"`\":function(a){var b=a.match(/(`+)(([\\s\\S]*?)\\1)/);return b&&b[2]?[b[1].length+b[2].length,[\"inlinecode\",b[3]]]:[1,\"`\"]},\"  \\n\":function(){return[3,[\"linebreak\"]]}}};t.inline[\"**\"]=i(\"strong\",\"**\"),t.inline.__=i(\"strong\",\"__\"),t.inline[\"*\"]=i(\"em\",\"*\"),t.inline._=i(\"em\",\"_\"),m.dialects.Gruber=t,m.buildBlockOrder(m.dialects.Gruber.block),m.buildInlinePatterns(m.dialects.Gruber.inline);var u=p.subclassDialect(t),o=k.extract_attr,q=k.forEach;u.processMetaHash=function(a){for(var b=j(a),c={},d=0;d<b.length;++d)if(/^#/.test(b[d]))c.id=b[d].substring(1);else if(/^\\./.test(b[d]))c[\"class\"]=c[\"class\"]?c[\"class\"]+b[d].replace(/./,\" \"):b[d].substring(1);else if(/\\=/.test(b[d])){var e=b[d].split(/\\=/);c[e[0]]=e[1]}return c},u.block.document_meta=function(a){if(a.lineNumber>1)return void 0;if(!a.match(/^(?:\\w+:.*\\n)*\\w+:.*$/))return void 0;o(this.tree)||this.tree.splice(1,0,{});var b=a.split(/\\n/);for(var c in b){var d=b[c].match(/(\\w+):\\s*(.*)$/),e=d[1].toLowerCase(),f=d[2];this.tree[1][e]=f}return[]},u.block.block_meta=function(a){var b=a.match(/(^|\\n) {0,3}\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}$/);if(!b)return void 0;var c,d=this.dialect.processMetaHash(b[2]);if(\"\"===b[1]){var e=this.tree[this.tree.length-1];if(c=o(e),\"string\"==typeof e)return void 0;c||(c={},e.splice(1,0,c));for(var f in d)c[f]=d[f];return[]}var g=a.replace(/\\n.*$/,\"\"),h=this.processBlock(g,[]);c=o(h[0]),c||(c={},h[0].splice(1,0,c));for(var f in d)c[f]=d[f];return h},u.block.definition_list=function(a,b){var c,d,e=/^((?:[^\\s:].*\\n)+):\\s+([\\s\\S]+)$/,f=[\"dl\"];if(!(d=a.match(e)))return void 0;for(var g=[a];b.length&&e.exec(b[0]);)g.push(b.shift());for(var h=0;h<g.length;++h){var d=g[h].match(e),i=d[1].replace(/\\n$/,\"\").split(/\\n/),j=d[2].split(/\\n:\\s+/);for(c=0;c<i.length;++c)f.push([\"dt\",i[c]]);for(c=0;c<j.length;++c)f.push([\"dd\"].concat(this.processInline(j[c].replace(/(\\n)\\s+/,\"$1\"))))}return[f]},u.block.table=function w(a){var b,c,d=function(a,b){b=b||\"\\\\s\",b.match(/^[\\\\|\\[\\]{}?*.+^$]$/)&&(b=\"\\\\\"+b);for(var c,d=[],e=new RegExp(\"^((?:\\\\\\\\.|[^\\\\\\\\\"+b+\"])*)\"+b+\"(.*)\");c=a.match(e);)d.push(c[1]),a=c[2];return d.push(a),d},e=/^ {0,3}\\|(.+)\\n {0,3}\\|\\s*([\\-:]+[\\-| :]*)\\n((?:\\s*\\|.*(?:\\n|$))*)(?=\\n|$)/,f=/^ {0,3}(\\S(?:\\\\.|[^\\\\|])*\\|.*)\\n {0,3}([\\-:]+\\s*\\|[\\-| :]*)\\n((?:(?:\\\\.|[^\\\\|])*\\|.*(?:\\n|$))*)(?=\\n|$)/;if(c=a.match(e))c[3]=c[3].replace(/^\\s*\\|/gm,\"\");else if(!(c=a.match(f)))return void 0;var w=[\"table\",[\"thead\",[\"tr\"]],[\"tbody\"]];c[2]=c[2].replace(/\\|\\s*$/,\"\").split(\"|\");var g=[];for(q(c[2],function(a){a.match(/^\\s*-+:\\s*$/)?g.push({align:\"right\"}):a.match(/^\\s*:-+\\s*$/)?g.push({align:\"left\"}):a.match(/^\\s*:-+:\\s*$/)?g.push({align:\"center\"}):g.push({})}),c[1]=d(c[1].replace(/\\|\\s*$/,\"\"),\"|\"),b=0;b<c[1].length;b++)w[1][1].push([\"th\",g[b]||{}].concat(this.processInline(c[1][b].trim())));return q(c[3].replace(/\\|\\s*$/gm,\"\").split(\"\\n\"),function(a){var c=[\"tr\"];for(a=d(a,\"|\"),b=0;b<a.length;b++)c.push([\"td\",g[b]||{}].concat(this.processInline(a[b].trim())));w[2].push(c)},this),[w]},u.inline[\"{:\"]=function(a,b,c){if(!c.length)return[2,\"{:\"];var d=c[c.length-1];if(\"string\"==typeof d)return[2,\"{:\"];var e=a.match(/^\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}/);if(!e)return[2,\"{:\"];var f=this.dialect.processMetaHash(e[1]),g=o(d);g||(g={},d.splice(1,0,g));for(var h in f)g[h]=f[h];return[e[0].length,\"\"]},m.dialects.Maruku=u,m.dialects.Maruku.inline.__escape__=/^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-|:]/,m.buildBlockOrder(m.dialects.Maruku.block),m.buildInlinePatterns(m.dialects.Maruku.inline),a.Markdown=m,a.parse=m.parse,a.toHTML=m.toHTML,a.toHTMLTree=m.toHTMLTree,a.renderJsonML=m.renderJsonML}(function(){return window.markdown={},window.markdown}());",
      "mode": "100644"
    },
    "template.haml": {
      "path": "template.haml",
      "content": "- Filetree = require \"./templates/filetree\"\n- FiletreePresenter = require \"./presenters/filetree\"\n\n#main\n  #actions\n    - @actions().forEach (action) ->\n      %button(click=action.fn)= action.name.titleize()\n  = Filetree FiletreePresenter @filetree(), this\n  .wrap\n    #ace\n",
      "mode": "100644"
    },
    "style.styl": {
      "path": "style.styl",
      "content": "*\n  box-sizing: border-box\n\nhtml, body, #ace, #main, .wrap\n  height: 100%\n\nbody\n  font-family: \"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif\n  font-weight: 300\n  margin: 0\n\n#main\n  padding-top: 21px\n  padding-left: 200px\n  position: relative\n\n#actions\n  position: absolute\n  top: 0\n  left: 0\n\n#filetree\n  position: absolute\n  top: 21px\n  left: 0\n  bottom: 0\n  margin: 0\n  padding: 1em 0 0 0\n  width: 200px\n  overflow-x: hidden\n  overflow-y: auto\n  z-index: 2\n\n  li\n    cursor: pointer\n    list-style-type: none\n    padding-left: 1em\n    position: relative\n    whitespace: nowrap\n\n    .delete\n      display: none\n      position: absolute\n      right: 0\n      top: 0\n\n    &:hover\n      background-color: lightyellow\n\n      .delete\n        display: inline-block\n",
      "mode": "100644"
    },
    "actions.coffee": {
      "path": "actions.coffee",
      "content": "Uploader = require \"s3-uploader\"\nstyl = require \"styl\"\n\nmodule.exports = ->\n  policy = JSON.parse(localStorage.blogPolicy)\n  uploader = Uploader(policy)\n\n  actions =\n    preview: ->\n      previewWindow = window.open null, \"preview\", \"width=800,height=600\"\n\n      content = PostTemplate\n        title: \"TEST\"\n        html: markdown \"\"\"\n          This is a test\n          ========\n          \n          Yo\n          \n          Wat a cool test\n        \"\"\"\n\n      previewWindow.document.open()\n      previewWindow.document.write(content)\n      previewWindow.document.write \"\"\"\n        <style>\n          #{styl(editor.getValue(), whitespace: true).toString()}\n        </style>\n      \"\"\"\n      previewWindow.document.close()\n\n    load: ->\n      if name = prompt \"Name\"\n        console.log name\n        # Load the entry into the editor\n        load name + \"?yolo\"\n        .then (content) ->\n          editor.setValue(content)\n          editor.getSession().setMode('markdown')\n\n    save: ->\n      text = editor.getValue()\n      html = markdown text\n\n      html = PostTemplate\n        title: \"TEST\"\n        html: html\n\n      # Save the entry to S3\n\n      # TODO: Update manifest\n      # TODO: Uplod post JSON\n      # TODO: Created At\n      # TODO: Updated At\n      # TODO: Author?\n\n      if path = prompt \"Path\"\n        # Upload post html\n        uploader.upload\n          key: path + \".html\"\n          blob: new Blob [html], type: \"text/html; charset=UTF-8\"\n          cacheControl: 60\n\n        uploader.upload\n          key: path + \".md\"\n          blob: new Blob [text], type: \"text/markdown; charset=UTF-8\"\n          cacheControl: 0\n\n    load_stylesheet: ->\n      load(\"style.styl\")\n      .then (content) ->\n        editor.setValue content\n        editor.getSession().setMode('css')\n\n    save_stylesheet: ->\n      source = editor.getValue()\n      style = styl(source, whitespace: true).toString()\n\n      uploader.upload\n        key: \"style.css\"\n        blob: new Blob [style], type: \"text/css; charset=UTF-8\"\n        cacheControl: 0\n\n      uploader.upload\n        key: \"style.styl\"\n        blob: new Blob [source], type: \"text/styl; charset=UTF-8\"\n        cacheControl: 0\n\n  Object.keys(actions).map (name) ->\n    name: name\n    fn: actions[name]\n",
      "mode": "100644"
    },
    "filetree.coffee": {
      "path": "filetree.coffee",
      "content": "require \"cornerstone\"\n\nFile = (I={}, self=Model(I)) ->\n  defaults I,\n    content: \"\"\n\n  self.attrObservable \"content\", \"path\"\n\n  self\n\nmodule.exports = Filetree = (I={}, self=Model(I)) ->\n  defaults I,\n    files: [{\n      path: \"test.md\"\n      content: \"Radical\\n=======\\n\\nDuuuuuder\"\n    }, {\n      path: \"wat.js\"\n      content: \"alert('yolo')\"\n    }, {\n      path: \"test.css\"\n      content: \"\"\"\n        body {\n          border: 8px solid green;\n        }\n      \"\"\"\n    }]\n\n  self.attrModels \"files\", File\n\n  self.extend\n    sortedFiles: ->\n      self.files().sort (a, b) ->\n        if a.path() < b.path()\n          -1\n        else if a.path() >= b.path()\n          1\n        else\n          0\n\n  self\n\nFiletree.File = File\n",
      "mode": "100644"
    },
    "templates/filetree.haml": {
      "path": "templates/filetree.haml",
      "content": "%ul#filetree\n  - self = this\n  - files = @files\n  - @sortedFiles().forEach (file) ->\n    - select = (e) -> self.select(file) if e.target.nodeName is 'LI'\n    %li(click=select)= file.path\n      - remove = -> files.remove(file) if confirm(\"Delete #{file.path()}?\")\n      .delete(click=remove) X\n",
      "mode": "100644"
    },
    "presenters/filetree.coffee": {
      "path": "presenters/filetree.coffee",
      "content": "module.exports = (filetree, application) ->\n  extend {}, filetree,\n    select: (file) ->\n      unless session = file.session\n        file.session = application.initSession(file)\n\n      application.editor().getSession()?._signal(\"blur\")\n      application.editor().setSession(file.session)\n      file.session._signal?(\"focus\")\n",
      "mode": "100644"
    },
    "ace_shim.coffee": {
      "path": "ace_shim.coffee",
      "content": "aceEditor = ace.edit \"ace\"\naceEditor.$blockScrolling = Infinity\naceEditor.setOptions\n  fontSize: \"16px\"\n\nmodule.exports = (I, self) ->\n  modeFor = (extension) ->\n    switch extension\n      when \"js\"\n        \"javascript\"\n      when \"md\"\n        \"markdown\"\n      when \"cson\"\n        \"coffee\"\n      when \"\"\n        \"text\"\n      else\n        extension\n  \n  extension = (path) ->\n    if match = path.match(/\\.([^\\.]*)$/, '')\n      match[1]\n    else\n      ''\n\n  self.extend\n    editor: ->\n      aceEditor\n  \n    initSession: (file) ->\n      session = ace.createEditSession(file.content())\n  \n      session.setMode(\"ace/mode/#{modeFor(extension(file.path()))}\")\n  \n      session.setUseSoftTabs true\n      session.setTabSize 2\n  \n      aceEditor.setOptions\n        highlightActiveLine: true\n        showPrintMargin: false\n  \n      # Filetree observable binding\n      updating = false\n      file.content.observe (newContent) ->\n        return if updating\n  \n        session.setValue newContent\n  \n      # Bind session and file content\n      session.on \"change\", ->\n        updating = true\n        file.content session.getValue()\n        updating = false\n  \n      return session\n",
      "mode": "100644"
    },
    "application.coffee": {
      "path": "application.coffee",
      "content": "load = (path) ->\n  deferred = Q.defer()\n\n  xhr = new XMLHttpRequest()\n  xhr.open('GET', \"http://blog.whimsy.space/#{path}\", true)\n\n  xhr.onload = (e) ->\n    if (200 <= this.status < 300) or this.status is 304\n      deferred.resolve this.responseText\n    else\n      deferred.reject e\n  xhr.onprogress = deferred.notify\n  xhr.onerror = deferred.reject\n  xhr.send()\n\n  deferred.promise\n\nsave = (path, content, type, cacheControl=0) ->\n  uploader.upload\n    key: path\n    blob: new Blob [content], type: type\n    cacheControl: cacheControl\n\nHamletCompiler = require \"./lib/hamlet-compiler\"\n\ncompileTmpl = (source) ->\n  fnTxt = HamletCompiler.compile source,\n    compiler: CoffeeScript\n    runtime: \"require(\\\"/lib/hamlet-runtime\\\")\"\n\n  m = {}\n  Function(\"module\", \"require\", fnTxt)(m, require)\n  res = m.exports\n\n  (content) ->\n    c = document.createElement(\"content\")\n    c.innerHTML = content\n\n    r = res\n      content: c\n\n    d = document.createElement \"div\"\n    d.appendChild r\n\n    return d.innerHTML\n\nFiletree = require \"./filetree\"\nFile = Filetree.File\n\nmodule.exports = (I={}, self=Model(I)) ->\n  defaults I,\n    filetree:\n      files: [\n        path: \"template.haml\"\n        content: \"\"\"\n          %html\n            %head\n              %meta(charset=\"UTF-8\")\n              %link(rel=\"stylesheet\" type=\"text/css\" href=\"style.css\")\n\n            %body\n              = @content\n        \"\"\"\n      ]\n\n  posts = []\n\n  self.attrModel \"filetree\", Filetree\n\n  self.extend\n    actions: ->\n      [{\n        name: \"New Post\"\n        fn: ->\n          self.newPost()\n      }, {\n        name: \"Save\"\n        fn: ->\n          self.publish()\n      }]\n    publish: ->\n      # Save manifest\n      # Save template sources\n      # Save css\n      # Save posts\n      #  - Save .mds\n      #  - Save .htmls\n      # Update index.html\n\n      templateContent = self.filetree().files.first().content()\n      tmpl = compileTmpl(templateContent)\n      r = tmpl marked \"\"\"\n        Hello\n        =====\n        \n        World\n      \"\"\"\n\n      console.log r\n\n    loadManifest: (path) ->\n      load(path)\n      .then (result) ->\n        console.log result\n\n    newPost: ->\n      title = prompt \"Title\"\n\n      if title\n        slug = title.replace(/[^a-zA-Z0-9]/g, '-').replace(/-+/g, '-')\n\n        data = \n          title: title\n          slug: slug\n          path: \"posts/#{slug}.md\"\n          content: \"\"\n\n        self.filetree().files.push File data\n\n        posts.push data\n\n  self\n",
      "mode": "100644"
    },
    "lib/hamlet-compiler.js": {
      "path": "lib/hamlet-compiler.js",
      "content": "!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.HamletCompiler=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n// Generated by CoffeeScript 1.7.1\n(function() {\n  var ROOT_NAME, indentText, util;\n\n  indentText = function(text, indent) {\n    if (indent == null) {\n      indent = \"  \";\n    }\n    return indent + text.replace(/\\n/g, \"\\n\" + indent);\n  };\n\n  ROOT_NAME = \"__root\";\n\n  util = {\n    indent: indentText,\n    filters: {\n      verbatim: function(content, compiler) {\n        return compiler.buffer('\"\"\"' + content.replace(/(#|\")/g, \"\\\\$1\") + '\"\"\"');\n      },\n      plain: function(content, compiler) {\n        return compiler.buffer(JSON.stringify(content));\n      },\n      coffeescript: function(content, compiler) {\n        return [content];\n      },\n      javascript: function(content, compiler) {\n        return [\"`\", compiler.indent(content), \"`\"];\n      }\n    },\n    element: function(tag, attributes, contents) {\n      var lines;\n      if (attributes == null) {\n        attributes = [];\n      }\n      if (contents == null) {\n        contents = [];\n      }\n      return lines = [\"\" + ROOT_NAME + \".buffer \" + ROOT_NAME + \".element \" + (JSON.stringify(tag)) + \", this, {\" + (attributes.join('\\n')) + \"}, (\" + ROOT_NAME + \") ->\", indentText(contents.join(\"\\n\")), \"  return\"];\n    },\n    buffer: function(value) {\n      return [\"\" + ROOT_NAME + \".buffer \" + value];\n    },\n    attributes: function(node) {\n      var attributeLines, attributes, classes, id, ids, idsAndClasses;\n      id = node.id, classes = node.classes, attributes = node.attributes;\n      if (id) {\n        ids = [JSON.stringify(id)];\n      } else {\n        ids = [];\n      }\n      classes = (classes || []).map(JSON.stringify);\n      if (attributes) {\n        attributes = attributes.filter(function(_arg) {\n          var name, value;\n          name = _arg.name, value = _arg.value;\n          if (name === \"class\") {\n            classes.push(value);\n            return false;\n          } else if (name === \"id\") {\n            ids.push(value);\n            return false;\n          } else {\n            return true;\n          }\n        });\n      } else {\n        attributes = [];\n      }\n      idsAndClasses = [];\n      if (ids.length) {\n        idsAndClasses.push(\"id: [\" + (ids.join(', ')) + \"]\");\n      }\n      if (classes.length) {\n        idsAndClasses.push(\"class: [\" + (classes.join(', ')) + \"]\");\n      }\n      attributeLines = attributes.map(function(_arg) {\n        var name, value;\n        name = _arg.name, value = _arg.value;\n        name = JSON.stringify(name);\n        return \"\" + name + \": \" + value;\n      });\n      return idsAndClasses.concat(attributeLines);\n    },\n    render: function(node) {\n      var filter, tag, text;\n      tag = node.tag, filter = node.filter, text = node.text;\n      if (tag) {\n        return this.tag(node);\n      } else if (filter) {\n        return this.filter(node);\n      } else {\n        return this.contents(node);\n      }\n    },\n    filter: function(node) {\n      var filter, filterName;\n      filterName = node.filter;\n      if (filter = this.filters[filterName]) {\n        return [].concat.apply([], this.filters[filterName](node.content, this));\n      } else {\n        return [\"\" + ROOT_NAME + \".filter(\" + (JSON.stringify(filterName)) + \", \" + (JSON.stringify(node.content)) + \")\"];\n      }\n    },\n    contents: function(node) {\n      var bufferedCode, childContent, children, contents, indent, text, unbufferedCode;\n      children = node.children, bufferedCode = node.bufferedCode, unbufferedCode = node.unbufferedCode, text = node.text;\n      if (unbufferedCode) {\n        indent = true;\n        contents = [unbufferedCode];\n      } else if (bufferedCode) {\n        contents = this.buffer(bufferedCode);\n      } else if (text) {\n        contents = this.buffer(JSON.stringify(text));\n      } else if (node.tag) {\n        contents = [];\n      } else if (node.comment) {\n        return [];\n      } else {\n        contents = [];\n        console.warn(\"No content for node:\", node);\n      }\n      if (children) {\n        childContent = this.renderNodes(children);\n        if (indent) {\n          childContent = this.indent(childContent.join(\"\\n\"));\n        }\n        contents = contents.concat(childContent);\n      }\n      return contents;\n    },\n    renderNodes: function(nodes) {\n      return [].concat.apply([], nodes.map(this.render, this));\n    },\n    tag: function(node) {\n      var tag;\n      tag = node.tag;\n      return this.element(tag, this.attributes(node), this.contents(node));\n    }\n  };\n\n  exports.compile = function(parseTree, _arg) {\n    var compiler, exports, items, options, program, programSource, runtime, source, _ref;\n    _ref = _arg != null ? _arg : {}, compiler = _ref.compiler, runtime = _ref.runtime, exports = _ref.exports;\n    if (runtime == null) {\n      runtime = \"require\" + \"(\\\"hamlet-runtime\\\")\";\n    }\n    if (exports == null) {\n      exports = \"module.exports\";\n    }\n    items = util.renderNodes(parseTree);\n    if (exports) {\n      exports = \"\" + exports + \" = \";\n    } else {\n      exports = \"\";\n    }\n    source = \"\" + exports + \"(data) ->\\n  \\\"use strict\\\"\\n  (->\\n    \" + ROOT_NAME + \" = \" + runtime + \"(this)\\n\\n\" + (util.indent(items.join(\"\\n\"), \"    \")) + \"\\n    return \" + ROOT_NAME + \".root\\n  ).call(data)\";\n    options = {\n      bare: true\n    };\n    programSource = source;\n    program = compiler.compile(programSource, options);\n    return program;\n  };\n\n}).call(this);\n\n},{}],2:[function(_dereq_,module,exports){\n// Generated by CoffeeScript 1.7.1\n(function() {\n  var compile, parser;\n\n  compile = _dereq_(\"./compiler\").compile;\n\n  parser = _dereq_(\"hamlet-parser\");\n\n  module.exports = {\n    compile: function(input, options) {\n      if (options == null) {\n        options = {};\n      }\n      if (typeof input === \"string\") {\n        input = parser.parse(input);\n      }\n      return compile(input, options);\n    },\n    parser: parser\n  };\n\n}).call(this);\n\n},{\"./compiler\":1,\"hamlet-parser\":8}],3:[function(_dereq_,module,exports){\n\n},{}],4:[function(_dereq_,module,exports){\n(function (process){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n}).call(this,_dereq_(\"FWaASH\"))\n},{\"FWaASH\":5}],5:[function(_dereq_,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    if (canPost) {\n        var queue = [];\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n}\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n\n},{}],6:[function(_dereq_,module,exports){\n/* generated by jison-lex 0.2.1 */\nvar haml_lexer = (function(){\nvar lexer = {\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input) {\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"moduleName\":\"haml_lexer\"},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\n\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return 'SEPARATOR';\nbreak;\ncase 1:this.popState(); return 'RIGHT_PARENTHESIS';\nbreak;\ncase 2:return 'ATTRIBUTE';\nbreak;\ncase 3:this.begin('value'); return 'EQUAL';\nbreak;\ncase 4:return 'AT_ATTRIBUTE';\nbreak;\ncase 5:this.popState(); return 'ATTRIBUTE_VALUE';\nbreak;\ncase 6:this.popState(); return 'ATTRIBUTE_VALUE';\nbreak;\ncase 7:this.popState(); return 'ATTRIBUTE_VALUE';\nbreak;\ncase 8:yy.indent = 0; this.popState(); return 'NEWLINE';\nbreak;\ncase 9:return 'FILTER_LINE';\nbreak;\ncase 10:yy.indent = 0; return 'NEWLINE';\nbreak;\ncase 11:yy.indent += 1; if(yy.indent > yy.filterIndent){this.begin('filter'); }; return 'INDENT';\nbreak;\ncase 12:this.begin(\"parentheses_attributes\"); return 'LEFT_PARENTHESIS';\nbreak;\ncase 13:yy_.yytext = yy_.yytext.substring(1); return 'COMMENT';\nbreak;\ncase 14:yy.filterIndent = yy.indent; yy_.yytext = yy_.yytext.substring(1); return 'FILTER';\nbreak;\ncase 15:yy_.yytext = yy_.yytext.substring(1); return 'ID';\nbreak;\ncase 16:yy_.yytext = yy_.yytext.substring(1); return 'CLASS';\nbreak;\ncase 17:yy_.yytext = yy_.yytext.substring(1); return 'TAG';\nbreak;\ncase 18:yy_.yytext = yy_.yytext.substring(1).trim(); return 'BUFFERED_CODE';\nbreak;\ncase 19:yy_.yytext = yy_.yytext.substring(1).trim(); return 'UNBUFFERED_CODE';\nbreak;\ncase 20:yy_.yytext = yy_.yytext.trim(); return 'TEXT';\nbreak;\n}\n},\nrules: [/^(?:[ \\t]+)/,/^(?:\\))/,/^(?:([_a-zA-Z][-_a-zA-Z0-9]*))/,/^(?:=)/,/^(?:@([_a-zA-Z][-_a-zA-Z0-9]*))/,/^(?:\"(\\\\.|[^\\\\\"])*\")/,/^(?:'(\\\\.|[^\\\\'])*')/,/^(?:[^ \\t\\)]*)/,/^(?:(\\n|$))/,/^(?:[^\\n]*)/,/^(?:\\s*(\\n|$))/,/^(?:(  |\\\\t))/,/^(?:\\()/,/^(?:\\/.*)/,/^(?::([_a-zA-Z][-_a-zA-Z0-9]*))/,/^(?:#((:|[A-Z]|_|[a-z])((:|[A-Z]|_|[a-z])|-|[0-9])*(?!-)))/,/^(?:\\.((:|[A-Z]|_|[a-z])((:|[A-Z]|_|[a-z])|-|[0-9])*(?!-)))/,/^(?:%((:|[A-Z]|_|[a-z])((:|[A-Z]|_|[a-z])|-|[0-9])*(?!-)))/,/^(?:=.*)/,/^(?:-.*)/,/^(?:.*)/],\nconditions: {\"filter\":{\"rules\":[8,9],\"inclusive\":false},\"value\":{\"rules\":[5,6,7],\"inclusive\":false},\"parentheses_attributes\":{\"rules\":[0,1,2,3,4],\"inclusive\":false},\"INITIAL\":{\"rules\":[10,11,12,13,14,15,16,17,18,19,20],\"inclusive\":true}}\n};\nreturn lexer;\n})();module.exports = haml_lexer;\n\n},{}],7:[function(_dereq_,module,exports){\n/* generated by jison-lex 0.2.1 */\nvar jade_lexer = (function(){\nvar lexer = {\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input) {\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"moduleName\":\"jade_lexer\"},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\n\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return 'SEPARATOR';\nbreak;\ncase 1:this.popState(); return 'RIGHT_PARENTHESIS';\nbreak;\ncase 2:return 'ATTRIBUTE';\nbreak;\ncase 3:this.begin('value'); return 'EQUAL';\nbreak;\ncase 4:return 'AT_ATTRIBUTE';\nbreak;\ncase 5:this.popState(); return 'ATTRIBUTE_VALUE';\nbreak;\ncase 6:this.popState(); return 'ATTRIBUTE_VALUE';\nbreak;\ncase 7:this.popState(); return 'ATTRIBUTE_VALUE';\nbreak;\ncase 8:yy.indent = 0; this.popState(); return 'NEWLINE';\nbreak;\ncase 9:return 'FILTER_LINE';\nbreak;\ncase 10:yy.indent = 0; return 'NEWLINE';\nbreak;\ncase 11:yy.indent += 1; if(yy.indent > yy.filterIndent){this.begin('filter'); }; return 'INDENT';\nbreak;\ncase 12:this.begin(\"parentheses_attributes\"); return 'LEFT_PARENTHESIS';\nbreak;\ncase 13:yy_.yytext = yy_.yytext.substring(2); return 'COMMENT';\nbreak;\ncase 14:yy.filterIndent = yy.indent; yy_.yytext = yy_.yytext.substring(1); return 'FILTER';\nbreak;\ncase 15:yy_.yytext = yy_.yytext.substring(1); return 'ID';\nbreak;\ncase 16:yy_.yytext = yy_.yytext.substring(1); return 'CLASS';\nbreak;\ncase 17:return 'TAG';\nbreak;\ncase 18:yy_.yytext = yy_.yytext.substring(1).trim(); return 'BUFFERED_CODE';\nbreak;\ncase 19:yy_.yytext = yy_.yytext.substring(1).trim(); return 'UNBUFFERED_CODE';\nbreak;\ncase 20:yy_.yytext = yy_.yytext.trim(); return 'TEXT';\nbreak;\n}\n},\nrules: [/^(?:[ \\t]+)/,/^(?:\\))/,/^(?:([_a-zA-Z][-_a-zA-Z0-9]*))/,/^(?:=)/,/^(?:@([_a-zA-Z][-_a-zA-Z0-9]*))/,/^(?:\"(\\\\.|[^\\\\\"])*\")/,/^(?:'(\\\\.|[^\\\\'])*')/,/^(?:[^ \\t\\)]*)/,/^(?:(\\n|$))/,/^(?:[^\\n]*)/,/^(?:\\s*(\\n|$))/,/^(?:(  |\\\\t))/,/^(?:\\()/,/^(?:\\/\\/.*)/,/^(?::([_a-zA-Z][-_a-zA-Z0-9]*))/,/^(?:#((:|[A-Z]|_|[a-z])((:|[A-Z]|_|[a-z])|-|[0-9])*(?!-)))/,/^(?:\\.((:|[A-Z]|_|[a-z])((:|[A-Z]|_|[a-z])|-|[0-9])*(?!-)))/,/^(?:((:|[A-Z]|_|[a-z])((:|[A-Z]|_|[a-z])|-|[0-9])*(?!-)))/,/^(?:=.*)/,/^(?:-.*)/,/^(?:.*)/],\nconditions: {\"filter\":{\"rules\":[8,9],\"inclusive\":false},\"value\":{\"rules\":[5,6,7],\"inclusive\":false},\"parentheses_attributes\":{\"rules\":[0,1,2,3,4],\"inclusive\":false},\"INITIAL\":{\"rules\":[10,11,12,13,14,15,16,17,18,19,20],\"inclusive\":true}}\n};\nreturn lexer;\n})();module.exports = jade_lexer;\n\n},{}],8:[function(_dereq_,module,exports){\n// Generated by CoffeeScript 1.7.1\n(function() {\n  var extend, lexers, oldParse, parser,\n    __slice = [].slice;\n\n  parser = _dereq_(\"./parser\").parser;\n\n  lexers = {\n    haml: _dereq_(\"./haml_lexer\"),\n    jade: _dereq_(\"./jade_lexer\")\n  };\n\n  extend = function() {\n    var name, source, sources, target, _i, _len;\n    target = arguments[0], sources = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    for (_i = 0, _len = sources.length; _i < _len; _i++) {\n      source = sources[_i];\n      for (name in source) {\n        target[name] = source[name];\n      }\n    }\n    return target;\n  };\n\n  oldParse = parser.parse;\n\n  extend(parser, {\n    parse: function(input, mode) {\n      if (mode == null) {\n        mode = \"haml\";\n      }\n      parser.lexer = lexers[mode];\n      extend(parser.yy, {\n        indent: 0,\n        nodePath: [\n          {\n            children: []\n          }\n        ],\n        filterIndent: void 0\n      });\n      return oldParse.call(parser, input);\n    }\n  });\n\n  extend(parser.yy, {\n    extend: extend,\n    newline: function() {\n      var lastNode;\n      lastNode = this.nodePath[this.nodePath.length - 1];\n      if (lastNode.filter) {\n        return this.appendFilterContent(lastNode, \"\");\n      }\n    },\n    lastParent: function(indentation) {\n      var parent;\n      while (!(parent = this.nodePath[indentation])) {\n        indentation -= 1;\n      }\n      return parent;\n    },\n    append: function(node, indentation) {\n      var index, lastNode, parent;\n      if (indentation == null) {\n        indentation = 0;\n      }\n      if (node.filterLine) {\n        lastNode = this.nodePath[this.nodePath.length - 1];\n        this.appendFilterContent(lastNode, node.filterLine);\n        return;\n      }\n      parent = this.lastParent(indentation);\n      this.appendChild(parent, node);\n      index = indentation + 1;\n      this.nodePath[index] = node;\n      this.nodePath.length = index + 1;\n      return node;\n    },\n    appendChild: function(parent, child) {\n      if (!child.filter) {\n        this.filterIndent = void 0;\n        this.lexer.popState();\n      }\n      parent.children || (parent.children = []);\n      return parent.children.push(child);\n    },\n    appendFilterContent: function(filter, content) {\n      filter.content || (filter.content = \"\");\n      return filter.content += \"\" + content + \"\\n\";\n    }\n  });\n\n  module.exports = parser;\n\n}).call(this);\n\n},{\"./haml_lexer\":6,\"./jade_lexer\":7,\"./parser\":9}],9:[function(_dereq_,module,exports){\n(function (process){\n/* parser generated by jison 0.4.13 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"root\":3,\"lines\":4,\"line\":5,\"indentation\":6,\"indentationLevel\":7,\"INDENT\":8,\"lineMain\":9,\"end\":10,\"tag\":11,\"rest\":12,\"COMMENT\":13,\"FILTER\":14,\"FILTER_LINE\":15,\"NEWLINE\":16,\"name\":17,\"tagComponents\":18,\"attributes\":19,\"idComponent\":20,\"classComponents\":21,\"ID\":22,\"CLASS\":23,\"LEFT_PARENTHESIS\":24,\"attributePairs\":25,\"RIGHT_PARENTHESIS\":26,\"SEPARATOR\":27,\"attributePair\":28,\"ATTRIBUTE\":29,\"EQUAL\":30,\"ATTRIBUTE_VALUE\":31,\"AT_ATTRIBUTE\":32,\"TAG\":33,\"BUFFERED_CODE\":34,\"UNBUFFERED_CODE\":35,\"TEXT\":36,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",8:\"INDENT\",13:\"COMMENT\",14:\"FILTER\",15:\"FILTER_LINE\",16:\"NEWLINE\",22:\"ID\",23:\"CLASS\",24:\"LEFT_PARENTHESIS\",26:\"RIGHT_PARENTHESIS\",27:\"SEPARATOR\",29:\"ATTRIBUTE\",30:\"EQUAL\",31:\"ATTRIBUTE_VALUE\",32:\"AT_ATTRIBUTE\",33:\"TAG\",34:\"BUFFERED_CODE\",35:\"UNBUFFERED_CODE\",36:\"TEXT\"},\nproductions_: [0,[3,1],[4,2],[4,1],[6,0],[6,1],[7,2],[7,1],[5,3],[5,1],[9,2],[9,1],[9,1],[9,1],[9,1],[9,1],[10,1],[11,2],[11,2],[11,1],[11,1],[18,3],[18,2],[18,2],[18,2],[18,1],[18,1],[20,1],[21,2],[21,1],[19,3],[25,3],[25,1],[28,3],[28,1],[17,1],[12,1],[12,1],[12,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:return this.$ = yy.nodePath[0].children;\nbreak;\ncase 2:this.$ = $$[$0-1];\nbreak;\ncase 3:this.$ = $$[$0];\nbreak;\ncase 4:this.$ = 0;\nbreak;\ncase 5:this.$ = $$[$0];\nbreak;\ncase 6:this.$ = $$[$0-1] + 1;\nbreak;\ncase 7:this.$ = 1;\nbreak;\ncase 8:this.$ = yy.append($$[$0-1], $$[$0-2]);\nbreak;\ncase 9:this.$ = (function () {\n        if ($$[$0].newline) {\n          return yy.newline();\n        }\n      }());\nbreak;\ncase 10:this.$ = yy.extend($$[$0-1], $$[$0]);\nbreak;\ncase 11:this.$ = $$[$0];\nbreak;\ncase 12:this.$ = $$[$0];\nbreak;\ncase 13:this.$ = {\n          comment: $$[$0]\n        };\nbreak;\ncase 14:this.$ = {\n          filter: $$[$0]\n        };\nbreak;\ncase 15:this.$ = {\n          filterLine: $$[$0]\n        };\nbreak;\ncase 16:this.$ = {\n          newline: true\n        };\nbreak;\ncase 17:this.$ = (function () {\n        $$[$0].tag = $$[$0-1];\n        return $$[$0];\n      }());\nbreak;\ncase 18:this.$ = {\n          tag: $$[$0-1],\n          attributes: $$[$0]\n        };\nbreak;\ncase 19:this.$ = {\n          tag: $$[$0]\n        };\nbreak;\ncase 20:this.$ = yy.extend($$[$0], {\n          tag: \"div\"\n        });\nbreak;\ncase 21:this.$ = {\n          id: $$[$0-2],\n          classes: $$[$0-1],\n          attributes: $$[$0]\n        };\nbreak;\ncase 22:this.$ = {\n          id: $$[$0-1],\n          attributes: $$[$0]\n        };\nbreak;\ncase 23:this.$ = {\n          classes: $$[$0-1],\n          attributes: $$[$0]\n        };\nbreak;\ncase 24:this.$ = {\n          id: $$[$0-1],\n          classes: $$[$0]\n        };\nbreak;\ncase 25:this.$ = {\n          id: $$[$0]\n        };\nbreak;\ncase 26:this.$ = {\n          classes: $$[$0]\n        };\nbreak;\ncase 27:this.$ = $$[$0];\nbreak;\ncase 28:this.$ = $$[$0-1].concat($$[$0]);\nbreak;\ncase 29:this.$ = [$$[$0]];\nbreak;\ncase 30:this.$ = $$[$0-1];\nbreak;\ncase 31:this.$ = $$[$0-2].concat($$[$0]);\nbreak;\ncase 32:this.$ = [$$[$0]];\nbreak;\ncase 33:this.$ = {\n          name: $$[$0-2],\n          value: $$[$0]\n        };\nbreak;\ncase 34:this.$ = {\n          name: $$[$0].substring(1),\n          value: $$[$0]\n        };\nbreak;\ncase 35:this.$ = $$[$0];\nbreak;\ncase 36:this.$ = {\n          bufferedCode: $$[$0]\n        };\nbreak;\ncase 37:this.$ = {\n          unbufferedCode: $$[$0]\n        };\nbreak;\ncase 38:this.$ = {\n          text: $$[$0] + \"\\n\"\n        };\nbreak;\n}\n},\ntable: [{3:1,4:2,5:3,6:4,7:6,8:[1,8],10:5,13:[2,4],14:[2,4],15:[2,4],16:[1,7],22:[2,4],23:[2,4],33:[2,4],34:[2,4],35:[2,4],36:[2,4]},{1:[3]},{1:[2,1],5:9,6:4,7:6,8:[1,8],10:5,13:[2,4],14:[2,4],15:[2,4],16:[1,7],22:[2,4],23:[2,4],33:[2,4],34:[2,4],35:[2,4],36:[2,4]},{1:[2,3],8:[2,3],13:[2,3],14:[2,3],15:[2,3],16:[2,3],22:[2,3],23:[2,3],33:[2,3],34:[2,3],35:[2,3],36:[2,3]},{9:10,11:11,12:12,13:[1,13],14:[1,14],15:[1,15],17:16,18:17,20:22,21:23,22:[1,24],23:[1,25],33:[1,21],34:[1,18],35:[1,19],36:[1,20]},{1:[2,9],8:[2,9],13:[2,9],14:[2,9],15:[2,9],16:[2,9],22:[2,9],23:[2,9],33:[2,9],34:[2,9],35:[2,9],36:[2,9]},{8:[1,26],13:[2,5],14:[2,5],15:[2,5],22:[2,5],23:[2,5],33:[2,5],34:[2,5],35:[2,5],36:[2,5]},{1:[2,16],8:[2,16],13:[2,16],14:[2,16],15:[2,16],16:[2,16],22:[2,16],23:[2,16],33:[2,16],34:[2,16],35:[2,16],36:[2,16]},{8:[2,7],13:[2,7],14:[2,7],15:[2,7],22:[2,7],23:[2,7],33:[2,7],34:[2,7],35:[2,7],36:[2,7]},{1:[2,2],8:[2,2],13:[2,2],14:[2,2],15:[2,2],16:[2,2],22:[2,2],23:[2,2],33:[2,2],34:[2,2],35:[2,2],36:[2,2]},{10:27,16:[1,7]},{12:28,16:[2,11],34:[1,18],35:[1,19],36:[1,20]},{16:[2,12]},{16:[2,13]},{16:[2,14]},{16:[2,15]},{16:[2,19],18:29,19:30,20:22,21:23,22:[1,24],23:[1,25],24:[1,31],34:[2,19],35:[2,19],36:[2,19]},{16:[2,20],34:[2,20],35:[2,20],36:[2,20]},{16:[2,36]},{16:[2,37]},{16:[2,38]},{16:[2,35],22:[2,35],23:[2,35],24:[2,35],34:[2,35],35:[2,35],36:[2,35]},{16:[2,25],19:33,21:32,23:[1,25],24:[1,31],34:[2,25],35:[2,25],36:[2,25]},{16:[2,26],19:34,23:[1,35],24:[1,31],34:[2,26],35:[2,26],36:[2,26]},{16:[2,27],23:[2,27],24:[2,27],34:[2,27],35:[2,27],36:[2,27]},{16:[2,29],23:[2,29],24:[2,29],34:[2,29],35:[2,29],36:[2,29]},{8:[2,6],13:[2,6],14:[2,6],15:[2,6],22:[2,6],23:[2,6],33:[2,6],34:[2,6],35:[2,6],36:[2,6]},{1:[2,8],8:[2,8],13:[2,8],14:[2,8],15:[2,8],16:[2,8],22:[2,8],23:[2,8],33:[2,8],34:[2,8],35:[2,8],36:[2,8]},{16:[2,10]},{16:[2,17],34:[2,17],35:[2,17],36:[2,17]},{16:[2,18],34:[2,18],35:[2,18],36:[2,18]},{25:36,28:37,29:[1,38],32:[1,39]},{16:[2,24],19:40,23:[1,35],24:[1,31],34:[2,24],35:[2,24],36:[2,24]},{16:[2,22],34:[2,22],35:[2,22],36:[2,22]},{16:[2,23],34:[2,23],35:[2,23],36:[2,23]},{16:[2,28],23:[2,28],24:[2,28],34:[2,28],35:[2,28],36:[2,28]},{26:[1,41],27:[1,42]},{26:[2,32],27:[2,32]},{30:[1,43]},{26:[2,34],27:[2,34]},{16:[2,21],34:[2,21],35:[2,21],36:[2,21]},{16:[2,30],34:[2,30],35:[2,30],36:[2,30]},{28:44,29:[1,38],32:[1,39]},{31:[1,45]},{26:[2,31],27:[2,31]},{26:[2,33],27:[2,33]}],\ndefaultActions: {12:[2,12],13:[2,13],14:[2,14],15:[2,15],18:[2,36],19:[2,37],20:[2,38],28:[2,10]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        throw new Error(str);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    this.lexer.setInput(input);\n    this.lexer.yy = this.yy;\n    this.yy.lexer = this.lexer;\n    this.yy.parser = this;\n    if (typeof this.lexer.yylloc == 'undefined') {\n        this.lexer.yylloc = {};\n    }\n    var yyloc = this.lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = this.lexer.options && this.lexer.options.ranges;\n    if (typeof this.yy.parseError === 'function') {\n        this.parseError = this.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    function lex() {\n        var token;\n        token = self.lexer.lex() || EOF;\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (this.lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + this.lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: this.lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: this.lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(this.lexer.yytext);\n            lstack.push(this.lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = this.lexer.yyleng;\n                yytext = this.lexer.yytext;\n                yylineno = this.lexer.yylineno;\n                yyloc = this.lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                this.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof _dereq_ !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\nexports.main = function commonjsMain(args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = _dereq_('fs').readFileSync(_dereq_('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && _dereq_.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}\n}).call(this,_dereq_(\"FWaASH\"))\n},{\"FWaASH\":5,\"fs\":3,\"path\":4}]},{},[2])\n(2)\n});",
      "mode": "100644"
    },
    "lib/hamlet-runtime.js": {
      "path": "lib/hamlet-runtime.js",
      "content": "!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.Hamlet=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n// Generated by CoffeeScript 1.7.1\n(function() {\n  \"use strict\";\n  var Observable, Runtime, bindEvent, bindObservable, bufferTo, classes, contentBind, createElement, empty, eventNames, get, id, initContent, isEvent, isFragment, makeElement, observeAttribute, observeAttributes, observeContent, specialBindings, valueBind, valueIndexOf;\n\n  Observable = _dereq_(\"o_0\");\n\n  eventNames = \"abort\\nblur\\nchange\\nclick\\ndblclick\\ndrag\\ndragend\\ndragenter\\ndragleave\\ndragover\\ndragstart\\ndrop\\nerror\\nfocus\\ninput\\nkeydown\\nkeypress\\nkeyup\\nload\\nmousedown\\nmousemove\\nmouseout\\nmouseover\\nmouseup\\nreset\\nresize\\nscroll\\nselect\\nsubmit\\ntouchcancel\\ntouchend\\ntouchenter\\ntouchleave\\ntouchmove\\ntouchstart\\nunload\".split(\"\\n\");\n\n  isEvent = function(name) {\n    return eventNames.indexOf(name) !== -1;\n  };\n\n  isFragment = function(node) {\n    return (node != null ? node.nodeType : void 0) === 11;\n  };\n\n  initContent = function(element) {\n    var allContent, update;\n    if (element._hamlet_content) {\n      return element._hamlet_content;\n    }\n    allContent = (element._hamlet_content != null ? element._hamlet_content : element._hamlet_content = Observable.concat());\n    update = function() {\n      empty(element);\n      return allContent.each(function(item) {\n        return element.appendChild(item);\n      });\n    };\n    bindObservable(element, allContent, null, update);\n    return allContent;\n  };\n\n  contentBind = function(element, value) {\n    initContent(element).push(value);\n    return element;\n  };\n\n  valueBind = function(element, value, context) {\n    Observable(function() {\n      var update;\n      value = Observable(value, context);\n      switch (element.nodeName) {\n        case \"SELECT\":\n          element.oninput = element.onchange = function() {\n            var optionValue, _ref, _value;\n            _ref = this.children[this.selectedIndex], optionValue = _ref.value, _value = _ref._value;\n            return value(_value || optionValue);\n          };\n          update = function(newValue) {\n            var options;\n            element._value = newValue;\n            if ((options = element._options)) {\n              if (newValue.value != null) {\n                return element.value = (typeof newValue.value === \"function\" ? newValue.value() : void 0) || newValue.value;\n              } else {\n                return element.selectedIndex = valueIndexOf(options, newValue);\n              }\n            } else {\n              return element.value = newValue;\n            }\n          };\n          return bindObservable(element, value, context, update);\n        default:\n          element.oninput = element.onchange = function() {\n            return value(element.value);\n          };\n          if (typeof element.attachEvent === \"function\") {\n            element.attachEvent(\"onkeydown\", function() {\n              return setTimeout(function() {\n                return value(element.value);\n              }, 0);\n            });\n          }\n          return bindObservable(element, value, context, function(newValue) {\n            if (element.value !== newValue) {\n              return element.value = newValue;\n            }\n          });\n      }\n    });\n  };\n\n  specialBindings = {\n    INPUT: {\n      checked: function(element, value, context) {\n        element.onchange = function() {\n          return typeof value === \"function\" ? value(element.checked) : void 0;\n        };\n        return bindObservable(element, value, context, function(newValue) {\n          return element.checked = newValue;\n        });\n      }\n    },\n    SELECT: {\n      options: function(element, values, context) {\n        var updateValues;\n        values = Observable(values, context);\n        updateValues = function(values) {\n          empty(element);\n          element._options = values;\n          return values.map(function(value, index) {\n            var option, optionName, optionValue;\n            option = createElement(\"option\");\n            option._value = value;\n            if (typeof value === \"object\") {\n              optionValue = (value != null ? value.value : void 0) || index;\n            } else {\n              optionValue = value.toString();\n            }\n            bindObservable(option, optionValue, value, function(newValue) {\n              return option.value = newValue;\n            });\n            optionName = (value != null ? value.name : void 0) || value;\n            bindObservable(option, optionName, value, function(newValue) {\n              return option.textContent = option.innerText = newValue;\n            });\n            element.appendChild(option);\n            if (value === element._value) {\n              element.selectedIndex = index;\n            }\n            return option;\n          });\n        };\n        return bindObservable(element, values, context, updateValues);\n      }\n    }\n  };\n\n  observeAttribute = function(element, context, name, value) {\n    var binding, nodeName, _ref;\n    nodeName = element.nodeName;\n    if (name === \"value\") {\n      valueBind(element, value);\n    } else if (binding = (_ref = specialBindings[nodeName]) != null ? _ref[name] : void 0) {\n      binding(element, value, context);\n    } else if (name.match(/^on/) && isEvent(name.substr(2))) {\n      bindEvent(element, name, value, context);\n    } else if (isEvent(name)) {\n      bindEvent(element, \"on\" + name, value, context);\n    } else {\n      bindObservable(element, value, context, function(newValue) {\n        if ((newValue != null) && newValue !== false) {\n          return element.setAttribute(name, newValue);\n        } else {\n          return element.removeAttribute(name);\n        }\n      });\n    }\n    return element;\n  };\n\n  observeAttributes = function(element, context, attributes) {\n    return Object.keys(attributes).forEach(function(name) {\n      var value;\n      value = attributes[name];\n      return observeAttribute(element, context, name, value);\n    });\n  };\n\n  bindObservable = function(element, value, context, update) {\n    var observable, observe, unobserve;\n    observable = Observable(value, context);\n    observe = function() {\n      observable.observe(update);\n      return update(observable());\n    };\n    unobserve = function() {\n      return observable.stopObserving(update);\n    };\n    observe();\n    return element;\n  };\n\n  bindEvent = function(element, name, fn, context) {\n    return element[name] = function() {\n      return fn.apply(context, arguments);\n    };\n  };\n\n  id = function(element, context, sources) {\n    var lastId, update, value;\n    value = Observable.concat.apply(Observable, sources.map(function(source) {\n      return Observable(source, context);\n    }));\n    update = function(newId) {\n      return element.id = newId;\n    };\n    lastId = function() {\n      return value.last();\n    };\n    return bindObservable(element, lastId, context, update);\n  };\n\n  classes = function(element, context, sources) {\n    var classNames, update, value;\n    value = Observable.concat.apply(Observable, sources.map(function(source) {\n      return Observable(source, context);\n    }));\n    update = function(classNames) {\n      return element.className = classNames;\n    };\n    classNames = function() {\n      return value.join(\" \");\n    };\n    return bindObservable(element, classNames, context, update);\n  };\n\n  createElement = function(name) {\n    return document.createElement(name);\n  };\n\n  observeContent = function(element, context, contentFn) {\n    var currentContents, observableContentsFn, update;\n    observableContentsFn = Observable(function() {\n      var contents;\n      contents = Observable.concat();\n      contentFn.call(context, {\n        buffer: bufferTo(context, contents),\n        element: makeElement\n      });\n      return contents;\n    }, context);\n    currentContents = observableContentsFn();\n    update = function() {\n      empty(element);\n      return currentContents.each(function(item) {\n        if (typeof item === \"string\") {\n          return element.appendChild(document.createTextNode(item));\n        } else if (typeof item === \"number\") {\n          return element.appendChild(document.createTextNode(item));\n        } else if (typeof item === \"boolean\") {\n          return element.appendChild(document.createTextNode(item));\n        } else {\n          return element.appendChild(item);\n        }\n      });\n    };\n    observableContentsFn.observe(function(newContents) {\n      currentContents.stopObserving(update);\n      currentContents = newContents;\n      currentContents.observe(update);\n      return update();\n    });\n    currentContents.observe(update);\n    return update();\n  };\n\n  bufferTo = function(context, collection) {\n    return function(content) {\n      if (typeof content === 'function') {\n        content = Observable(content, context);\n      }\n      collection.push(content);\n      return content;\n    };\n  };\n\n  makeElement = function(name, context, attributes, fn) {\n    var element;\n    if (attributes == null) {\n      attributes = {};\n    }\n    element = createElement(name);\n    Observable(function() {\n      if (attributes.id != null) {\n        id(element, context, attributes.id);\n        delete attributes.id;\n      }\n      if (attributes[\"class\"] != null) {\n        classes(element, context, attributes[\"class\"]);\n        delete attributes[\"class\"];\n      }\n      observeAttributes(element, context, attributes);\n      if (element.nodeName !== \"SELECT\") {\n        return observeContent(element, context, fn);\n      }\n    });\n    return element;\n  };\n\n  Runtime = function(context) {\n    var self;\n    self = {\n      buffer: function(content) {\n        if (self.root) {\n          throw \"Cannot have multiple root elements\";\n        }\n        return self.root = content;\n      },\n      element: makeElement,\n      filter: function(name, content) {}\n    };\n    return self;\n  };\n\n  Runtime.VERSION = _dereq_(\"../package.json\").version;\n\n  Runtime.Observable = Observable;\n\n  module.exports = Runtime;\n\n  empty = function(node) {\n    var child, _results;\n    _results = [];\n    while (child = node.firstChild) {\n      _results.push(node.removeChild(child));\n    }\n    return _results;\n  };\n\n  valueIndexOf = function(options, value) {\n    if (typeof value === \"object\") {\n      return options.indexOf(value);\n    } else {\n      return options.map(function(option) {\n        return option.toString();\n      }).indexOf(value.toString());\n    }\n  };\n\n  get = function(x) {\n    if (typeof x === 'function') {\n      return x();\n    } else {\n      return x;\n    }\n  };\n\n}).call(this);\n\n},{\"../package.json\":3,\"o_0\":2}],2:[function(_dereq_,module,exports){\n(function (global){\n// Generated by CoffeeScript 1.8.0\n(function() {\n  var Observable, autoDeps, computeDependencies, copy, extend, flatten, get, last, magicDependency, remove, splat, withBase,\n    __slice = [].slice;\n\n  Observable = function(value, context) {\n    var changed, fn, listeners, notify, notifyReturning, self;\n    if (typeof (value != null ? value.observe : void 0) === \"function\") {\n      return value;\n    }\n    listeners = [];\n    notify = function(newValue) {\n      return copy(listeners).forEach(function(listener) {\n        return listener(newValue);\n      });\n    };\n    if (typeof value === 'function') {\n      fn = value;\n      self = function() {\n        magicDependency(self);\n        return value;\n      };\n      changed = function() {\n        value = computeDependencies(self, fn, changed, context);\n        return notify(value);\n      };\n      value = computeDependencies(self, fn, changed, context);\n    } else {\n      self = function(newValue) {\n        if (arguments.length > 0) {\n          if (value !== newValue) {\n            value = newValue;\n            notify(newValue);\n          }\n        } else {\n          magicDependency(self);\n        }\n        return value;\n      };\n    }\n    self.each = function(callback) {\n      magicDependency(self);\n      if (value != null) {\n        [value].forEach(function(item) {\n          return callback.call(item, item);\n        });\n      }\n      return self;\n    };\n    if (Array.isArray(value)) {\n      [\"concat\", \"every\", \"filter\", \"forEach\", \"indexOf\", \"join\", \"lastIndexOf\", \"map\", \"reduce\", \"reduceRight\", \"slice\", \"some\"].forEach(function(method) {\n        return self[method] = function() {\n          var args;\n          args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n          magicDependency(self);\n          return value[method].apply(value, args);\n        };\n      });\n      [\"pop\", \"push\", \"reverse\", \"shift\", \"splice\", \"sort\", \"unshift\"].forEach(function(method) {\n        return self[method] = function() {\n          var args;\n          args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n          return notifyReturning(value[method].apply(value, args));\n        };\n      });\n      notifyReturning = function(returnValue) {\n        notify(value);\n        return returnValue;\n      };\n      extend(self, {\n        each: function(callback) {\n          self.forEach(function(item, index) {\n            return callback.call(item, item, index, self);\n          });\n          return self;\n        },\n        remove: function(object) {\n          var index;\n          index = value.indexOf(object);\n          if (index >= 0) {\n            return notifyReturning(value.splice(index, 1)[0]);\n          }\n        },\n        get: function(index) {\n          magicDependency(self);\n          return value[index];\n        },\n        first: function() {\n          magicDependency(self);\n          return value[0];\n        },\n        last: function() {\n          magicDependency(self);\n          return value[value.length - 1];\n        },\n        size: function() {\n          magicDependency(self);\n          return value.length;\n        }\n      });\n    }\n    extend(self, {\n      listeners: listeners,\n      observe: function(listener) {\n        return listeners.push(listener);\n      },\n      stopObserving: function(fn) {\n        return remove(listeners, fn);\n      },\n      toggle: function() {\n        return self(!value);\n      },\n      increment: function(n) {\n        return self(value + n);\n      },\n      decrement: function(n) {\n        return self(value - n);\n      },\n      toString: function() {\n        return \"Observable(\" + value + \")\";\n      }\n    });\n    return self;\n  };\n\n  Observable.concat = function() {\n    var args, o;\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    args = Observable(args);\n    o = Observable(function() {\n      return flatten(args.map(splat));\n    });\n    o.push = args.push;\n    return o;\n  };\n\n  module.exports = Observable;\n\n  extend = function() {\n    var name, source, sources, target, _i, _len;\n    target = arguments[0], sources = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    for (_i = 0, _len = sources.length; _i < _len; _i++) {\n      source = sources[_i];\n      for (name in source) {\n        target[name] = source[name];\n      }\n    }\n    return target;\n  };\n\n  global.OBSERVABLE_ROOT_HACK = [];\n\n  autoDeps = function() {\n    return last(global.OBSERVABLE_ROOT_HACK);\n  };\n\n  magicDependency = function(self) {\n    var observerStack;\n    if (observerStack = autoDeps()) {\n      return observerStack.push(self);\n    }\n  };\n\n  withBase = function(self, update, fn) {\n    var deps, value, _ref;\n    global.OBSERVABLE_ROOT_HACK.push(deps = []);\n    try {\n      value = fn();\n      if ((_ref = self._deps) != null) {\n        _ref.forEach(function(observable) {\n          return observable.stopObserving(update);\n        });\n      }\n      self._deps = deps;\n      deps.forEach(function(observable) {\n        return observable.observe(update);\n      });\n    } finally {\n      global.OBSERVABLE_ROOT_HACK.pop();\n    }\n    return value;\n  };\n\n  computeDependencies = function(self, fn, update, context) {\n    return withBase(self, update, function() {\n      return fn.call(context);\n    });\n  };\n\n  remove = function(array, value) {\n    var index;\n    index = array.indexOf(value);\n    if (index >= 0) {\n      return array.splice(index, 1)[0];\n    }\n  };\n\n  copy = function(array) {\n    return array.concat([]);\n  };\n\n  get = function(arg) {\n    if (typeof arg === \"function\") {\n      return arg();\n    } else {\n      return arg;\n    }\n  };\n\n  splat = function(item) {\n    var result, results;\n    results = [];\n    if (item == null) {\n      return results;\n    }\n    if (typeof item.forEach === \"function\") {\n      item.forEach(function(i) {\n        return results.push(i);\n      });\n    } else {\n      result = get(item);\n      if (result != null) {\n        results.push(result);\n      }\n    }\n    return results;\n  };\n\n  last = function(array) {\n    return array[array.length - 1];\n  };\n\n  flatten = function(array) {\n    return array.reduce(function(a, b) {\n      return a.concat(b);\n    }, []);\n  };\n\n}).call(this);\n\n}).call(this,typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],3:[function(_dereq_,module,exports){\nmodule.exports={\n  \"name\": \"hamlet-runtime\",\n  \"version\": \"0.7.0-pre.0\",\n  \"devDependencies\": {\n    \"browserify\": \"^4.1.11\",\n    \"coffee-script\": \"~1.7.1\",\n    \"hamlet-compiler\": \"0.7.0-pre.0\",\n    \"jsdom\": \"^0.10.5\",\n    \"mocha\": \"~1.12.0\",\n    \"uglify-js\": \"~2.3.6\"\n  },\n  \"dependencies\": {\n    \"o_0\": \"0.3.3\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/dr-coffee-labs/hamlet-compiler.git\"\n  },\n  \"scripts\": {\n    \"prepublish\": \"script/prepublish\",\n    \"test\": \"script/test\"\n  },\n  \"files\": [\n    \"dist/\"\n  ],\n  \"main\": \"dist/runtime.js\"\n}\n\n},{}]},{},[1])\n(1)\n});",
      "mode": "100644"
    }
  },
  "distribution": {
    "main": {
      "path": "main",
      "content": "(function() {\n  var FiletreePresenter, application, style;\n\n  require(\"cornerstone\");\n\n  global.markdown = marked;\n\n  FiletreePresenter = require(\"./presenters/filetree\");\n\n  application = require(\"./application\")();\n\n  style = document.createElement(\"style\");\n\n  style.innerHTML = require(\"./style\");\n\n  document.head.appendChild(style);\n\n  document.body.appendChild(require(\"./template\")(application));\n\n  application.include(require(\"./ace_shim\"));\n\n  global.application = application;\n\n}).call(this);\n",
      "type": "blob"
    },
    "pixie": {
      "path": "pixie",
      "content": "module.exports = {\"version\":\"0.0.1\",\"remoteDependencies\":[\"https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.0/ace.js\",\"https://cdnjs.cloudflare.com/ajax/libs/marked/0.3.2/marked.min.js\",\"https://cdnjs.cloudflare.com/ajax/libs/coffee-script/1.7.1/coffee-script.min.js\"],\"dependencies\":{\"cornerstone\":\"distri/cornerstone:master\",\"s3-uploader\":\"distri/s3-uploader:v0.1.3\",\"styl\":\"distri/styl:v0.2.8.1\"}};",
      "type": "blob"
    },
    "lib/markdown": {
      "path": "lib/markdown",
      "content": "!function(a){function b(){return\"Markdown.mk_block( \"+uneval(this.toString())+\", \"+uneval(this.trailing)+\", \"+uneval(this.lineNumber)+\" )\"}function c(){var a=require(\"util\");return\"Markdown.mk_block( \"+a.inspect(this.toString())+\", \"+a.inspect(this.trailing)+\", \"+a.inspect(this.lineNumber)+\" )\"}function d(a){for(var b=0,c=-1;-1!==(c=a.indexOf(\"\\n\",c+1));)b++;return b}function e(a){return a.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\"/g,\"&quot;\").replace(/'/g,\"&#39;\")}function f(a){if(\"string\"==typeof a)return e(a);var b=a.shift(),c={},d=[];for(!a.length||\"object\"!=typeof a[0]||a[0]instanceof Array||(c=a.shift());a.length;)d.push(f(a.shift()));var g=\"\";for(var h in c)g+=\" \"+h+'=\"'+e(c[h])+'\"';return\"img\"===b||\"br\"===b||\"hr\"===b?\"<\"+b+g+\"/>\":\"<\"+b+g+\">\"+d.join(\"\")+\"</\"+b+\">\"}function g(a,b,c){var d;c=c||{};var e=a.slice(0);\"function\"==typeof c.preprocessTreeNode&&(e=c.preprocessTreeNode(e,b));var f=o(e);if(f){e[1]={};for(d in f)e[1][d]=f[d];f=e[1]}if(\"string\"==typeof e)return e;switch(e[0]){case\"header\":e[0]=\"h\"+e[1].level,delete e[1].level;break;case\"bulletlist\":e[0]=\"ul\";break;case\"numberlist\":e[0]=\"ol\";break;case\"listitem\":e[0]=\"li\";break;case\"para\":e[0]=\"p\";break;case\"markdown\":e[0]=\"html\",f&&delete f.references;break;case\"code_block\":e[0]=\"pre\",d=f?2:1;var h=[\"code\"];h.push.apply(h,e.splice(d,e.length-d)),e[d]=h;break;case\"inlinecode\":e[0]=\"code\";break;case\"img\":e[1].src=e[1].href,delete e[1].href;break;case\"linebreak\":e[0]=\"br\";break;case\"link\":e[0]=\"a\";break;case\"link_ref\":e[0]=\"a\";var i=b[f.ref];if(!i)return f.original;delete f.ref,f.href=i.href,i.title&&(f.title=i.title),delete f.original;break;case\"img_ref\":e[0]=\"img\";var i=b[f.ref];if(!i)return f.original;delete f.ref,f.src=i.href,i.title&&(f.title=i.title),delete f.original}if(d=1,f){for(var j in e[1]){d=2;break}1===d&&e.splice(d,1)}for(;d<e.length;++d)e[d]=g(e[d],b,c);return e}function h(a){for(var b=o(a)?2:1;b<a.length;)\"string\"==typeof a[b]?b+1<a.length&&\"string\"==typeof a[b+1]?a[b]+=a.splice(b+1,1)[0]:++b:(h(a[b]),++b)}function i(a,b){function c(a){this.len_after=a,this.name=\"close_\"+b}var d=a+\"_state\",e=\"strong\"===a?\"em_state\":\"strong_state\";return function(f){if(this[d][0]===b)return this[d].shift(),[f.length,new c(f.length-b.length)];var g=this[e].slice(),h=this[d].slice();this[d].unshift(b);var i=this.processInline(f.substr(b.length)),j=i[i.length-1];if(this[d].shift(),j instanceof c){i.pop();var k=f.length-j.len_after;return[k,[a].concat(i)]}return this[e]=g,this[d]=h,[b.length,b]}}function j(a){for(var b=a.split(\"\"),c=[\"\"],d=!1;b.length;){var e=b.shift();switch(e){case\" \":d?c[c.length-1]+=e:c.push(\"\");break;case\"'\":case'\"':d=!d;break;case\"\\\\\":e=b.shift();default:c[c.length-1]+=e}}return c}var k={};k.mk_block=function(a,d,e){1===arguments.length&&(d=\"\\n\\n\");var f=new String(a);return f.trailing=d,f.inspect=c,f.toSource=b,void 0!==e&&(f.lineNumber=e),f};var l=k.isArray=Array.isArray||function(a){return\"[object Array]\"===Object.prototype.toString.call(a)};k.forEach=Array.prototype.forEach?function(a,b,c){return a.forEach(b,c)}:function(a,b,c){for(var d=0;d<a.length;d++)b.call(c||a,a[d],d,a)},k.isEmpty=function(a){for(var b in a)if(hasOwnProperty.call(a,b))return!1;return!0},k.extract_attr=function(a){return l(a)&&a.length>1&&\"object\"==typeof a[1]&&!l(a[1])?a[1]:void 0};var m=function(a){switch(typeof a){case\"undefined\":this.dialect=m.dialects.Gruber;break;case\"object\":this.dialect=a;break;default:if(!(a in m.dialects))throw new Error(\"Unknown Markdown dialect '\"+String(a)+\"'\");this.dialect=m.dialects[a]}this.em_state=[],this.strong_state=[],this.debug_indent=\"\"};m.dialects={};var n=m.mk_block=k.mk_block,l=k.isArray;m.parse=function(a,b){var c=new m(b);return c.toTree(a)},m.prototype.split_blocks=function(a){a=a.replace(/(\\r\\n|\\n|\\r)/g,\"\\n\");var b,c=/([\\s\\S]+?)($|\\n#|\\n(?:\\s*\\n|$)+)/g,e=[],f=1;for(null!==(b=/^(\\s*\\n)/.exec(a))&&(f+=d(b[0]),c.lastIndex=b[0].length);null!==(b=c.exec(a));)\"\\n#\"===b[2]&&(b[2]=\"\\n\",c.lastIndex--),e.push(n(b[1],b[2],f)),f+=d(b[0]);return e},m.prototype.processBlock=function(a,b){var c=this.dialect.block,d=c.__order__;if(\"__call__\"in c)return c.__call__.call(this,a,b);for(var e=0;e<d.length;e++){var f=c[d[e]].call(this,a,b);if(f)return(!l(f)||f.length>0&&!l(f[0]))&&this.debug(d[e],\"didn't return a proper array\"),f}return[]},m.prototype.processInline=function(a){return this.dialect.inline.__call__.call(this,String(a))},m.prototype.toTree=function(a,b){var c=a instanceof Array?a:this.split_blocks(a),d=this.tree;try{for(this.tree=b||this.tree||[\"markdown\"];c.length;){var e=this.processBlock(c.shift(),c);e.length&&this.tree.push.apply(this.tree,e)}return this.tree}finally{b&&(this.tree=d)}},m.prototype.debug=function(){var a=Array.prototype.slice.call(arguments);a.unshift(this.debug_indent),\"undefined\"!=typeof print&&print.apply(print,a),\"undefined\"!=typeof console&&\"undefined\"!=typeof console.log&&console.log.apply(null,a)},m.prototype.loop_re_over_block=function(a,b,c){for(var d,e=b.valueOf();e.length&&null!==(d=a.exec(e));)e=e.substr(d[0].length),c.call(this,d);return e},m.buildBlockOrder=function(a){var b=[];for(var c in a)\"__order__\"!==c&&\"__call__\"!==c&&b.push(c);a.__order__=b},m.buildInlinePatterns=function(a){var b=[];for(var c in a)if(!c.match(/^__.*__$/)){var d=c.replace(/([\\\\.*+?|()\\[\\]{}])/g,\"\\\\$1\").replace(/\\n/,\"\\\\n\");b.push(1===c.length?d:\"(?:\"+d+\")\")}b=b.join(\"|\"),a.__patterns__=b;var e=a.__call__;a.__call__=function(a,c){return void 0!==c?e.call(this,a,c):e.call(this,a,b)}};var o=k.extract_attr;m.renderJsonML=function(a,b){b=b||{},b.root=b.root||!1;var c=[];if(b.root)c.push(f(a));else for(a.shift(),!a.length||\"object\"!=typeof a[0]||a[0]instanceof Array||a.shift();a.length;)c.push(f(a.shift()));return c.join(\"\\n\\n\")},m.toHTMLTree=function(a,b,c){\"string\"==typeof a&&(a=this.parse(a,b));var d=o(a),e={};d&&d.references&&(e=d.references);var f=g(a,e,c);return h(f),f},m.toHTML=function(a,b,c){var d=this.toHTMLTree(a,b,c);return this.renderJsonML(d)};var p={};p.inline_until_char=function(a,b){for(var c=0,d=[];;){if(a.charAt(c)===b)return c++,[c,d];if(c>=a.length)return null;var e=this.dialect.inline.__oneElement__.call(this,a.substr(c));c+=e[0],d.push.apply(d,e.slice(1))}},p.subclassDialect=function(a){function b(){}function c(){}return b.prototype=a.block,c.prototype=a.inline,{block:new b,inline:new c}};var q=k.forEach,o=k.extract_attr,n=k.mk_block,r=k.isEmpty,s=p.inline_until_char,t={block:{atxHeader:function(a,b){var c=a.match(/^(#{1,6})\\s*(.*?)\\s*#*\\s*(?:\\n|$)/);if(!c)return void 0;var d=[\"header\",{level:c[1].length}];return Array.prototype.push.apply(d,this.processInline(c[2])),c[0].length<a.length&&b.unshift(n(a.substr(c[0].length),a.trailing,a.lineNumber+2)),[d]},setextHeader:function(a,b){var c=a.match(/^(.*)\\n([-=])\\2\\2+(?:\\n|$)/);if(!c)return void 0;var d=\"=\"===c[2]?1:2,e=[\"header\",{level:d},c[1]];return c[0].length<a.length&&b.unshift(n(a.substr(c[0].length),a.trailing,a.lineNumber+2)),[e]},code:function(a,b){var c=[],d=/^(?: {0,3}\\t| {4})(.*)\\n?/;if(!a.match(d))return void 0;a:for(;;){var e=this.loop_re_over_block(d,a.valueOf(),function(a){c.push(a[1])});if(e.length){b.unshift(n(e,a.trailing));break a}if(!b.length)break a;if(!b[0].match(d))break a;c.push(a.trailing.replace(/[^\\n]/g,\"\").substring(2)),a=b.shift()}return[[\"code_block\",c.join(\"\\n\")]]},horizRule:function(a,b){var c=a.match(/^(?:([\\s\\S]*?)\\n)?[ \\t]*([-_*])(?:[ \\t]*\\2){2,}[ \\t]*(?:\\n([\\s\\S]*))?$/);if(!c)return void 0;var d=[[\"hr\"]];if(c[1]){var e=n(c[1],\"\",a.lineNumber);d.unshift.apply(d,this.toTree(e,[]))}return c[3]&&b.unshift(n(c[3],a.trailing,a.lineNumber+1)),d},lists:function(){function a(a){return new RegExp(\"(?:^(\"+i+\"{0,\"+a+\"} {0,3})(\"+f+\")\\\\s+)|\"+\"(^\"+i+\"{0,\"+(a-1)+\"}[ ]{0,4})\")}function b(a){return a.replace(/ {0,3}\\t/g,\"    \")}function c(a,b,c,d){if(b)return a.push([\"para\"].concat(c)),void 0;var e=a[a.length-1]instanceof Array&&\"para\"===a[a.length-1][0]?a[a.length-1]:a;d&&a.length>1&&c.unshift(d);for(var f=0;f<c.length;f++){var g=c[f],h=\"string\"==typeof g;h&&e.length>1&&\"string\"==typeof e[e.length-1]?e[e.length-1]+=g:e.push(g)}}function d(a,b){for(var c=new RegExp(\"^(\"+i+\"{\"+a+\"}.*?\\\\n?)*$\"),d=new RegExp(\"^\"+i+\"{\"+a+\"}\",\"gm\"),e=[];b.length>0&&c.exec(b[0]);){var f=b.shift(),g=f.replace(d,\"\");e.push(n(g,f.trailing,f.lineNumber))}return e}function e(a,b,c){var d=a.list,e=d[d.length-1];if(!(e[1]instanceof Array&&\"para\"===e[1][0]))if(b+1===c.length)e.push([\"para\"].concat(e.splice(1,e.length-1)));else{var f=e.pop();e.push([\"para\"].concat(e.splice(1,e.length-1)),f)}}var f=\"[*+-]|\\\\d+\\\\.\",g=/[*+-]/,h=new RegExp(\"^( {0,3})(\"+f+\")[ \t]+\"),i=\"(?: {0,3}\\\\t| {4})\";return function(f,i){function j(a){var b=g.exec(a[2])?[\"bulletlist\"]:[\"numberlist\"];return n.push({list:b,indent:a[1]}),b}var k=f.match(h);if(!k)return void 0;for(var l,m,n=[],o=j(k),p=!1,r=[n[0].list];;){for(var s=f.split(/(?=\\n)/),t=\"\",u=\"\",v=0;v<s.length;v++){u=\"\";var w=s[v].replace(/^\\n/,function(a){return u=a,\"\"}),x=a(n.length);if(k=w.match(x),void 0!==k[1]){t.length&&(c(l,p,this.processInline(t),u),p=!1,t=\"\"),k[1]=b(k[1]);var y=Math.floor(k[1].length/4)+1;if(y>n.length)o=j(k),l.push(o),l=o[1]=[\"listitem\"];else{var z=!1;for(m=0;m<n.length;m++)if(n[m].indent===k[1]){o=n[m].list,n.splice(m+1,n.length-(m+1)),z=!0;break}z||(y++,y<=n.length?(n.splice(y,n.length-y),o=n[y-1].list):(o=j(k),l.push(o))),l=[\"listitem\"],o.push(l)}u=\"\"}w.length>k[0].length&&(t+=u+w.substr(k[0].length))}t.length&&(c(l,p,this.processInline(t),u),p=!1,t=\"\");var A=d(n.length,i);A.length>0&&(q(n,e,this),l.push.apply(l,this.toTree(A,[])));var B=i[0]&&i[0].valueOf()||\"\";if(!B.match(h)&&!B.match(/^ /))break;f=i.shift();var C=this.dialect.block.horizRule(f,i);if(C){r.push.apply(r,C);break}q(n,e,this),p=!0}return r}}(),blockquote:function(a,b){if(!a.match(/^>/m))return void 0;var c=[];if(\">\"!==a[0]){for(var d=a.split(/\\n/),e=[],f=a.lineNumber;d.length&&\">\"!==d[0][0];)e.push(d.shift()),f++;var g=n(e.join(\"\\n\"),\"\\n\",a.lineNumber);c.push.apply(c,this.processBlock(g,[])),a=n(d.join(\"\\n\"),a.trailing,f)}for(;b.length&&\">\"===b[0][0];){var h=b.shift();a=n(a+a.trailing+h,h.trailing,a.lineNumber)}var i=a.replace(/^> ?/gm,\"\"),j=(this.tree,this.toTree(i,[\"blockquote\"])),k=o(j);return k&&k.references&&(delete k.references,r(k)&&j.splice(1,1)),c.push(j),c},referenceDefn:function(a,b){var c=/^\\s*\\[(.*?)\\]:\\s*(\\S+)(?:\\s+(?:(['\"])(.*?)\\3|\\((.*?)\\)))?\\n?/;if(!a.match(c))return void 0;o(this.tree)||this.tree.splice(1,0,{});var d=o(this.tree);void 0===d.references&&(d.references={});var e=this.loop_re_over_block(c,a,function(a){a[2]&&\"<\"===a[2][0]&&\">\"===a[2][a[2].length-1]&&(a[2]=a[2].substring(1,a[2].length-1));var b=d.references[a[1].toLowerCase()]={href:a[2]};void 0!==a[4]?b.title=a[4]:void 0!==a[5]&&(b.title=a[5])});return e.length&&b.unshift(n(e,a.trailing)),[]},para:function(a){return[[\"para\"].concat(this.processInline(a))]}},inline:{__oneElement__:function(a,b,c){var d,e;b=b||this.dialect.inline.__patterns__;var f=new RegExp(\"([\\\\s\\\\S]*?)(\"+(b.source||b)+\")\");if(d=f.exec(a),!d)return[a.length,a];if(d[1])return[d[1].length,d[1]];var e;return d[2]in this.dialect.inline&&(e=this.dialect.inline[d[2]].call(this,a.substr(d.index),d,c||[])),e=e||[d[2].length,d[2]]},__call__:function(a,b){function c(a){\"string\"==typeof a&&\"string\"==typeof e[e.length-1]?e[e.length-1]+=a:e.push(a)}for(var d,e=[];a.length>0;)d=this.dialect.inline.__oneElement__.call(this,a,b,e),a=a.substr(d.shift()),q(d,c);return e},\"]\":function(){},\"}\":function(){},__escape__:/^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-]/,\"\\\\\":function(a){return this.dialect.inline.__escape__.exec(a)?[2,a.charAt(1)]:[1,\"\\\\\"]},\"![\":function(a){var b=a.match(/^!\\[(.*?)\\][ \\t]*\\([ \\t]*([^\")]*?)(?:[ \\t]+([\"'])(.*?)\\3)?[ \\t]*\\)/);if(b){b[2]&&\"<\"===b[2][0]&&\">\"===b[2][b[2].length-1]&&(b[2]=b[2].substring(1,b[2].length-1)),b[2]=this.dialect.inline.__call__.call(this,b[2],/\\\\/)[0];var c={alt:b[1],href:b[2]||\"\"};return void 0!==b[4]&&(c.title=b[4]),[b[0].length,[\"img\",c]]}return b=a.match(/^!\\[(.*?)\\][ \\t]*\\[(.*?)\\]/),b?[b[0].length,[\"img_ref\",{alt:b[1],ref:b[2].toLowerCase(),original:b[0]}]]:[2,\"![\"]},\"[\":function v(a){var b=String(a),c=s.call(this,a.substr(1),\"]\");if(!c)return[1,\"[\"];var v,d,e=1+c[0],f=c[1];a=a.substr(e);var g=a.match(/^\\s*\\([ \\t]*([^\"']*)(?:[ \\t]+([\"'])(.*?)\\2)?[ \\t]*\\)/);if(g){var h=g[1];if(e+=g[0].length,h&&\"<\"===h[0]&&\">\"===h[h.length-1]&&(h=h.substring(1,h.length-1)),!g[3])for(var i=1,j=0;j<h.length;j++)switch(h[j]){case\"(\":i++;break;case\")\":0===--i&&(e-=h.length-j,h=h.substring(0,j))}return h=this.dialect.inline.__call__.call(this,h,/\\\\/)[0],d={href:h||\"\"},void 0!==g[3]&&(d.title=g[3]),v=[\"link\",d].concat(f),[e,v]}return g=a.match(/^\\s*\\[(.*?)\\]/),g?(e+=g[0].length,d={ref:(g[1]||String(f)).toLowerCase(),original:b.substr(0,e)},v=[\"link_ref\",d].concat(f),[e,v]):1===f.length&&\"string\"==typeof f[0]?(d={ref:f[0].toLowerCase(),original:b.substr(0,e)},v=[\"link_ref\",d,f[0]],[e,v]):[1,\"[\"]},\"<\":function(a){var b;return null!==(b=a.match(/^<(?:((https?|ftp|mailto):[^>]+)|(.*?@.*?\\.[a-zA-Z]+))>/))?b[3]?[b[0].length,[\"link\",{href:\"mailto:\"+b[3]},b[3]]]:\"mailto\"===b[2]?[b[0].length,[\"link\",{href:b[1]},b[1].substr(\"mailto:\".length)]]:[b[0].length,[\"link\",{href:b[1]},b[1]]]:[1,\"<\"]},\"`\":function(a){var b=a.match(/(`+)(([\\s\\S]*?)\\1)/);return b&&b[2]?[b[1].length+b[2].length,[\"inlinecode\",b[3]]]:[1,\"`\"]},\"  \\n\":function(){return[3,[\"linebreak\"]]}}};t.inline[\"**\"]=i(\"strong\",\"**\"),t.inline.__=i(\"strong\",\"__\"),t.inline[\"*\"]=i(\"em\",\"*\"),t.inline._=i(\"em\",\"_\"),m.dialects.Gruber=t,m.buildBlockOrder(m.dialects.Gruber.block),m.buildInlinePatterns(m.dialects.Gruber.inline);var u=p.subclassDialect(t),o=k.extract_attr,q=k.forEach;u.processMetaHash=function(a){for(var b=j(a),c={},d=0;d<b.length;++d)if(/^#/.test(b[d]))c.id=b[d].substring(1);else if(/^\\./.test(b[d]))c[\"class\"]=c[\"class\"]?c[\"class\"]+b[d].replace(/./,\" \"):b[d].substring(1);else if(/\\=/.test(b[d])){var e=b[d].split(/\\=/);c[e[0]]=e[1]}return c},u.block.document_meta=function(a){if(a.lineNumber>1)return void 0;if(!a.match(/^(?:\\w+:.*\\n)*\\w+:.*$/))return void 0;o(this.tree)||this.tree.splice(1,0,{});var b=a.split(/\\n/);for(var c in b){var d=b[c].match(/(\\w+):\\s*(.*)$/),e=d[1].toLowerCase(),f=d[2];this.tree[1][e]=f}return[]},u.block.block_meta=function(a){var b=a.match(/(^|\\n) {0,3}\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}$/);if(!b)return void 0;var c,d=this.dialect.processMetaHash(b[2]);if(\"\"===b[1]){var e=this.tree[this.tree.length-1];if(c=o(e),\"string\"==typeof e)return void 0;c||(c={},e.splice(1,0,c));for(var f in d)c[f]=d[f];return[]}var g=a.replace(/\\n.*$/,\"\"),h=this.processBlock(g,[]);c=o(h[0]),c||(c={},h[0].splice(1,0,c));for(var f in d)c[f]=d[f];return h},u.block.definition_list=function(a,b){var c,d,e=/^((?:[^\\s:].*\\n)+):\\s+([\\s\\S]+)$/,f=[\"dl\"];if(!(d=a.match(e)))return void 0;for(var g=[a];b.length&&e.exec(b[0]);)g.push(b.shift());for(var h=0;h<g.length;++h){var d=g[h].match(e),i=d[1].replace(/\\n$/,\"\").split(/\\n/),j=d[2].split(/\\n:\\s+/);for(c=0;c<i.length;++c)f.push([\"dt\",i[c]]);for(c=0;c<j.length;++c)f.push([\"dd\"].concat(this.processInline(j[c].replace(/(\\n)\\s+/,\"$1\"))))}return[f]},u.block.table=function w(a){var b,c,d=function(a,b){b=b||\"\\\\s\",b.match(/^[\\\\|\\[\\]{}?*.+^$]$/)&&(b=\"\\\\\"+b);for(var c,d=[],e=new RegExp(\"^((?:\\\\\\\\.|[^\\\\\\\\\"+b+\"])*)\"+b+\"(.*)\");c=a.match(e);)d.push(c[1]),a=c[2];return d.push(a),d},e=/^ {0,3}\\|(.+)\\n {0,3}\\|\\s*([\\-:]+[\\-| :]*)\\n((?:\\s*\\|.*(?:\\n|$))*)(?=\\n|$)/,f=/^ {0,3}(\\S(?:\\\\.|[^\\\\|])*\\|.*)\\n {0,3}([\\-:]+\\s*\\|[\\-| :]*)\\n((?:(?:\\\\.|[^\\\\|])*\\|.*(?:\\n|$))*)(?=\\n|$)/;if(c=a.match(e))c[3]=c[3].replace(/^\\s*\\|/gm,\"\");else if(!(c=a.match(f)))return void 0;var w=[\"table\",[\"thead\",[\"tr\"]],[\"tbody\"]];c[2]=c[2].replace(/\\|\\s*$/,\"\").split(\"|\");var g=[];for(q(c[2],function(a){a.match(/^\\s*-+:\\s*$/)?g.push({align:\"right\"}):a.match(/^\\s*:-+\\s*$/)?g.push({align:\"left\"}):a.match(/^\\s*:-+:\\s*$/)?g.push({align:\"center\"}):g.push({})}),c[1]=d(c[1].replace(/\\|\\s*$/,\"\"),\"|\"),b=0;b<c[1].length;b++)w[1][1].push([\"th\",g[b]||{}].concat(this.processInline(c[1][b].trim())));return q(c[3].replace(/\\|\\s*$/gm,\"\").split(\"\\n\"),function(a){var c=[\"tr\"];for(a=d(a,\"|\"),b=0;b<a.length;b++)c.push([\"td\",g[b]||{}].concat(this.processInline(a[b].trim())));w[2].push(c)},this),[w]},u.inline[\"{:\"]=function(a,b,c){if(!c.length)return[2,\"{:\"];var d=c[c.length-1];if(\"string\"==typeof d)return[2,\"{:\"];var e=a.match(/^\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}/);if(!e)return[2,\"{:\"];var f=this.dialect.processMetaHash(e[1]),g=o(d);g||(g={},d.splice(1,0,g));for(var h in f)g[h]=f[h];return[e[0].length,\"\"]},m.dialects.Maruku=u,m.dialects.Maruku.inline.__escape__=/^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-|:]/,m.buildBlockOrder(m.dialects.Maruku.block),m.buildInlinePatterns(m.dialects.Maruku.inline),a.Markdown=m,a.parse=m.parse,a.toHTML=m.toHTML,a.toHTMLTree=m.toHTMLTree,a.renderJsonML=m.renderJsonML}(function(){return window.markdown={},window.markdown}());",
      "type": "blob"
    },
    "template": {
      "path": "template",
      "content": "module.exports = function(data) {\n  \"use strict\";\n  return (function() {\n    var Filetree, FiletreePresenter, __root;\n    __root = require(\"/lib/hamlet-runtime\")(this);\n    Filetree = require(\"./templates/filetree\");\n    FiletreePresenter = require(\"./presenters/filetree\");\n    __root.buffer(__root.element(\"div\", this, {\n      id: [\"main\"]\n    }, function(__root) {\n      __root.buffer(__root.element(\"div\", this, {\n        id: [\"actions\"]\n      }, function(__root) {\n        this.actions().forEach(function(action) {\n          return __root.buffer(__root.element(\"button\", this, {\n            \"click\": action.fn\n          }, function(__root) {\n            __root.buffer(action.name.titleize());\n          }));\n        });\n      }));\n      __root.buffer(Filetree(FiletreePresenter(this.filetree(), this)));\n      __root.buffer(__root.element(\"div\", this, {\n        \"class\": [\"wrap\"]\n      }, function(__root) {\n        __root.buffer(__root.element(\"div\", this, {\n          id: [\"ace\"]\n        }, function(__root) {}));\n      }));\n    }));\n    return __root.root;\n  }).call(data);\n};\n",
      "type": "blob"
    },
    "style": {
      "path": "style",
      "content": "module.exports = \"* {\\n  -ms-box-sizing: border-box;\\n  -moz-box-sizing: border-box;\\n  -webkit-box-sizing: border-box;\\n  box-sizing: border-box;\\n}\\n\\nhtml,\\nbody,\\n#ace,\\n#main,\\n.wrap {\\n  height: 100%;\\n}\\n\\nbody {\\n  font-family: \\\"HelveticaNeue-Light\\\", \\\"Helvetica Neue Light\\\", \\\"Helvetica Neue\\\", Helvetica, Arial, \\\"Lucida Grande\\\", sans-serif;\\n  font-weight: 300;\\n  margin: 0;\\n}\\n\\n#main {\\n  padding-top: 21px;\\n  padding-left: 200px;\\n  position: relative;\\n}\\n\\n#actions {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n}\\n\\n#filetree {\\n  position: absolute;\\n  top: 21px;\\n  left: 0;\\n  bottom: 0;\\n  margin: 0;\\n  padding: 1em 0 0 0;\\n  width: 200px;\\n  overflow-x: hidden;\\n  overflow-y: auto;\\n  z-index: 2;\\n}\\n\\n#filetree li .delete {\\n  display: none;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n}\\n\\n#filetree li:hover .delete {\\n  display: inline-block;\\n}\\n\\n#filetree li:hover {\\n  background-color: lightyellow;\\n}\\n\\n#filetree li {\\n  cursor: pointer;\\n  list-style-type: none;\\n  padding-left: 1em;\\n  position: relative;\\n  whitespace: nowrap;\\n}\";",
      "type": "blob"
    },
    "actions": {
      "path": "actions",
      "content": "(function() {\n  var Uploader, styl;\n\n  Uploader = require(\"s3-uploader\");\n\n  styl = require(\"styl\");\n\n  module.exports = function() {\n    var actions, policy, uploader;\n    policy = JSON.parse(localStorage.blogPolicy);\n    uploader = Uploader(policy);\n    actions = {\n      preview: function() {\n        var content, previewWindow;\n        previewWindow = window.open(null, \"preview\", \"width=800,height=600\");\n        content = PostTemplate({\n          title: \"TEST\",\n          html: markdown(\"This is a test\\n========\\n\\nYo\\n\\nWat a cool test\")\n        });\n        previewWindow.document.open();\n        previewWindow.document.write(content);\n        previewWindow.document.write(\"<style>\\n  \" + (styl(editor.getValue(), {\n          whitespace: true\n        }).toString()) + \"\\n</style>\");\n        return previewWindow.document.close();\n      },\n      load: function() {\n        var name;\n        if (name = prompt(\"Name\")) {\n          console.log(name);\n          return load(name + \"?yolo\").then(function(content) {\n            editor.setValue(content);\n            return editor.getSession().setMode('markdown');\n          });\n        }\n      },\n      save: function() {\n        var html, path, text;\n        text = editor.getValue();\n        html = markdown(text);\n        html = PostTemplate({\n          title: \"TEST\",\n          html: html\n        });\n        if (path = prompt(\"Path\")) {\n          uploader.upload({\n            key: path + \".html\",\n            blob: new Blob([html], {\n              type: \"text/html; charset=UTF-8\"\n            }),\n            cacheControl: 60\n          });\n          return uploader.upload({\n            key: path + \".md\",\n            blob: new Blob([text], {\n              type: \"text/markdown; charset=UTF-8\"\n            }),\n            cacheControl: 0\n          });\n        }\n      },\n      load_stylesheet: function() {\n        return load(\"style.styl\").then(function(content) {\n          editor.setValue(content);\n          return editor.getSession().setMode('css');\n        });\n      },\n      save_stylesheet: function() {\n        var source, style;\n        source = editor.getValue();\n        style = styl(source, {\n          whitespace: true\n        }).toString();\n        uploader.upload({\n          key: \"style.css\",\n          blob: new Blob([style], {\n            type: \"text/css; charset=UTF-8\"\n          }),\n          cacheControl: 0\n        });\n        return uploader.upload({\n          key: \"style.styl\",\n          blob: new Blob([source], {\n            type: \"text/styl; charset=UTF-8\"\n          }),\n          cacheControl: 0\n        });\n      }\n    };\n    return Object.keys(actions).map(function(name) {\n      return {\n        name: name,\n        fn: actions[name]\n      };\n    });\n  };\n\n}).call(this);\n",
      "type": "blob"
    },
    "filetree": {
      "path": "filetree",
      "content": "(function() {\n  var File, Filetree;\n\n  require(\"cornerstone\");\n\n  File = function(I, self) {\n    if (I == null) {\n      I = {};\n    }\n    if (self == null) {\n      self = Model(I);\n    }\n    defaults(I, {\n      content: \"\"\n    });\n    self.attrObservable(\"content\", \"path\");\n    return self;\n  };\n\n  module.exports = Filetree = function(I, self) {\n    if (I == null) {\n      I = {};\n    }\n    if (self == null) {\n      self = Model(I);\n    }\n    defaults(I, {\n      files: [\n        {\n          path: \"test.md\",\n          content: \"Radical\\n=======\\n\\nDuuuuuder\"\n        }, {\n          path: \"wat.js\",\n          content: \"alert('yolo')\"\n        }, {\n          path: \"test.css\",\n          content: \"body {\\n  border: 8px solid green;\\n}\"\n        }\n      ]\n    });\n    self.attrModels(\"files\", File);\n    self.extend({\n      sortedFiles: function() {\n        return self.files().sort(function(a, b) {\n          if (a.path() < b.path()) {\n            return -1;\n          } else if (a.path() >= b.path()) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n      }\n    });\n    return self;\n  };\n\n  Filetree.File = File;\n\n}).call(this);\n",
      "type": "blob"
    },
    "templates/filetree": {
      "path": "templates/filetree",
      "content": "module.exports = function(data) {\n  \"use strict\";\n  return (function() {\n    var __root;\n    __root = require(\"/lib/hamlet-runtime\")(this);\n    __root.buffer(__root.element(\"ul\", this, {\n      id: [\"filetree\"]\n    }, function(__root) {\n      var files, self;\n      self = this;\n      files = this.files;\n      this.sortedFiles().forEach(function(file) {\n        var select;\n        select = function(e) {\n          if (e.target.nodeName === 'LI') {\n            return self.select(file);\n          }\n        };\n        return __root.buffer(__root.element(\"li\", this, {\n          \"click\": select\n        }, function(__root) {\n          var remove;\n          __root.buffer(file.path);\n          remove = function() {\n            if (confirm(\"Delete \" + (file.path()) + \"?\")) {\n              return files.remove(file);\n            }\n          };\n          __root.buffer(__root.element(\"div\", this, {\n            \"class\": [\"delete\"],\n            \"click\": remove\n          }, function(__root) {\n            __root.buffer(\"X\\n\");\n          }));\n        }));\n      });\n    }));\n    return __root.root;\n  }).call(data);\n};\n",
      "type": "blob"
    },
    "presenters/filetree": {
      "path": "presenters/filetree",
      "content": "(function() {\n  module.exports = function(filetree, application) {\n    return extend({}, filetree, {\n      select: function(file) {\n        var session, _base, _ref;\n        if (!(session = file.session)) {\n          file.session = application.initSession(file);\n        }\n        if ((_ref = application.editor().getSession()) != null) {\n          _ref._signal(\"blur\");\n        }\n        application.editor().setSession(file.session);\n        return typeof (_base = file.session)._signal === \"function\" ? _base._signal(\"focus\") : void 0;\n      }\n    });\n  };\n\n}).call(this);\n",
      "type": "blob"
    },
    "ace_shim": {
      "path": "ace_shim",
      "content": "(function() {\n  var aceEditor;\n\n  aceEditor = ace.edit(\"ace\");\n\n  aceEditor.$blockScrolling = Infinity;\n\n  aceEditor.setOptions({\n    fontSize: \"16px\"\n  });\n\n  module.exports = function(I, self) {\n    var extension, modeFor;\n    modeFor = function(extension) {\n      switch (extension) {\n        case \"js\":\n          return \"javascript\";\n        case \"md\":\n          return \"markdown\";\n        case \"cson\":\n          return \"coffee\";\n        case \"\":\n          return \"text\";\n        default:\n          return extension;\n      }\n    };\n    extension = function(path) {\n      var match;\n      if (match = path.match(/\\.([^\\.]*)$/, '')) {\n        return match[1];\n      } else {\n        return '';\n      }\n    };\n    return self.extend({\n      editor: function() {\n        return aceEditor;\n      },\n      initSession: function(file) {\n        var session, updating;\n        session = ace.createEditSession(file.content());\n        session.setMode(\"ace/mode/\" + (modeFor(extension(file.path()))));\n        session.setUseSoftTabs(true);\n        session.setTabSize(2);\n        aceEditor.setOptions({\n          highlightActiveLine: true,\n          showPrintMargin: false\n        });\n        updating = false;\n        file.content.observe(function(newContent) {\n          if (updating) {\n            return;\n          }\n          return session.setValue(newContent);\n        });\n        session.on(\"change\", function() {\n          updating = true;\n          file.content(session.getValue());\n          return updating = false;\n        });\n        return session;\n      }\n    });\n  };\n\n}).call(this);\n",
      "type": "blob"
    },
    "application": {
      "path": "application",
      "content": "(function() {\n  var File, Filetree, HamletCompiler, compileTmpl, load, save;\n\n  load = function(path) {\n    var deferred, xhr;\n    deferred = Q.defer();\n    xhr = new XMLHttpRequest();\n    xhr.open('GET', \"http://blog.whimsy.space/\" + path, true);\n    xhr.onload = function(e) {\n      var _ref;\n      if (((200 <= (_ref = this.status) && _ref < 300)) || this.status === 304) {\n        return deferred.resolve(this.responseText);\n      } else {\n        return deferred.reject(e);\n      }\n    };\n    xhr.onprogress = deferred.notify;\n    xhr.onerror = deferred.reject;\n    xhr.send();\n    return deferred.promise;\n  };\n\n  save = function(path, content, type, cacheControl) {\n    if (cacheControl == null) {\n      cacheControl = 0;\n    }\n    return uploader.upload({\n      key: path,\n      blob: new Blob([content], {\n        type: type\n      }),\n      cacheControl: cacheControl\n    });\n  };\n\n  HamletCompiler = require(\"./lib/hamlet-compiler\");\n\n  compileTmpl = function(source) {\n    var fnTxt, m, res;\n    fnTxt = HamletCompiler.compile(source, {\n      compiler: CoffeeScript,\n      runtime: \"require(\\\"/lib/hamlet-runtime\\\")\"\n    });\n    m = {};\n    Function(\"module\", \"require\", fnTxt)(m, require);\n    res = m.exports;\n    return function(content) {\n      var c, d, r;\n      c = document.createElement(\"content\");\n      c.innerHTML = content;\n      r = res({\n        content: c\n      });\n      d = document.createElement(\"div\");\n      d.appendChild(r);\n      return d.innerHTML;\n    };\n  };\n\n  Filetree = require(\"./filetree\");\n\n  File = Filetree.File;\n\n  module.exports = function(I, self) {\n    var posts;\n    if (I == null) {\n      I = {};\n    }\n    if (self == null) {\n      self = Model(I);\n    }\n    defaults(I, {\n      filetree: {\n        files: [\n          {\n            path: \"template.haml\",\n            content: \"%html\\n  %head\\n    %meta(charset=\\\"UTF-8\\\")\\n    %link(rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"style.css\\\")\\n\\n  %body\\n    = @content\"\n          }\n        ]\n      }\n    });\n    posts = [];\n    self.attrModel(\"filetree\", Filetree);\n    self.extend({\n      actions: function() {\n        return [\n          {\n            name: \"New Post\",\n            fn: function() {\n              return self.newPost();\n            }\n          }, {\n            name: \"Save\",\n            fn: function() {\n              return self.publish();\n            }\n          }\n        ];\n      },\n      publish: function() {\n        var r, templateContent, tmpl;\n        templateContent = self.filetree().files.first().content();\n        tmpl = compileTmpl(templateContent);\n        r = tmpl(marked(\"Hello\\n=====\\n\\nWorld\"));\n        return console.log(r);\n      },\n      loadManifest: function(path) {\n        return load(path).then(function(result) {\n          return console.log(result);\n        });\n      },\n      newPost: function() {\n        var data, slug, title;\n        title = prompt(\"Title\");\n        if (title) {\n          slug = title.replace(/[^a-zA-Z0-9]/g, '-').replace(/-+/g, '-');\n          data = {\n            title: title,\n            slug: slug,\n            path: \"posts/\" + slug + \".md\",\n            content: \"\"\n          };\n          self.filetree().files.push(File(data));\n          return posts.push(data);\n        }\n      }\n    });\n    return self;\n  };\n\n}).call(this);\n",
      "type": "blob"
    },
    "lib/hamlet-compiler": {
      "path": "lib/hamlet-compiler",
      "content": "!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.HamletCompiler=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n// Generated by CoffeeScript 1.7.1\n(function() {\n  var ROOT_NAME, indentText, util;\n\n  indentText = function(text, indent) {\n    if (indent == null) {\n      indent = \"  \";\n    }\n    return indent + text.replace(/\\n/g, \"\\n\" + indent);\n  };\n\n  ROOT_NAME = \"__root\";\n\n  util = {\n    indent: indentText,\n    filters: {\n      verbatim: function(content, compiler) {\n        return compiler.buffer('\"\"\"' + content.replace(/(#|\")/g, \"\\\\$1\") + '\"\"\"');\n      },\n      plain: function(content, compiler) {\n        return compiler.buffer(JSON.stringify(content));\n      },\n      coffeescript: function(content, compiler) {\n        return [content];\n      },\n      javascript: function(content, compiler) {\n        return [\"`\", compiler.indent(content), \"`\"];\n      }\n    },\n    element: function(tag, attributes, contents) {\n      var lines;\n      if (attributes == null) {\n        attributes = [];\n      }\n      if (contents == null) {\n        contents = [];\n      }\n      return lines = [\"\" + ROOT_NAME + \".buffer \" + ROOT_NAME + \".element \" + (JSON.stringify(tag)) + \", this, {\" + (attributes.join('\\n')) + \"}, (\" + ROOT_NAME + \") ->\", indentText(contents.join(\"\\n\")), \"  return\"];\n    },\n    buffer: function(value) {\n      return [\"\" + ROOT_NAME + \".buffer \" + value];\n    },\n    attributes: function(node) {\n      var attributeLines, attributes, classes, id, ids, idsAndClasses;\n      id = node.id, classes = node.classes, attributes = node.attributes;\n      if (id) {\n        ids = [JSON.stringify(id)];\n      } else {\n        ids = [];\n      }\n      classes = (classes || []).map(JSON.stringify);\n      if (attributes) {\n        attributes = attributes.filter(function(_arg) {\n          var name, value;\n          name = _arg.name, value = _arg.value;\n          if (name === \"class\") {\n            classes.push(value);\n            return false;\n          } else if (name === \"id\") {\n            ids.push(value);\n            return false;\n          } else {\n            return true;\n          }\n        });\n      } else {\n        attributes = [];\n      }\n      idsAndClasses = [];\n      if (ids.length) {\n        idsAndClasses.push(\"id: [\" + (ids.join(', ')) + \"]\");\n      }\n      if (classes.length) {\n        idsAndClasses.push(\"class: [\" + (classes.join(', ')) + \"]\");\n      }\n      attributeLines = attributes.map(function(_arg) {\n        var name, value;\n        name = _arg.name, value = _arg.value;\n        name = JSON.stringify(name);\n        return \"\" + name + \": \" + value;\n      });\n      return idsAndClasses.concat(attributeLines);\n    },\n    render: function(node) {\n      var filter, tag, text;\n      tag = node.tag, filter = node.filter, text = node.text;\n      if (tag) {\n        return this.tag(node);\n      } else if (filter) {\n        return this.filter(node);\n      } else {\n        return this.contents(node);\n      }\n    },\n    filter: function(node) {\n      var filter, filterName;\n      filterName = node.filter;\n      if (filter = this.filters[filterName]) {\n        return [].concat.apply([], this.filters[filterName](node.content, this));\n      } else {\n        return [\"\" + ROOT_NAME + \".filter(\" + (JSON.stringify(filterName)) + \", \" + (JSON.stringify(node.content)) + \")\"];\n      }\n    },\n    contents: function(node) {\n      var bufferedCode, childContent, children, contents, indent, text, unbufferedCode;\n      children = node.children, bufferedCode = node.bufferedCode, unbufferedCode = node.unbufferedCode, text = node.text;\n      if (unbufferedCode) {\n        indent = true;\n        contents = [unbufferedCode];\n      } else if (bufferedCode) {\n        contents = this.buffer(bufferedCode);\n      } else if (text) {\n        contents = this.buffer(JSON.stringify(text));\n      } else if (node.tag) {\n        contents = [];\n      } else if (node.comment) {\n        return [];\n      } else {\n        contents = [];\n        console.warn(\"No content for node:\", node);\n      }\n      if (children) {\n        childContent = this.renderNodes(children);\n        if (indent) {\n          childContent = this.indent(childContent.join(\"\\n\"));\n        }\n        contents = contents.concat(childContent);\n      }\n      return contents;\n    },\n    renderNodes: function(nodes) {\n      return [].concat.apply([], nodes.map(this.render, this));\n    },\n    tag: function(node) {\n      var tag;\n      tag = node.tag;\n      return this.element(tag, this.attributes(node), this.contents(node));\n    }\n  };\n\n  exports.compile = function(parseTree, _arg) {\n    var compiler, exports, items, options, program, programSource, runtime, source, _ref;\n    _ref = _arg != null ? _arg : {}, compiler = _ref.compiler, runtime = _ref.runtime, exports = _ref.exports;\n    if (runtime == null) {\n      runtime = \"require\" + \"(\\\"hamlet-runtime\\\")\";\n    }\n    if (exports == null) {\n      exports = \"module.exports\";\n    }\n    items = util.renderNodes(parseTree);\n    if (exports) {\n      exports = \"\" + exports + \" = \";\n    } else {\n      exports = \"\";\n    }\n    source = \"\" + exports + \"(data) ->\\n  \\\"use strict\\\"\\n  (->\\n    \" + ROOT_NAME + \" = \" + runtime + \"(this)\\n\\n\" + (util.indent(items.join(\"\\n\"), \"    \")) + \"\\n    return \" + ROOT_NAME + \".root\\n  ).call(data)\";\n    options = {\n      bare: true\n    };\n    programSource = source;\n    program = compiler.compile(programSource, options);\n    return program;\n  };\n\n}).call(this);\n\n},{}],2:[function(_dereq_,module,exports){\n// Generated by CoffeeScript 1.7.1\n(function() {\n  var compile, parser;\n\n  compile = _dereq_(\"./compiler\").compile;\n\n  parser = _dereq_(\"hamlet-parser\");\n\n  module.exports = {\n    compile: function(input, options) {\n      if (options == null) {\n        options = {};\n      }\n      if (typeof input === \"string\") {\n        input = parser.parse(input);\n      }\n      return compile(input, options);\n    },\n    parser: parser\n  };\n\n}).call(this);\n\n},{\"./compiler\":1,\"hamlet-parser\":8}],3:[function(_dereq_,module,exports){\n\n},{}],4:[function(_dereq_,module,exports){\n(function (process){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n}).call(this,_dereq_(\"FWaASH\"))\n},{\"FWaASH\":5}],5:[function(_dereq_,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    if (canPost) {\n        var queue = [];\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n}\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n\n},{}],6:[function(_dereq_,module,exports){\n/* generated by jison-lex 0.2.1 */\nvar haml_lexer = (function(){\nvar lexer = {\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input) {\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"moduleName\":\"haml_lexer\"},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\n\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return 'SEPARATOR';\nbreak;\ncase 1:this.popState(); return 'RIGHT_PARENTHESIS';\nbreak;\ncase 2:return 'ATTRIBUTE';\nbreak;\ncase 3:this.begin('value'); return 'EQUAL';\nbreak;\ncase 4:return 'AT_ATTRIBUTE';\nbreak;\ncase 5:this.popState(); return 'ATTRIBUTE_VALUE';\nbreak;\ncase 6:this.popState(); return 'ATTRIBUTE_VALUE';\nbreak;\ncase 7:this.popState(); return 'ATTRIBUTE_VALUE';\nbreak;\ncase 8:yy.indent = 0; this.popState(); return 'NEWLINE';\nbreak;\ncase 9:return 'FILTER_LINE';\nbreak;\ncase 10:yy.indent = 0; return 'NEWLINE';\nbreak;\ncase 11:yy.indent += 1; if(yy.indent > yy.filterIndent){this.begin('filter'); }; return 'INDENT';\nbreak;\ncase 12:this.begin(\"parentheses_attributes\"); return 'LEFT_PARENTHESIS';\nbreak;\ncase 13:yy_.yytext = yy_.yytext.substring(1); return 'COMMENT';\nbreak;\ncase 14:yy.filterIndent = yy.indent; yy_.yytext = yy_.yytext.substring(1); return 'FILTER';\nbreak;\ncase 15:yy_.yytext = yy_.yytext.substring(1); return 'ID';\nbreak;\ncase 16:yy_.yytext = yy_.yytext.substring(1); return 'CLASS';\nbreak;\ncase 17:yy_.yytext = yy_.yytext.substring(1); return 'TAG';\nbreak;\ncase 18:yy_.yytext = yy_.yytext.substring(1).trim(); return 'BUFFERED_CODE';\nbreak;\ncase 19:yy_.yytext = yy_.yytext.substring(1).trim(); return 'UNBUFFERED_CODE';\nbreak;\ncase 20:yy_.yytext = yy_.yytext.trim(); return 'TEXT';\nbreak;\n}\n},\nrules: [/^(?:[ \\t]+)/,/^(?:\\))/,/^(?:([_a-zA-Z][-_a-zA-Z0-9]*))/,/^(?:=)/,/^(?:@([_a-zA-Z][-_a-zA-Z0-9]*))/,/^(?:\"(\\\\.|[^\\\\\"])*\")/,/^(?:'(\\\\.|[^\\\\'])*')/,/^(?:[^ \\t\\)]*)/,/^(?:(\\n|$))/,/^(?:[^\\n]*)/,/^(?:\\s*(\\n|$))/,/^(?:(  |\\\\t))/,/^(?:\\()/,/^(?:\\/.*)/,/^(?::([_a-zA-Z][-_a-zA-Z0-9]*))/,/^(?:#((:|[A-Z]|_|[a-z])((:|[A-Z]|_|[a-z])|-|[0-9])*(?!-)))/,/^(?:\\.((:|[A-Z]|_|[a-z])((:|[A-Z]|_|[a-z])|-|[0-9])*(?!-)))/,/^(?:%((:|[A-Z]|_|[a-z])((:|[A-Z]|_|[a-z])|-|[0-9])*(?!-)))/,/^(?:=.*)/,/^(?:-.*)/,/^(?:.*)/],\nconditions: {\"filter\":{\"rules\":[8,9],\"inclusive\":false},\"value\":{\"rules\":[5,6,7],\"inclusive\":false},\"parentheses_attributes\":{\"rules\":[0,1,2,3,4],\"inclusive\":false},\"INITIAL\":{\"rules\":[10,11,12,13,14,15,16,17,18,19,20],\"inclusive\":true}}\n};\nreturn lexer;\n})();module.exports = haml_lexer;\n\n},{}],7:[function(_dereq_,module,exports){\n/* generated by jison-lex 0.2.1 */\nvar jade_lexer = (function(){\nvar lexer = {\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input) {\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"moduleName\":\"jade_lexer\"},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\n\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return 'SEPARATOR';\nbreak;\ncase 1:this.popState(); return 'RIGHT_PARENTHESIS';\nbreak;\ncase 2:return 'ATTRIBUTE';\nbreak;\ncase 3:this.begin('value'); return 'EQUAL';\nbreak;\ncase 4:return 'AT_ATTRIBUTE';\nbreak;\ncase 5:this.popState(); return 'ATTRIBUTE_VALUE';\nbreak;\ncase 6:this.popState(); return 'ATTRIBUTE_VALUE';\nbreak;\ncase 7:this.popState(); return 'ATTRIBUTE_VALUE';\nbreak;\ncase 8:yy.indent = 0; this.popState(); return 'NEWLINE';\nbreak;\ncase 9:return 'FILTER_LINE';\nbreak;\ncase 10:yy.indent = 0; return 'NEWLINE';\nbreak;\ncase 11:yy.indent += 1; if(yy.indent > yy.filterIndent){this.begin('filter'); }; return 'INDENT';\nbreak;\ncase 12:this.begin(\"parentheses_attributes\"); return 'LEFT_PARENTHESIS';\nbreak;\ncase 13:yy_.yytext = yy_.yytext.substring(2); return 'COMMENT';\nbreak;\ncase 14:yy.filterIndent = yy.indent; yy_.yytext = yy_.yytext.substring(1); return 'FILTER';\nbreak;\ncase 15:yy_.yytext = yy_.yytext.substring(1); return 'ID';\nbreak;\ncase 16:yy_.yytext = yy_.yytext.substring(1); return 'CLASS';\nbreak;\ncase 17:return 'TAG';\nbreak;\ncase 18:yy_.yytext = yy_.yytext.substring(1).trim(); return 'BUFFERED_CODE';\nbreak;\ncase 19:yy_.yytext = yy_.yytext.substring(1).trim(); return 'UNBUFFERED_CODE';\nbreak;\ncase 20:yy_.yytext = yy_.yytext.trim(); return 'TEXT';\nbreak;\n}\n},\nrules: [/^(?:[ \\t]+)/,/^(?:\\))/,/^(?:([_a-zA-Z][-_a-zA-Z0-9]*))/,/^(?:=)/,/^(?:@([_a-zA-Z][-_a-zA-Z0-9]*))/,/^(?:\"(\\\\.|[^\\\\\"])*\")/,/^(?:'(\\\\.|[^\\\\'])*')/,/^(?:[^ \\t\\)]*)/,/^(?:(\\n|$))/,/^(?:[^\\n]*)/,/^(?:\\s*(\\n|$))/,/^(?:(  |\\\\t))/,/^(?:\\()/,/^(?:\\/\\/.*)/,/^(?::([_a-zA-Z][-_a-zA-Z0-9]*))/,/^(?:#((:|[A-Z]|_|[a-z])((:|[A-Z]|_|[a-z])|-|[0-9])*(?!-)))/,/^(?:\\.((:|[A-Z]|_|[a-z])((:|[A-Z]|_|[a-z])|-|[0-9])*(?!-)))/,/^(?:((:|[A-Z]|_|[a-z])((:|[A-Z]|_|[a-z])|-|[0-9])*(?!-)))/,/^(?:=.*)/,/^(?:-.*)/,/^(?:.*)/],\nconditions: {\"filter\":{\"rules\":[8,9],\"inclusive\":false},\"value\":{\"rules\":[5,6,7],\"inclusive\":false},\"parentheses_attributes\":{\"rules\":[0,1,2,3,4],\"inclusive\":false},\"INITIAL\":{\"rules\":[10,11,12,13,14,15,16,17,18,19,20],\"inclusive\":true}}\n};\nreturn lexer;\n})();module.exports = jade_lexer;\n\n},{}],8:[function(_dereq_,module,exports){\n// Generated by CoffeeScript 1.7.1\n(function() {\n  var extend, lexers, oldParse, parser,\n    __slice = [].slice;\n\n  parser = _dereq_(\"./parser\").parser;\n\n  lexers = {\n    haml: _dereq_(\"./haml_lexer\"),\n    jade: _dereq_(\"./jade_lexer\")\n  };\n\n  extend = function() {\n    var name, source, sources, target, _i, _len;\n    target = arguments[0], sources = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    for (_i = 0, _len = sources.length; _i < _len; _i++) {\n      source = sources[_i];\n      for (name in source) {\n        target[name] = source[name];\n      }\n    }\n    return target;\n  };\n\n  oldParse = parser.parse;\n\n  extend(parser, {\n    parse: function(input, mode) {\n      if (mode == null) {\n        mode = \"haml\";\n      }\n      parser.lexer = lexers[mode];\n      extend(parser.yy, {\n        indent: 0,\n        nodePath: [\n          {\n            children: []\n          }\n        ],\n        filterIndent: void 0\n      });\n      return oldParse.call(parser, input);\n    }\n  });\n\n  extend(parser.yy, {\n    extend: extend,\n    newline: function() {\n      var lastNode;\n      lastNode = this.nodePath[this.nodePath.length - 1];\n      if (lastNode.filter) {\n        return this.appendFilterContent(lastNode, \"\");\n      }\n    },\n    lastParent: function(indentation) {\n      var parent;\n      while (!(parent = this.nodePath[indentation])) {\n        indentation -= 1;\n      }\n      return parent;\n    },\n    append: function(node, indentation) {\n      var index, lastNode, parent;\n      if (indentation == null) {\n        indentation = 0;\n      }\n      if (node.filterLine) {\n        lastNode = this.nodePath[this.nodePath.length - 1];\n        this.appendFilterContent(lastNode, node.filterLine);\n        return;\n      }\n      parent = this.lastParent(indentation);\n      this.appendChild(parent, node);\n      index = indentation + 1;\n      this.nodePath[index] = node;\n      this.nodePath.length = index + 1;\n      return node;\n    },\n    appendChild: function(parent, child) {\n      if (!child.filter) {\n        this.filterIndent = void 0;\n        this.lexer.popState();\n      }\n      parent.children || (parent.children = []);\n      return parent.children.push(child);\n    },\n    appendFilterContent: function(filter, content) {\n      filter.content || (filter.content = \"\");\n      return filter.content += \"\" + content + \"\\n\";\n    }\n  });\n\n  module.exports = parser;\n\n}).call(this);\n\n},{\"./haml_lexer\":6,\"./jade_lexer\":7,\"./parser\":9}],9:[function(_dereq_,module,exports){\n(function (process){\n/* parser generated by jison 0.4.13 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"root\":3,\"lines\":4,\"line\":5,\"indentation\":6,\"indentationLevel\":7,\"INDENT\":8,\"lineMain\":9,\"end\":10,\"tag\":11,\"rest\":12,\"COMMENT\":13,\"FILTER\":14,\"FILTER_LINE\":15,\"NEWLINE\":16,\"name\":17,\"tagComponents\":18,\"attributes\":19,\"idComponent\":20,\"classComponents\":21,\"ID\":22,\"CLASS\":23,\"LEFT_PARENTHESIS\":24,\"attributePairs\":25,\"RIGHT_PARENTHESIS\":26,\"SEPARATOR\":27,\"attributePair\":28,\"ATTRIBUTE\":29,\"EQUAL\":30,\"ATTRIBUTE_VALUE\":31,\"AT_ATTRIBUTE\":32,\"TAG\":33,\"BUFFERED_CODE\":34,\"UNBUFFERED_CODE\":35,\"TEXT\":36,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",8:\"INDENT\",13:\"COMMENT\",14:\"FILTER\",15:\"FILTER_LINE\",16:\"NEWLINE\",22:\"ID\",23:\"CLASS\",24:\"LEFT_PARENTHESIS\",26:\"RIGHT_PARENTHESIS\",27:\"SEPARATOR\",29:\"ATTRIBUTE\",30:\"EQUAL\",31:\"ATTRIBUTE_VALUE\",32:\"AT_ATTRIBUTE\",33:\"TAG\",34:\"BUFFERED_CODE\",35:\"UNBUFFERED_CODE\",36:\"TEXT\"},\nproductions_: [0,[3,1],[4,2],[4,1],[6,0],[6,1],[7,2],[7,1],[5,3],[5,1],[9,2],[9,1],[9,1],[9,1],[9,1],[9,1],[10,1],[11,2],[11,2],[11,1],[11,1],[18,3],[18,2],[18,2],[18,2],[18,1],[18,1],[20,1],[21,2],[21,1],[19,3],[25,3],[25,1],[28,3],[28,1],[17,1],[12,1],[12,1],[12,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:return this.$ = yy.nodePath[0].children;\nbreak;\ncase 2:this.$ = $$[$0-1];\nbreak;\ncase 3:this.$ = $$[$0];\nbreak;\ncase 4:this.$ = 0;\nbreak;\ncase 5:this.$ = $$[$0];\nbreak;\ncase 6:this.$ = $$[$0-1] + 1;\nbreak;\ncase 7:this.$ = 1;\nbreak;\ncase 8:this.$ = yy.append($$[$0-1], $$[$0-2]);\nbreak;\ncase 9:this.$ = (function () {\n        if ($$[$0].newline) {\n          return yy.newline();\n        }\n      }());\nbreak;\ncase 10:this.$ = yy.extend($$[$0-1], $$[$0]);\nbreak;\ncase 11:this.$ = $$[$0];\nbreak;\ncase 12:this.$ = $$[$0];\nbreak;\ncase 13:this.$ = {\n          comment: $$[$0]\n        };\nbreak;\ncase 14:this.$ = {\n          filter: $$[$0]\n        };\nbreak;\ncase 15:this.$ = {\n          filterLine: $$[$0]\n        };\nbreak;\ncase 16:this.$ = {\n          newline: true\n        };\nbreak;\ncase 17:this.$ = (function () {\n        $$[$0].tag = $$[$0-1];\n        return $$[$0];\n      }());\nbreak;\ncase 18:this.$ = {\n          tag: $$[$0-1],\n          attributes: $$[$0]\n        };\nbreak;\ncase 19:this.$ = {\n          tag: $$[$0]\n        };\nbreak;\ncase 20:this.$ = yy.extend($$[$0], {\n          tag: \"div\"\n        });\nbreak;\ncase 21:this.$ = {\n          id: $$[$0-2],\n          classes: $$[$0-1],\n          attributes: $$[$0]\n        };\nbreak;\ncase 22:this.$ = {\n          id: $$[$0-1],\n          attributes: $$[$0]\n        };\nbreak;\ncase 23:this.$ = {\n          classes: $$[$0-1],\n          attributes: $$[$0]\n        };\nbreak;\ncase 24:this.$ = {\n          id: $$[$0-1],\n          classes: $$[$0]\n        };\nbreak;\ncase 25:this.$ = {\n          id: $$[$0]\n        };\nbreak;\ncase 26:this.$ = {\n          classes: $$[$0]\n        };\nbreak;\ncase 27:this.$ = $$[$0];\nbreak;\ncase 28:this.$ = $$[$0-1].concat($$[$0]);\nbreak;\ncase 29:this.$ = [$$[$0]];\nbreak;\ncase 30:this.$ = $$[$0-1];\nbreak;\ncase 31:this.$ = $$[$0-2].concat($$[$0]);\nbreak;\ncase 32:this.$ = [$$[$0]];\nbreak;\ncase 33:this.$ = {\n          name: $$[$0-2],\n          value: $$[$0]\n        };\nbreak;\ncase 34:this.$ = {\n          name: $$[$0].substring(1),\n          value: $$[$0]\n        };\nbreak;\ncase 35:this.$ = $$[$0];\nbreak;\ncase 36:this.$ = {\n          bufferedCode: $$[$0]\n        };\nbreak;\ncase 37:this.$ = {\n          unbufferedCode: $$[$0]\n        };\nbreak;\ncase 38:this.$ = {\n          text: $$[$0] + \"\\n\"\n        };\nbreak;\n}\n},\ntable: [{3:1,4:2,5:3,6:4,7:6,8:[1,8],10:5,13:[2,4],14:[2,4],15:[2,4],16:[1,7],22:[2,4],23:[2,4],33:[2,4],34:[2,4],35:[2,4],36:[2,4]},{1:[3]},{1:[2,1],5:9,6:4,7:6,8:[1,8],10:5,13:[2,4],14:[2,4],15:[2,4],16:[1,7],22:[2,4],23:[2,4],33:[2,4],34:[2,4],35:[2,4],36:[2,4]},{1:[2,3],8:[2,3],13:[2,3],14:[2,3],15:[2,3],16:[2,3],22:[2,3],23:[2,3],33:[2,3],34:[2,3],35:[2,3],36:[2,3]},{9:10,11:11,12:12,13:[1,13],14:[1,14],15:[1,15],17:16,18:17,20:22,21:23,22:[1,24],23:[1,25],33:[1,21],34:[1,18],35:[1,19],36:[1,20]},{1:[2,9],8:[2,9],13:[2,9],14:[2,9],15:[2,9],16:[2,9],22:[2,9],23:[2,9],33:[2,9],34:[2,9],35:[2,9],36:[2,9]},{8:[1,26],13:[2,5],14:[2,5],15:[2,5],22:[2,5],23:[2,5],33:[2,5],34:[2,5],35:[2,5],36:[2,5]},{1:[2,16],8:[2,16],13:[2,16],14:[2,16],15:[2,16],16:[2,16],22:[2,16],23:[2,16],33:[2,16],34:[2,16],35:[2,16],36:[2,16]},{8:[2,7],13:[2,7],14:[2,7],15:[2,7],22:[2,7],23:[2,7],33:[2,7],34:[2,7],35:[2,7],36:[2,7]},{1:[2,2],8:[2,2],13:[2,2],14:[2,2],15:[2,2],16:[2,2],22:[2,2],23:[2,2],33:[2,2],34:[2,2],35:[2,2],36:[2,2]},{10:27,16:[1,7]},{12:28,16:[2,11],34:[1,18],35:[1,19],36:[1,20]},{16:[2,12]},{16:[2,13]},{16:[2,14]},{16:[2,15]},{16:[2,19],18:29,19:30,20:22,21:23,22:[1,24],23:[1,25],24:[1,31],34:[2,19],35:[2,19],36:[2,19]},{16:[2,20],34:[2,20],35:[2,20],36:[2,20]},{16:[2,36]},{16:[2,37]},{16:[2,38]},{16:[2,35],22:[2,35],23:[2,35],24:[2,35],34:[2,35],35:[2,35],36:[2,35]},{16:[2,25],19:33,21:32,23:[1,25],24:[1,31],34:[2,25],35:[2,25],36:[2,25]},{16:[2,26],19:34,23:[1,35],24:[1,31],34:[2,26],35:[2,26],36:[2,26]},{16:[2,27],23:[2,27],24:[2,27],34:[2,27],35:[2,27],36:[2,27]},{16:[2,29],23:[2,29],24:[2,29],34:[2,29],35:[2,29],36:[2,29]},{8:[2,6],13:[2,6],14:[2,6],15:[2,6],22:[2,6],23:[2,6],33:[2,6],34:[2,6],35:[2,6],36:[2,6]},{1:[2,8],8:[2,8],13:[2,8],14:[2,8],15:[2,8],16:[2,8],22:[2,8],23:[2,8],33:[2,8],34:[2,8],35:[2,8],36:[2,8]},{16:[2,10]},{16:[2,17],34:[2,17],35:[2,17],36:[2,17]},{16:[2,18],34:[2,18],35:[2,18],36:[2,18]},{25:36,28:37,29:[1,38],32:[1,39]},{16:[2,24],19:40,23:[1,35],24:[1,31],34:[2,24],35:[2,24],36:[2,24]},{16:[2,22],34:[2,22],35:[2,22],36:[2,22]},{16:[2,23],34:[2,23],35:[2,23],36:[2,23]},{16:[2,28],23:[2,28],24:[2,28],34:[2,28],35:[2,28],36:[2,28]},{26:[1,41],27:[1,42]},{26:[2,32],27:[2,32]},{30:[1,43]},{26:[2,34],27:[2,34]},{16:[2,21],34:[2,21],35:[2,21],36:[2,21]},{16:[2,30],34:[2,30],35:[2,30],36:[2,30]},{28:44,29:[1,38],32:[1,39]},{31:[1,45]},{26:[2,31],27:[2,31]},{26:[2,33],27:[2,33]}],\ndefaultActions: {12:[2,12],13:[2,13],14:[2,14],15:[2,15],18:[2,36],19:[2,37],20:[2,38],28:[2,10]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        throw new Error(str);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    this.lexer.setInput(input);\n    this.lexer.yy = this.yy;\n    this.yy.lexer = this.lexer;\n    this.yy.parser = this;\n    if (typeof this.lexer.yylloc == 'undefined') {\n        this.lexer.yylloc = {};\n    }\n    var yyloc = this.lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = this.lexer.options && this.lexer.options.ranges;\n    if (typeof this.yy.parseError === 'function') {\n        this.parseError = this.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    function lex() {\n        var token;\n        token = self.lexer.lex() || EOF;\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (this.lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + this.lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: this.lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: this.lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(this.lexer.yytext);\n            lstack.push(this.lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = this.lexer.yyleng;\n                yytext = this.lexer.yytext;\n                yylineno = this.lexer.yylineno;\n                yyloc = this.lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                this.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof _dereq_ !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\nexports.main = function commonjsMain(args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = _dereq_('fs').readFileSync(_dereq_('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && _dereq_.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}\n}).call(this,_dereq_(\"FWaASH\"))\n},{\"FWaASH\":5,\"fs\":3,\"path\":4}]},{},[2])\n(2)\n});",
      "type": "blob"
    },
    "lib/hamlet-runtime": {
      "path": "lib/hamlet-runtime",
      "content": "!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.Hamlet=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n// Generated by CoffeeScript 1.7.1\n(function() {\n  \"use strict\";\n  var Observable, Runtime, bindEvent, bindObservable, bufferTo, classes, contentBind, createElement, empty, eventNames, get, id, initContent, isEvent, isFragment, makeElement, observeAttribute, observeAttributes, observeContent, specialBindings, valueBind, valueIndexOf;\n\n  Observable = _dereq_(\"o_0\");\n\n  eventNames = \"abort\\nblur\\nchange\\nclick\\ndblclick\\ndrag\\ndragend\\ndragenter\\ndragleave\\ndragover\\ndragstart\\ndrop\\nerror\\nfocus\\ninput\\nkeydown\\nkeypress\\nkeyup\\nload\\nmousedown\\nmousemove\\nmouseout\\nmouseover\\nmouseup\\nreset\\nresize\\nscroll\\nselect\\nsubmit\\ntouchcancel\\ntouchend\\ntouchenter\\ntouchleave\\ntouchmove\\ntouchstart\\nunload\".split(\"\\n\");\n\n  isEvent = function(name) {\n    return eventNames.indexOf(name) !== -1;\n  };\n\n  isFragment = function(node) {\n    return (node != null ? node.nodeType : void 0) === 11;\n  };\n\n  initContent = function(element) {\n    var allContent, update;\n    if (element._hamlet_content) {\n      return element._hamlet_content;\n    }\n    allContent = (element._hamlet_content != null ? element._hamlet_content : element._hamlet_content = Observable.concat());\n    update = function() {\n      empty(element);\n      return allContent.each(function(item) {\n        return element.appendChild(item);\n      });\n    };\n    bindObservable(element, allContent, null, update);\n    return allContent;\n  };\n\n  contentBind = function(element, value) {\n    initContent(element).push(value);\n    return element;\n  };\n\n  valueBind = function(element, value, context) {\n    Observable(function() {\n      var update;\n      value = Observable(value, context);\n      switch (element.nodeName) {\n        case \"SELECT\":\n          element.oninput = element.onchange = function() {\n            var optionValue, _ref, _value;\n            _ref = this.children[this.selectedIndex], optionValue = _ref.value, _value = _ref._value;\n            return value(_value || optionValue);\n          };\n          update = function(newValue) {\n            var options;\n            element._value = newValue;\n            if ((options = element._options)) {\n              if (newValue.value != null) {\n                return element.value = (typeof newValue.value === \"function\" ? newValue.value() : void 0) || newValue.value;\n              } else {\n                return element.selectedIndex = valueIndexOf(options, newValue);\n              }\n            } else {\n              return element.value = newValue;\n            }\n          };\n          return bindObservable(element, value, context, update);\n        default:\n          element.oninput = element.onchange = function() {\n            return value(element.value);\n          };\n          if (typeof element.attachEvent === \"function\") {\n            element.attachEvent(\"onkeydown\", function() {\n              return setTimeout(function() {\n                return value(element.value);\n              }, 0);\n            });\n          }\n          return bindObservable(element, value, context, function(newValue) {\n            if (element.value !== newValue) {\n              return element.value = newValue;\n            }\n          });\n      }\n    });\n  };\n\n  specialBindings = {\n    INPUT: {\n      checked: function(element, value, context) {\n        element.onchange = function() {\n          return typeof value === \"function\" ? value(element.checked) : void 0;\n        };\n        return bindObservable(element, value, context, function(newValue) {\n          return element.checked = newValue;\n        });\n      }\n    },\n    SELECT: {\n      options: function(element, values, context) {\n        var updateValues;\n        values = Observable(values, context);\n        updateValues = function(values) {\n          empty(element);\n          element._options = values;\n          return values.map(function(value, index) {\n            var option, optionName, optionValue;\n            option = createElement(\"option\");\n            option._value = value;\n            if (typeof value === \"object\") {\n              optionValue = (value != null ? value.value : void 0) || index;\n            } else {\n              optionValue = value.toString();\n            }\n            bindObservable(option, optionValue, value, function(newValue) {\n              return option.value = newValue;\n            });\n            optionName = (value != null ? value.name : void 0) || value;\n            bindObservable(option, optionName, value, function(newValue) {\n              return option.textContent = option.innerText = newValue;\n            });\n            element.appendChild(option);\n            if (value === element._value) {\n              element.selectedIndex = index;\n            }\n            return option;\n          });\n        };\n        return bindObservable(element, values, context, updateValues);\n      }\n    }\n  };\n\n  observeAttribute = function(element, context, name, value) {\n    var binding, nodeName, _ref;\n    nodeName = element.nodeName;\n    if (name === \"value\") {\n      valueBind(element, value);\n    } else if (binding = (_ref = specialBindings[nodeName]) != null ? _ref[name] : void 0) {\n      binding(element, value, context);\n    } else if (name.match(/^on/) && isEvent(name.substr(2))) {\n      bindEvent(element, name, value, context);\n    } else if (isEvent(name)) {\n      bindEvent(element, \"on\" + name, value, context);\n    } else {\n      bindObservable(element, value, context, function(newValue) {\n        if ((newValue != null) && newValue !== false) {\n          return element.setAttribute(name, newValue);\n        } else {\n          return element.removeAttribute(name);\n        }\n      });\n    }\n    return element;\n  };\n\n  observeAttributes = function(element, context, attributes) {\n    return Object.keys(attributes).forEach(function(name) {\n      var value;\n      value = attributes[name];\n      return observeAttribute(element, context, name, value);\n    });\n  };\n\n  bindObservable = function(element, value, context, update) {\n    var observable, observe, unobserve;\n    observable = Observable(value, context);\n    observe = function() {\n      observable.observe(update);\n      return update(observable());\n    };\n    unobserve = function() {\n      return observable.stopObserving(update);\n    };\n    observe();\n    return element;\n  };\n\n  bindEvent = function(element, name, fn, context) {\n    return element[name] = function() {\n      return fn.apply(context, arguments);\n    };\n  };\n\n  id = function(element, context, sources) {\n    var lastId, update, value;\n    value = Observable.concat.apply(Observable, sources.map(function(source) {\n      return Observable(source, context);\n    }));\n    update = function(newId) {\n      return element.id = newId;\n    };\n    lastId = function() {\n      return value.last();\n    };\n    return bindObservable(element, lastId, context, update);\n  };\n\n  classes = function(element, context, sources) {\n    var classNames, update, value;\n    value = Observable.concat.apply(Observable, sources.map(function(source) {\n      return Observable(source, context);\n    }));\n    update = function(classNames) {\n      return element.className = classNames;\n    };\n    classNames = function() {\n      return value.join(\" \");\n    };\n    return bindObservable(element, classNames, context, update);\n  };\n\n  createElement = function(name) {\n    return document.createElement(name);\n  };\n\n  observeContent = function(element, context, contentFn) {\n    var currentContents, observableContentsFn, update;\n    observableContentsFn = Observable(function() {\n      var contents;\n      contents = Observable.concat();\n      contentFn.call(context, {\n        buffer: bufferTo(context, contents),\n        element: makeElement\n      });\n      return contents;\n    }, context);\n    currentContents = observableContentsFn();\n    update = function() {\n      empty(element);\n      return currentContents.each(function(item) {\n        if (typeof item === \"string\") {\n          return element.appendChild(document.createTextNode(item));\n        } else if (typeof item === \"number\") {\n          return element.appendChild(document.createTextNode(item));\n        } else if (typeof item === \"boolean\") {\n          return element.appendChild(document.createTextNode(item));\n        } else {\n          return element.appendChild(item);\n        }\n      });\n    };\n    observableContentsFn.observe(function(newContents) {\n      currentContents.stopObserving(update);\n      currentContents = newContents;\n      currentContents.observe(update);\n      return update();\n    });\n    currentContents.observe(update);\n    return update();\n  };\n\n  bufferTo = function(context, collection) {\n    return function(content) {\n      if (typeof content === 'function') {\n        content = Observable(content, context);\n      }\n      collection.push(content);\n      return content;\n    };\n  };\n\n  makeElement = function(name, context, attributes, fn) {\n    var element;\n    if (attributes == null) {\n      attributes = {};\n    }\n    element = createElement(name);\n    Observable(function() {\n      if (attributes.id != null) {\n        id(element, context, attributes.id);\n        delete attributes.id;\n      }\n      if (attributes[\"class\"] != null) {\n        classes(element, context, attributes[\"class\"]);\n        delete attributes[\"class\"];\n      }\n      observeAttributes(element, context, attributes);\n      if (element.nodeName !== \"SELECT\") {\n        return observeContent(element, context, fn);\n      }\n    });\n    return element;\n  };\n\n  Runtime = function(context) {\n    var self;\n    self = {\n      buffer: function(content) {\n        if (self.root) {\n          throw \"Cannot have multiple root elements\";\n        }\n        return self.root = content;\n      },\n      element: makeElement,\n      filter: function(name, content) {}\n    };\n    return self;\n  };\n\n  Runtime.VERSION = _dereq_(\"../package.json\").version;\n\n  Runtime.Observable = Observable;\n\n  module.exports = Runtime;\n\n  empty = function(node) {\n    var child, _results;\n    _results = [];\n    while (child = node.firstChild) {\n      _results.push(node.removeChild(child));\n    }\n    return _results;\n  };\n\n  valueIndexOf = function(options, value) {\n    if (typeof value === \"object\") {\n      return options.indexOf(value);\n    } else {\n      return options.map(function(option) {\n        return option.toString();\n      }).indexOf(value.toString());\n    }\n  };\n\n  get = function(x) {\n    if (typeof x === 'function') {\n      return x();\n    } else {\n      return x;\n    }\n  };\n\n}).call(this);\n\n},{\"../package.json\":3,\"o_0\":2}],2:[function(_dereq_,module,exports){\n(function (global){\n// Generated by CoffeeScript 1.8.0\n(function() {\n  var Observable, autoDeps, computeDependencies, copy, extend, flatten, get, last, magicDependency, remove, splat, withBase,\n    __slice = [].slice;\n\n  Observable = function(value, context) {\n    var changed, fn, listeners, notify, notifyReturning, self;\n    if (typeof (value != null ? value.observe : void 0) === \"function\") {\n      return value;\n    }\n    listeners = [];\n    notify = function(newValue) {\n      return copy(listeners).forEach(function(listener) {\n        return listener(newValue);\n      });\n    };\n    if (typeof value === 'function') {\n      fn = value;\n      self = function() {\n        magicDependency(self);\n        return value;\n      };\n      changed = function() {\n        value = computeDependencies(self, fn, changed, context);\n        return notify(value);\n      };\n      value = computeDependencies(self, fn, changed, context);\n    } else {\n      self = function(newValue) {\n        if (arguments.length > 0) {\n          if (value !== newValue) {\n            value = newValue;\n            notify(newValue);\n          }\n        } else {\n          magicDependency(self);\n        }\n        return value;\n      };\n    }\n    self.each = function(callback) {\n      magicDependency(self);\n      if (value != null) {\n        [value].forEach(function(item) {\n          return callback.call(item, item);\n        });\n      }\n      return self;\n    };\n    if (Array.isArray(value)) {\n      [\"concat\", \"every\", \"filter\", \"forEach\", \"indexOf\", \"join\", \"lastIndexOf\", \"map\", \"reduce\", \"reduceRight\", \"slice\", \"some\"].forEach(function(method) {\n        return self[method] = function() {\n          var args;\n          args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n          magicDependency(self);\n          return value[method].apply(value, args);\n        };\n      });\n      [\"pop\", \"push\", \"reverse\", \"shift\", \"splice\", \"sort\", \"unshift\"].forEach(function(method) {\n        return self[method] = function() {\n          var args;\n          args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n          return notifyReturning(value[method].apply(value, args));\n        };\n      });\n      notifyReturning = function(returnValue) {\n        notify(value);\n        return returnValue;\n      };\n      extend(self, {\n        each: function(callback) {\n          self.forEach(function(item, index) {\n            return callback.call(item, item, index, self);\n          });\n          return self;\n        },\n        remove: function(object) {\n          var index;\n          index = value.indexOf(object);\n          if (index >= 0) {\n            return notifyReturning(value.splice(index, 1)[0]);\n          }\n        },\n        get: function(index) {\n          magicDependency(self);\n          return value[index];\n        },\n        first: function() {\n          magicDependency(self);\n          return value[0];\n        },\n        last: function() {\n          magicDependency(self);\n          return value[value.length - 1];\n        },\n        size: function() {\n          magicDependency(self);\n          return value.length;\n        }\n      });\n    }\n    extend(self, {\n      listeners: listeners,\n      observe: function(listener) {\n        return listeners.push(listener);\n      },\n      stopObserving: function(fn) {\n        return remove(listeners, fn);\n      },\n      toggle: function() {\n        return self(!value);\n      },\n      increment: function(n) {\n        return self(value + n);\n      },\n      decrement: function(n) {\n        return self(value - n);\n      },\n      toString: function() {\n        return \"Observable(\" + value + \")\";\n      }\n    });\n    return self;\n  };\n\n  Observable.concat = function() {\n    var args, o;\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    args = Observable(args);\n    o = Observable(function() {\n      return flatten(args.map(splat));\n    });\n    o.push = args.push;\n    return o;\n  };\n\n  module.exports = Observable;\n\n  extend = function() {\n    var name, source, sources, target, _i, _len;\n    target = arguments[0], sources = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    for (_i = 0, _len = sources.length; _i < _len; _i++) {\n      source = sources[_i];\n      for (name in source) {\n        target[name] = source[name];\n      }\n    }\n    return target;\n  };\n\n  global.OBSERVABLE_ROOT_HACK = [];\n\n  autoDeps = function() {\n    return last(global.OBSERVABLE_ROOT_HACK);\n  };\n\n  magicDependency = function(self) {\n    var observerStack;\n    if (observerStack = autoDeps()) {\n      return observerStack.push(self);\n    }\n  };\n\n  withBase = function(self, update, fn) {\n    var deps, value, _ref;\n    global.OBSERVABLE_ROOT_HACK.push(deps = []);\n    try {\n      value = fn();\n      if ((_ref = self._deps) != null) {\n        _ref.forEach(function(observable) {\n          return observable.stopObserving(update);\n        });\n      }\n      self._deps = deps;\n      deps.forEach(function(observable) {\n        return observable.observe(update);\n      });\n    } finally {\n      global.OBSERVABLE_ROOT_HACK.pop();\n    }\n    return value;\n  };\n\n  computeDependencies = function(self, fn, update, context) {\n    return withBase(self, update, function() {\n      return fn.call(context);\n    });\n  };\n\n  remove = function(array, value) {\n    var index;\n    index = array.indexOf(value);\n    if (index >= 0) {\n      return array.splice(index, 1)[0];\n    }\n  };\n\n  copy = function(array) {\n    return array.concat([]);\n  };\n\n  get = function(arg) {\n    if (typeof arg === \"function\") {\n      return arg();\n    } else {\n      return arg;\n    }\n  };\n\n  splat = function(item) {\n    var result, results;\n    results = [];\n    if (item == null) {\n      return results;\n    }\n    if (typeof item.forEach === \"function\") {\n      item.forEach(function(i) {\n        return results.push(i);\n      });\n    } else {\n      result = get(item);\n      if (result != null) {\n        results.push(result);\n      }\n    }\n    return results;\n  };\n\n  last = function(array) {\n    return array[array.length - 1];\n  };\n\n  flatten = function(array) {\n    return array.reduce(function(a, b) {\n      return a.concat(b);\n    }, []);\n  };\n\n}).call(this);\n\n}).call(this,typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],3:[function(_dereq_,module,exports){\nmodule.exports={\n  \"name\": \"hamlet-runtime\",\n  \"version\": \"0.7.0-pre.0\",\n  \"devDependencies\": {\n    \"browserify\": \"^4.1.11\",\n    \"coffee-script\": \"~1.7.1\",\n    \"hamlet-compiler\": \"0.7.0-pre.0\",\n    \"jsdom\": \"^0.10.5\",\n    \"mocha\": \"~1.12.0\",\n    \"uglify-js\": \"~2.3.6\"\n  },\n  \"dependencies\": {\n    \"o_0\": \"0.3.3\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/dr-coffee-labs/hamlet-compiler.git\"\n  },\n  \"scripts\": {\n    \"prepublish\": \"script/prepublish\",\n    \"test\": \"script/test\"\n  },\n  \"files\": [\n    \"dist/\"\n  ],\n  \"main\": \"dist/runtime.js\"\n}\n\n},{}]},{},[1])\n(1)\n});",
      "type": "blob"
    }
  },
  "progenitor": {
    "url": "http://www.danielx.net/editor/"
  },
  "version": "0.0.1",
  "entryPoint": "main",
  "remoteDependencies": [
    "https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.0/ace.js",
    "https://cdnjs.cloudflare.com/ajax/libs/marked/0.3.2/marked.min.js",
    "https://cdnjs.cloudflare.com/ajax/libs/coffee-script/1.7.1/coffee-script.min.js"
  ],
  "repository": {
    "branch": "yolo",
    "default_branch": "master",
    "full_name": "STRd6/blog",
    "homepage": null,
    "description": "An S3 backed blog.",
    "html_url": "https://github.com/STRd6/blog",
    "url": "https://api.github.com/repos/STRd6/blog",
    "publishBranch": "gh-pages"
  },
  "dependencies": {
    "cornerstone": {
      "source": {
        "LICENSE": {
          "path": "LICENSE",
          "content": "The MIT License (MIT)\n\nCopyright (c) 2013 Daniel X Moore\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
          "mode": "100644",
          "type": "blob"
        },
        "README.md": {
          "path": "README.md",
          "content": "cornerstone\n===========\n\n`Cornerstone` is the foundation for complex applications. There is always a\ntradeoff between explicit dependencies and a robust standard environment.\n\nCornerstone is to be used when we want a better environment and don't mind\nnot explicitly requiring each individual dependency.\n",
          "mode": "100644",
          "type": "blob"
        },
        "cornerstone.coffee.md": {
          "path": "cornerstone.coffee.md",
          "content": "Cornerstone\n===========\n\n`Cornerstone` is the foundation for complex applications. There is always a\ntradeoff between explicit dependencies and a robust standard environment.\n\nCornerstone is to be used when we want a better environment and don't mind\nnot explicitly requiring each individual dependency.\n\nImplementation\n--------------\n\nAdd all of the built in extensions.\n\n    require \"extensions\"\n\n    {extend, defaults} = require \"util\"\n\n    Inflector = require(\"inflector\")\n    Q = require \"q\"\n\nPollute the global environment.\n\n    extend global,\n      Bindable: require \"bindable\"\n      Core: require \"core\"\n      Deferred: Q.defer\n      Inflector: Inflector\n      defaults: defaults\n      extend: extend\n      Model: require \"model\"\n      Observable: require \"observable\"\n      Q: Q\n\n    Inflector.pollute()\n    require(\"math\").pollute()\n\nAdd our extra Point extensions\n\n    require \"./point\"\n",
          "mode": "100644",
          "type": "blob"
        },
        "pixie.cson": {
          "path": "pixie.cson",
          "content": "version: \"0.2.10\"\nentryPoint: \"cornerstone\"\ndependencies:\n  bindable: \"distri/bindable:v0.1.0\"\n  core: \"distri/core:v0.6.0\"\n  extensions: \"distri/extensions:v0.2.0\"\n  inflector: \"distri/inflector:v0.2.1\"\n  math: \"distri/math:v0.2.4\"\n  model: \"distri/model:v0.1.3\"\n  observable: \"distri/observable:v0.3.1\"\n  q: \"distri/q:v1.0.1\"\n  util: \"distri/util:v0.1.0\"\n",
          "mode": "100644",
          "type": "blob"
        },
        "point.coffee.md": {
          "path": "point.coffee.md",
          "content": "Extend Point With Math Magic\n============================\n\nLet's add our number extensions to `Point`s.\n\n    [\n      \"abs\"\n      \"ceil\"\n      \"floor\"\n    ].forEach (method) ->\n      Point.prototype[method] = ->\n        Point(@x[method](), @y[method]())\n",
          "mode": "100644",
          "type": "blob"
        },
        "test/cornerstone.coffee": {
          "path": "test/cornerstone.coffee",
          "content": "require \"../cornerstone\"\n\ndescribe \"Cornerstone\", ->\n  it \"should provide Bindable\", ->\n    assert Bindable()\n\n  it \"should provide Core\", ->\n    assert Core()\n\n  it \"should provide Deferred\", (done) ->\n    deferred = Deferred()\n\n    promise = deferred.promise\n\n    promise.then done\n\n    deferred.fulfill()\n\n  it \"should provide Matrix\", ->\n    assert Matrix()\n\n  it \"should provide Model\", ->\n    assert Model()\n\n  it \"should provide Observable\", ->\n    assert Observable()\n\n  describe \"Point\", ->\n\n    it \"should provide Point\", ->\n      assert Point()\n\n    [\n      \"abs\"\n      \"ceil\"\n      \"floor\"\n    ].forEach (method) ->\n      it \"should have Point::#{method}\", ->\n        assert Point()[method]\n\n  it \"should provide Q\", ->\n    assert Q\n\n  it \"should provide Random\", ->\n    assert Random\n\n  it \"should provide rand\", ->\n    assert rand\n\n  it \"should provide Size\", ->\n    assert Size\n\n  it \"should provide Function#debounce\", ->\n    assert (->).debounce\n\n  it \"should provide extend\", ->\n    assert extend\n\n  it \"should provied defaults\", ->\n    assert defaults\n",
          "mode": "100644",
          "type": "blob"
        },
        "test/string_inflection.coffee": {
          "path": "test/string_inflection.coffee",
          "content": "sampleData = \"\"\"\n  address       addresses\n  boss          bosses\n  bus           buses\n  cat           cats\n  child         children\n  duder         duders\n  Hat           Hats\n  man           men\n  woman         women\n  zombie        zombies\n  octopus       octopi\n  walrus        walruses\n  guy           guys\n  person        people\n  status        statuses\n\"\"\".split(\"\\n\").map (line) ->\n  line.split(\" \").filter (piece) ->\n    piece != \"\"\n\ndescribe \"Inflector\", ->\n  describe \"pluralize\", ->\n    sampleData.forEach ([singular, plural]) ->\n      it \"#{singular} as #{plural}\", ->\n        assert.equal Inflector.pluralize(singular), plural\n\n      it \"#{plural} as #{plural}\", ->\n        assert.equal Inflector.pluralize(plural), plural\n\n  describe \"singularize\", ->\n    sampleData.forEach ([singular, plural]) ->\n      it \"#{plural} as #{singular}\", ->\n        assert.equal Inflector.singularize(plural), singular\n\n      it \"#{singular} as #{singular}\", ->\n        assert.equal Inflector.singularize(singular), singular\n\n  describe \"camelize\", ->\n    it \"message_properties as MessageProperties\", ->\n      assert.equal Inflector.camelize(\"message_properties\"), \"MessageProperties\"\n\n    it \"message_properties, true as messageProperties\", ->\n      assert.equal Inflector.camelize(\"message_properties\", true), \"messageProperties\"\n\n    it \"should replace / with scope resolution operator\", ->\n      assert.equal Inflector.camelize(\"models/person\"), \"Models.Person\"\n\n    it \"shouldn't overdo it\", ->\n      assert.equal Inflector.camelize(Inflector.camelize(\"anAlreadyCamelizedDude\")), \"AnAlreadyCamelizedDude\"\n\n  describe \"classify\", ->\n    it \"should convert a property name into a class name suitable for lookup\", ->\n      assert.equal Inflector.classify(\"message_bus_properties\"), \"MessageBusProperty\"\n\n    it \"should work for camel cased names too\", ->\n      assert.equal Inflector.classify(\"messageBusProperties\"), \"MessageBusProperty\"\n\n    it \"should convert directory separators to namespaces\", ->\n      assert.equal Inflector.classify(\"models/message_bus_properties\"), \"Models.MessageBusProperty\"\n\n  describe \"capitalize\", ->\n    it \"should work on underscored words\", ->\n      assert.equal Inflector.capitalize(\"message_properties\"), \"Message_properties\"\n\n    it \"should work on normal words\", ->\n      assert.equal Inflector.capitalize(\"message properties\"), \"Message properties\"\n\n  describe \"constantize\", ->\n    # Namespace for testing\n    Tempest =\n      Models:\n        Person: {}\n\n    it \"should look up global constants\", ->\n      assert.equal Inflector.constantize(\"String\"), String\n      assert.equal Inflector.constantize(\"Number\"), Number\n      assert.equal Inflector.constantize(\"Object\"), Object\n\n    it \"should traverse namespaces\", ->\n      assert.equal Inflector.constantize(\"Models.Person\", Tempest), Tempest.Models.Person\n\n    it \"should work with classify\", ->\n      assert.equal Inflector.constantize(Inflector.classify(\"models/person\"), Tempest), Tempest.Models.Person\n\n  describe \"humanize\", ->\n    it \"should replace underscores with spaces\", ->\n      assert.equal Inflector.humanize(\"message_properties\"), \"Message properties\"\n      assert.equal Inflector.humanize(\"message_properties\", true), \"message properties\"\n\n    it \"should remove id suffixes\", ->\n      assert.equal Inflector.humanize(\"message_id\"), \"Message\"\n      assert.equal Inflector.humanize(\"messageId\"), \"Message\"\n\n    it \"should also work for camelCased words\", ->\n      assert.equal Inflector.humanize(\"messageProperties\"), \"Message properties\"\n      assert.equal Inflector.humanize(\"messageProperties\", true), \"message properties\"\n\n  describe \"tableize\", ->\n    it \"should transform words for use in storage solutions\", ->\n      assert.equal Inflector.tableize(\"people\"), \"people\"\n      assert.equal Inflector.tableize(\"MessageBusProperty\"), \"message_bus_properties\"\n\n  describe \"titleize\", ->\n    it \"should transform words to title case\", ->\n      assert.equal Inflector.titleize(\"message_properties\"), \"Message Properties\"\n      assert.equal Inflector.titleize(\"message properties to keep\"), \"Message Properties to Keep\"\n\n  describe \"underscore\", ->\n    it \"should convert camelCased words to underscored words\", ->\n      assert.equal Inflector.underscore(\"MessageProperties\"), \"message_properties\"\n      assert.equal Inflector.underscore(\"messageProperties\"), \"message_properties\"\n\n    it \"should deal with acronyms\", ->\n      assert.equal Inflector.underscore(\"MP\"), \"mp\"\n      assert.equal Inflector.underscore(\"HTTPConnection\"), \"http_connection\"\n\n  describe \"dasherize\", ->\n    it \"should convert words with spaces into words with dashes\", ->\n      assert.equal Inflector.dasherize(\"A really cool Feature\"), \"a-really-cool-feature\"\n\ndescribe \"string inflection methods\", ->\n  [\"pluralize\", \"singularize\", \"dasherize\", \"underscore\", \"titleize\", \"humanize\", \"tableize\"].forEach (method) ->\n    it \"should have #{method}\", ->\n      assert typeof \"\"[method] == 'function'\n",
          "mode": "100644",
          "type": "blob"
        }
      },
      "distribution": {
        "cornerstone": {
          "path": "cornerstone",
          "content": "(function() {\n  var Inflector, Q, defaults, extend, _ref;\n\n  require(\"extensions\");\n\n  _ref = require(\"util\"), extend = _ref.extend, defaults = _ref.defaults;\n\n  Inflector = require(\"inflector\");\n\n  Q = require(\"q\");\n\n  extend(global, {\n    Bindable: require(\"bindable\"),\n    Core: require(\"core\"),\n    Deferred: Q.defer,\n    Inflector: Inflector,\n    defaults: defaults,\n    extend: extend,\n    Model: require(\"model\"),\n    Observable: require(\"observable\"),\n    Q: Q\n  });\n\n  Inflector.pollute();\n\n  require(\"math\").pollute();\n\n  require(\"./point\");\n\n}).call(this);\n",
          "type": "blob"
        },
        "pixie": {
          "path": "pixie",
          "content": "module.exports = {\"version\":\"0.2.10\",\"entryPoint\":\"cornerstone\",\"dependencies\":{\"bindable\":\"distri/bindable:v0.1.0\",\"core\":\"distri/core:v0.6.0\",\"extensions\":\"distri/extensions:v0.2.0\",\"inflector\":\"distri/inflector:v0.2.1\",\"math\":\"distri/math:v0.2.4\",\"model\":\"distri/model:v0.1.3\",\"observable\":\"distri/observable:v0.3.1\",\"q\":\"distri/q:v1.0.1\",\"util\":\"distri/util:v0.1.0\"}};",
          "type": "blob"
        },
        "point": {
          "path": "point",
          "content": "(function() {\n  [\"abs\", \"ceil\", \"floor\"].forEach(function(method) {\n    return Point.prototype[method] = function() {\n      return Point(this.x[method](), this.y[method]());\n    };\n  });\n\n}).call(this);\n",
          "type": "blob"
        },
        "test/cornerstone": {
          "path": "test/cornerstone",
          "content": "(function() {\n  require(\"../cornerstone\");\n\n  describe(\"Cornerstone\", function() {\n    it(\"should provide Bindable\", function() {\n      return assert(Bindable());\n    });\n    it(\"should provide Core\", function() {\n      return assert(Core());\n    });\n    it(\"should provide Deferred\", function(done) {\n      var deferred, promise;\n      deferred = Deferred();\n      promise = deferred.promise;\n      promise.then(done);\n      return deferred.fulfill();\n    });\n    it(\"should provide Matrix\", function() {\n      return assert(Matrix());\n    });\n    it(\"should provide Model\", function() {\n      return assert(Model());\n    });\n    it(\"should provide Observable\", function() {\n      return assert(Observable());\n    });\n    describe(\"Point\", function() {\n      it(\"should provide Point\", function() {\n        return assert(Point());\n      });\n      return [\"abs\", \"ceil\", \"floor\"].forEach(function(method) {\n        return it(\"should have Point::\" + method, function() {\n          return assert(Point()[method]);\n        });\n      });\n    });\n    it(\"should provide Q\", function() {\n      return assert(Q);\n    });\n    it(\"should provide Random\", function() {\n      return assert(Random);\n    });\n    it(\"should provide rand\", function() {\n      return assert(rand);\n    });\n    it(\"should provide Size\", function() {\n      return assert(Size);\n    });\n    it(\"should provide Function#debounce\", function() {\n      return assert((function() {}).debounce);\n    });\n    it(\"should provide extend\", function() {\n      return assert(extend);\n    });\n    return it(\"should provied defaults\", function() {\n      return assert(defaults);\n    });\n  });\n\n}).call(this);\n",
          "type": "blob"
        },
        "test/string_inflection": {
          "path": "test/string_inflection",
          "content": "(function() {\n  var sampleData;\n\n  sampleData = \"address       addresses\\nboss          bosses\\nbus           buses\\ncat           cats\\nchild         children\\nduder         duders\\nHat           Hats\\nman           men\\nwoman         women\\nzombie        zombies\\noctopus       octopi\\nwalrus        walruses\\nguy           guys\\nperson        people\\nstatus        statuses\".split(\"\\n\").map(function(line) {\n    return line.split(\" \").filter(function(piece) {\n      return piece !== \"\";\n    });\n  });\n\n  describe(\"Inflector\", function() {\n    describe(\"pluralize\", function() {\n      return sampleData.forEach(function(_arg) {\n        var plural, singular;\n        singular = _arg[0], plural = _arg[1];\n        it(\"\" + singular + \" as \" + plural, function() {\n          return assert.equal(Inflector.pluralize(singular), plural);\n        });\n        return it(\"\" + plural + \" as \" + plural, function() {\n          return assert.equal(Inflector.pluralize(plural), plural);\n        });\n      });\n    });\n    describe(\"singularize\", function() {\n      return sampleData.forEach(function(_arg) {\n        var plural, singular;\n        singular = _arg[0], plural = _arg[1];\n        it(\"\" + plural + \" as \" + singular, function() {\n          return assert.equal(Inflector.singularize(plural), singular);\n        });\n        return it(\"\" + singular + \" as \" + singular, function() {\n          return assert.equal(Inflector.singularize(singular), singular);\n        });\n      });\n    });\n    describe(\"camelize\", function() {\n      it(\"message_properties as MessageProperties\", function() {\n        return assert.equal(Inflector.camelize(\"message_properties\"), \"MessageProperties\");\n      });\n      it(\"message_properties, true as messageProperties\", function() {\n        return assert.equal(Inflector.camelize(\"message_properties\", true), \"messageProperties\");\n      });\n      it(\"should replace / with scope resolution operator\", function() {\n        return assert.equal(Inflector.camelize(\"models/person\"), \"Models.Person\");\n      });\n      return it(\"shouldn't overdo it\", function() {\n        return assert.equal(Inflector.camelize(Inflector.camelize(\"anAlreadyCamelizedDude\")), \"AnAlreadyCamelizedDude\");\n      });\n    });\n    describe(\"classify\", function() {\n      it(\"should convert a property name into a class name suitable for lookup\", function() {\n        return assert.equal(Inflector.classify(\"message_bus_properties\"), \"MessageBusProperty\");\n      });\n      it(\"should work for camel cased names too\", function() {\n        return assert.equal(Inflector.classify(\"messageBusProperties\"), \"MessageBusProperty\");\n      });\n      return it(\"should convert directory separators to namespaces\", function() {\n        return assert.equal(Inflector.classify(\"models/message_bus_properties\"), \"Models.MessageBusProperty\");\n      });\n    });\n    describe(\"capitalize\", function() {\n      it(\"should work on underscored words\", function() {\n        return assert.equal(Inflector.capitalize(\"message_properties\"), \"Message_properties\");\n      });\n      return it(\"should work on normal words\", function() {\n        return assert.equal(Inflector.capitalize(\"message properties\"), \"Message properties\");\n      });\n    });\n    describe(\"constantize\", function() {\n      var Tempest;\n      Tempest = {\n        Models: {\n          Person: {}\n        }\n      };\n      it(\"should look up global constants\", function() {\n        assert.equal(Inflector.constantize(\"String\"), String);\n        assert.equal(Inflector.constantize(\"Number\"), Number);\n        return assert.equal(Inflector.constantize(\"Object\"), Object);\n      });\n      it(\"should traverse namespaces\", function() {\n        return assert.equal(Inflector.constantize(\"Models.Person\", Tempest), Tempest.Models.Person);\n      });\n      return it(\"should work with classify\", function() {\n        return assert.equal(Inflector.constantize(Inflector.classify(\"models/person\"), Tempest), Tempest.Models.Person);\n      });\n    });\n    describe(\"humanize\", function() {\n      it(\"should replace underscores with spaces\", function() {\n        assert.equal(Inflector.humanize(\"message_properties\"), \"Message properties\");\n        return assert.equal(Inflector.humanize(\"message_properties\", true), \"message properties\");\n      });\n      it(\"should remove id suffixes\", function() {\n        assert.equal(Inflector.humanize(\"message_id\"), \"Message\");\n        return assert.equal(Inflector.humanize(\"messageId\"), \"Message\");\n      });\n      return it(\"should also work for camelCased words\", function() {\n        assert.equal(Inflector.humanize(\"messageProperties\"), \"Message properties\");\n        return assert.equal(Inflector.humanize(\"messageProperties\", true), \"message properties\");\n      });\n    });\n    describe(\"tableize\", function() {\n      return it(\"should transform words for use in storage solutions\", function() {\n        assert.equal(Inflector.tableize(\"people\"), \"people\");\n        return assert.equal(Inflector.tableize(\"MessageBusProperty\"), \"message_bus_properties\");\n      });\n    });\n    describe(\"titleize\", function() {\n      return it(\"should transform words to title case\", function() {\n        assert.equal(Inflector.titleize(\"message_properties\"), \"Message Properties\");\n        return assert.equal(Inflector.titleize(\"message properties to keep\"), \"Message Properties to Keep\");\n      });\n    });\n    describe(\"underscore\", function() {\n      it(\"should convert camelCased words to underscored words\", function() {\n        assert.equal(Inflector.underscore(\"MessageProperties\"), \"message_properties\");\n        return assert.equal(Inflector.underscore(\"messageProperties\"), \"message_properties\");\n      });\n      return it(\"should deal with acronyms\", function() {\n        assert.equal(Inflector.underscore(\"MP\"), \"mp\");\n        return assert.equal(Inflector.underscore(\"HTTPConnection\"), \"http_connection\");\n      });\n    });\n    return describe(\"dasherize\", function() {\n      return it(\"should convert words with spaces into words with dashes\", function() {\n        return assert.equal(Inflector.dasherize(\"A really cool Feature\"), \"a-really-cool-feature\");\n      });\n    });\n  });\n\n  describe(\"string inflection methods\", function() {\n    return [\"pluralize\", \"singularize\", \"dasherize\", \"underscore\", \"titleize\", \"humanize\", \"tableize\"].forEach(function(method) {\n      return it(\"should have \" + method, function() {\n        return assert(typeof \"\"[method] === 'function');\n      });\n    });\n  });\n\n}).call(this);\n",
          "type": "blob"
        }
      },
      "progenitor": {
        "url": "http://www.danielx.net/editor/"
      },
      "version": "0.2.10",
      "entryPoint": "cornerstone",
      "repository": {
        "branch": "master",
        "default_branch": "master",
        "full_name": "distri/cornerstone",
        "homepage": null,
        "description": "Core JavaScript Extensions.",
        "html_url": "https://github.com/distri/cornerstone",
        "url": "https://api.github.com/repos/distri/cornerstone",
        "publishBranch": "gh-pages"
      },
      "dependencies": {
        "bindable": {
          "source": {
            "LICENSE": {
              "path": "LICENSE",
              "mode": "100644",
              "content": "The MIT License (MIT)\n\nCopyright (c) 2014 distri\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
              "type": "blob"
            },
            "README.coffee.md": {
              "path": "README.coffee.md",
              "mode": "100644",
              "content": "Bindable\n========\n\n    Core = require \"core\"\n\nAdd event binding to objects.\n\n>     bindable = Bindable()\n>     bindable.on \"greet\", ->\n>       console.log \"yo!\"\n>     bindable.trigger \"greet\"\n>     #=> \"yo!\" is printed to log\n\nUse as a mixin.\n\n>    self.include Bindable\n\n    module.exports = (I={}, self=Core(I)) ->\n      eventCallbacks = {}\n\n      self.extend\n\nAdds a function as an event listener.\n\nThis will call `coolEventHandler` after `yourObject.trigger \"someCustomEvent\"`\nis called.\n\n>     yourObject.on \"someCustomEvent\", coolEventHandler\n\nHandlers can be attached to namespaces as well. The namespaces are only used\nfor finer control of targeting event removal. For example if you are making a\ncustom drawing system you could unbind `\".Drawable\"` events and add your own.\n\n>     yourObject.on \"\"\n\n        on: (namespacedEvent, callback) ->\n          [event, namespace] = namespacedEvent.split(\".\")\n\n          # HACK: Here we annotate the callback function with namespace metadata\n          # This will probably lead to some strange edge cases, but should work fine\n          # for simple cases.\n          if namespace\n            callback.__PIXIE ||= {}\n            callback.__PIXIE[namespace] = true\n\n          eventCallbacks[event] ||= []\n          eventCallbacks[event].push(callback)\n\n          return self\n\nRemoves a specific event listener, or all event listeners if\nno specific listener is given.\n\nRemoves the handler coolEventHandler from the event `\"someCustomEvent\"` while\nleaving the other events intact.\n\n>     yourObject.off \"someCustomEvent\", coolEventHandler\n\nRemoves all handlers attached to `\"anotherCustomEvent\"`\n\n>     yourObject.off \"anotherCustomEvent\"\n\nRemove all handlers from the `\".Drawable\" namespace`\n\n>     yourObject.off \".Drawable\"\n\n        off: (namespacedEvent, callback) ->\n          [event, namespace] = namespacedEvent.split(\".\")\n\n          if event\n            eventCallbacks[event] ||= []\n\n            if namespace\n              # Select only the callbacks that do not have this namespace metadata\n              eventCallbacks[event] = eventCallbacks.filter (callback) ->\n                !callback.__PIXIE?[namespace]?\n\n            else\n              if callback\n                remove eventCallbacks[event], callback\n              else\n                eventCallbacks[event] = []\n          else if namespace\n            # No event given\n            # Select only the callbacks that do not have this namespace metadata\n            # for any events bound\n            for key, callbacks of eventCallbacks\n              eventCallbacks[key] = callbacks.filter (callback) ->\n                !callback.__PIXIE?[namespace]?\n\n          return self\n\nCalls all listeners attached to the specified event.\n\n>     # calls each event handler bound to \"someCustomEvent\"\n>     yourObject.trigger \"someCustomEvent\"\n\nAdditional parameters can be passed to the handlers.\n\n>     yourObject.trigger \"someEvent\", \"hello\", \"anotherParameter\"\n\n        trigger: (event, parameters...) ->\n          callbacks = eventCallbacks[event]\n\n          if callbacks\n            callbacks.forEach (callback) ->\n              callback.apply(self, parameters)\n\n          return self\n\nLegacy method aliases.\n\n      self.extend\n        bind: self.on\n        unbind: self.off\n\nHelpers\n-------\n\nRemove a value from an array.\n\n    remove = (array, value) ->\n      index = array.indexOf(value)\n\n      if index >= 0\n        array.splice(index, 1)[0]\n",
              "type": "blob"
            },
            "pixie.cson": {
              "path": "pixie.cson",
              "mode": "100644",
              "content": "entryPoint: \"README\"\nversion: \"0.1.0\"\ndependencies:\n  core: \"distri/core:v0.6.0\"\n",
              "type": "blob"
            },
            "test/bindable.coffee": {
              "path": "test/bindable.coffee",
              "mode": "100644",
              "content": "test = it\nok = assert\nequal = assert.equal\n\nBindable = require \"../README\"\n\ndescribe \"Bindable\", ->\n\n  test \"#bind and #trigger\", ->\n    o = Bindable()\n\n    o.bind(\"test\", -> ok true)\n\n    o.trigger(\"test\")\n\n  test \"Multiple bindings\", ->\n    o = Bindable()\n\n    o.bind(\"test\", -> ok true)\n    o.bind(\"test\", -> ok true)\n\n    o.trigger(\"test\")\n\n  test \"#trigger arguments\", ->\n    o = Bindable()\n\n    param1 = \"the message\"\n    param2 = 3\n\n    o.bind \"test\", (p1, p2) ->\n      equal(p1, param1)\n      equal(p2, param2)\n\n    o.trigger \"test\", param1, param2\n\n  test \"#unbind\", ->\n    o = Bindable()\n\n    callback = ->\n      ok false\n\n    o.bind \"test\", callback\n    # Unbind specific event\n    o.unbind \"test\", callback\n    o.trigger \"test\"\n\n    o.bind \"test\", callback\n    # Unbind all events\n    o.unbind \"test\"\n    o.trigger \"test\"\n\n  test \"#trigger namespace\", ->\n    o = Bindable()\n    o.bind \"test.TestNamespace\", ->\n      ok true\n\n    o.trigger \"test\"\n\n    o.unbind \".TestNamespace\"\n    o.trigger \"test\"\n\n  test \"#unbind namespaced\", ->\n    o = Bindable()\n\n    o.bind \"test.TestNamespace\", ->\n      ok true\n\n    o.trigger \"test\"\n\n    o.unbind \".TestNamespace\", ->\n    o.trigger \"test\"\n",
              "type": "blob"
            }
          },
          "distribution": {
            "README": {
              "path": "README",
              "content": "(function() {\n  var Core, remove,\n    __slice = [].slice;\n\n  Core = require(\"core\");\n\n  module.exports = function(I, self) {\n    var eventCallbacks;\n    if (I == null) {\n      I = {};\n    }\n    if (self == null) {\n      self = Core(I);\n    }\n    eventCallbacks = {};\n    self.extend({\n      on: function(namespacedEvent, callback) {\n        var event, namespace, _ref;\n        _ref = namespacedEvent.split(\".\"), event = _ref[0], namespace = _ref[1];\n        if (namespace) {\n          callback.__PIXIE || (callback.__PIXIE = {});\n          callback.__PIXIE[namespace] = true;\n        }\n        eventCallbacks[event] || (eventCallbacks[event] = []);\n        eventCallbacks[event].push(callback);\n        return self;\n      },\n      off: function(namespacedEvent, callback) {\n        var callbacks, event, key, namespace, _ref;\n        _ref = namespacedEvent.split(\".\"), event = _ref[0], namespace = _ref[1];\n        if (event) {\n          eventCallbacks[event] || (eventCallbacks[event] = []);\n          if (namespace) {\n            eventCallbacks[event] = eventCallbacks.filter(function(callback) {\n              var _ref1;\n              return ((_ref1 = callback.__PIXIE) != null ? _ref1[namespace] : void 0) == null;\n            });\n          } else {\n            if (callback) {\n              remove(eventCallbacks[event], callback);\n            } else {\n              eventCallbacks[event] = [];\n            }\n          }\n        } else if (namespace) {\n          for (key in eventCallbacks) {\n            callbacks = eventCallbacks[key];\n            eventCallbacks[key] = callbacks.filter(function(callback) {\n              var _ref1;\n              return ((_ref1 = callback.__PIXIE) != null ? _ref1[namespace] : void 0) == null;\n            });\n          }\n        }\n        return self;\n      },\n      trigger: function() {\n        var callbacks, event, parameters;\n        event = arguments[0], parameters = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n        callbacks = eventCallbacks[event];\n        if (callbacks) {\n          callbacks.forEach(function(callback) {\n            return callback.apply(self, parameters);\n          });\n        }\n        return self;\n      }\n    });\n    return self.extend({\n      bind: self.on,\n      unbind: self.off\n    });\n  };\n\n  remove = function(array, value) {\n    var index;\n    index = array.indexOf(value);\n    if (index >= 0) {\n      return array.splice(index, 1)[0];\n    }\n  };\n\n}).call(this);\n\n//# sourceURL=README.coffee",
              "type": "blob"
            },
            "pixie": {
              "path": "pixie",
              "content": "module.exports = {\"entryPoint\":\"README\",\"version\":\"0.1.0\",\"dependencies\":{\"core\":\"distri/core:v0.6.0\"}};",
              "type": "blob"
            },
            "test/bindable": {
              "path": "test/bindable",
              "content": "(function() {\n  var Bindable, equal, ok, test;\n\n  test = it;\n\n  ok = assert;\n\n  equal = assert.equal;\n\n  Bindable = require(\"../README\");\n\n  describe(\"Bindable\", function() {\n    test(\"#bind and #trigger\", function() {\n      var o;\n      o = Bindable();\n      o.bind(\"test\", function() {\n        return ok(true);\n      });\n      return o.trigger(\"test\");\n    });\n    test(\"Multiple bindings\", function() {\n      var o;\n      o = Bindable();\n      o.bind(\"test\", function() {\n        return ok(true);\n      });\n      o.bind(\"test\", function() {\n        return ok(true);\n      });\n      return o.trigger(\"test\");\n    });\n    test(\"#trigger arguments\", function() {\n      var o, param1, param2;\n      o = Bindable();\n      param1 = \"the message\";\n      param2 = 3;\n      o.bind(\"test\", function(p1, p2) {\n        equal(p1, param1);\n        return equal(p2, param2);\n      });\n      return o.trigger(\"test\", param1, param2);\n    });\n    test(\"#unbind\", function() {\n      var callback, o;\n      o = Bindable();\n      callback = function() {\n        return ok(false);\n      };\n      o.bind(\"test\", callback);\n      o.unbind(\"test\", callback);\n      o.trigger(\"test\");\n      o.bind(\"test\", callback);\n      o.unbind(\"test\");\n      return o.trigger(\"test\");\n    });\n    test(\"#trigger namespace\", function() {\n      var o;\n      o = Bindable();\n      o.bind(\"test.TestNamespace\", function() {\n        return ok(true);\n      });\n      o.trigger(\"test\");\n      o.unbind(\".TestNamespace\");\n      return o.trigger(\"test\");\n    });\n    return test(\"#unbind namespaced\", function() {\n      var o;\n      o = Bindable();\n      o.bind(\"test.TestNamespace\", function() {\n        return ok(true);\n      });\n      o.trigger(\"test\");\n      o.unbind(\".TestNamespace\", function() {});\n      return o.trigger(\"test\");\n    });\n  });\n\n}).call(this);\n\n//# sourceURL=test/bindable.coffee",
              "type": "blob"
            }
          },
          "progenitor": {
            "url": "http://strd6.github.io/editor/"
          },
          "version": "0.1.0",
          "entryPoint": "README",
          "repository": {
            "id": 17189431,
            "name": "bindable",
            "full_name": "distri/bindable",
            "owner": {
              "login": "distri",
              "id": 6005125,
              "avatar_url": "https://identicons.github.com/f90c81ffc1498e260c820082f2e7ca5f.png",
              "gravatar_id": null,
              "url": "https://api.github.com/users/distri",
              "html_url": "https://github.com/distri",
              "followers_url": "https://api.github.com/users/distri/followers",
              "following_url": "https://api.github.com/users/distri/following{/other_user}",
              "gists_url": "https://api.github.com/users/distri/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/distri/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/distri/subscriptions",
              "organizations_url": "https://api.github.com/users/distri/orgs",
              "repos_url": "https://api.github.com/users/distri/repos",
              "events_url": "https://api.github.com/users/distri/events{/privacy}",
              "received_events_url": "https://api.github.com/users/distri/received_events",
              "type": "Organization",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/distri/bindable",
            "description": "Event binding",
            "fork": false,
            "url": "https://api.github.com/repos/distri/bindable",
            "forks_url": "https://api.github.com/repos/distri/bindable/forks",
            "keys_url": "https://api.github.com/repos/distri/bindable/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/distri/bindable/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/distri/bindable/teams",
            "hooks_url": "https://api.github.com/repos/distri/bindable/hooks",
            "issue_events_url": "https://api.github.com/repos/distri/bindable/issues/events{/number}",
            "events_url": "https://api.github.com/repos/distri/bindable/events",
            "assignees_url": "https://api.github.com/repos/distri/bindable/assignees{/user}",
            "branches_url": "https://api.github.com/repos/distri/bindable/branches{/branch}",
            "tags_url": "https://api.github.com/repos/distri/bindable/tags",
            "blobs_url": "https://api.github.com/repos/distri/bindable/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/distri/bindable/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/distri/bindable/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/distri/bindable/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/distri/bindable/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/distri/bindable/languages",
            "stargazers_url": "https://api.github.com/repos/distri/bindable/stargazers",
            "contributors_url": "https://api.github.com/repos/distri/bindable/contributors",
            "subscribers_url": "https://api.github.com/repos/distri/bindable/subscribers",
            "subscription_url": "https://api.github.com/repos/distri/bindable/subscription",
            "commits_url": "https://api.github.com/repos/distri/bindable/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/distri/bindable/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/distri/bindable/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/distri/bindable/issues/comments/{number}",
            "contents_url": "https://api.github.com/repos/distri/bindable/contents/{+path}",
            "compare_url": "https://api.github.com/repos/distri/bindable/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/distri/bindable/merges",
            "archive_url": "https://api.github.com/repos/distri/bindable/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/distri/bindable/downloads",
            "issues_url": "https://api.github.com/repos/distri/bindable/issues{/number}",
            "pulls_url": "https://api.github.com/repos/distri/bindable/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/distri/bindable/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/distri/bindable/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/distri/bindable/labels{/name}",
            "releases_url": "https://api.github.com/repos/distri/bindable/releases{/id}",
            "created_at": "2014-02-25T21:50:35Z",
            "updated_at": "2014-02-25T21:50:35Z",
            "pushed_at": "2014-02-25T21:50:35Z",
            "git_url": "git://github.com/distri/bindable.git",
            "ssh_url": "git@github.com:distri/bindable.git",
            "clone_url": "https://github.com/distri/bindable.git",
            "svn_url": "https://github.com/distri/bindable",
            "homepage": null,
            "size": 0,
            "stargazers_count": 0,
            "watchers_count": 0,
            "language": null,
            "has_issues": true,
            "has_downloads": true,
            "has_wiki": true,
            "forks_count": 0,
            "mirror_url": null,
            "open_issues_count": 0,
            "forks": 0,
            "open_issues": 0,
            "watchers": 0,
            "default_branch": "master",
            "master_branch": "master",
            "permissions": {
              "admin": true,
              "push": true,
              "pull": true
            },
            "organization": {
              "login": "distri",
              "id": 6005125,
              "avatar_url": "https://identicons.github.com/f90c81ffc1498e260c820082f2e7ca5f.png",
              "gravatar_id": null,
              "url": "https://api.github.com/users/distri",
              "html_url": "https://github.com/distri",
              "followers_url": "https://api.github.com/users/distri/followers",
              "following_url": "https://api.github.com/users/distri/following{/other_user}",
              "gists_url": "https://api.github.com/users/distri/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/distri/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/distri/subscriptions",
              "organizations_url": "https://api.github.com/users/distri/orgs",
              "repos_url": "https://api.github.com/users/distri/repos",
              "events_url": "https://api.github.com/users/distri/events{/privacy}",
              "received_events_url": "https://api.github.com/users/distri/received_events",
              "type": "Organization",
              "site_admin": false
            },
            "network_count": 0,
            "subscribers_count": 2,
            "branch": "v0.1.0",
            "defaultBranch": "master"
          },
          "dependencies": {
            "core": {
              "source": {
                "LICENSE": {
                  "path": "LICENSE",
                  "mode": "100644",
                  "content": "The MIT License (MIT)\n\nCopyright (c) 2013 Daniel X Moore\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
                  "type": "blob"
                },
                "README.md": {
                  "path": "README.md",
                  "mode": "100644",
                  "content": "core\n====\n\nAn object extension system.\n",
                  "type": "blob"
                },
                "core.coffee.md": {
                  "path": "core.coffee.md",
                  "mode": "100644",
                  "content": "Core\n====\n\nThe Core module is used to add extended functionality to objects without\nextending `Object.prototype` directly.\n\n    Core = (I={}, self={}) ->\n      extend self,\n\nExternal access to instance variables. Use of this property should be avoided\nin general, but can come in handy from time to time.\n\n>     #! example\n>     I =\n>       r: 255\n>       g: 0\n>       b: 100\n>\n>     myObject = Core(I)\n>\n>     [myObject.I.r, myObject.I.g, myObject.I.b]\n\n        I: I\n\nGenerates a public jQuery style getter / setter method for each `String` argument.\n\n>     #! example\n>     myObject = Core\n>       r: 255\n>       g: 0\n>       b: 100\n>\n>     myObject.attrAccessor \"r\", \"g\", \"b\"\n>\n>     myObject.r(254)\n\n        attrAccessor: (attrNames...) ->\n          attrNames.forEach (attrName) ->\n            self[attrName] = (newValue) ->\n              if arguments.length > 0\n                I[attrName] = newValue\n\n                return self\n              else\n                I[attrName]\n\n          return self\n\nGenerates a public jQuery style getter method for each String argument.\n\n>     #! example\n>     myObject = Core\n>       r: 255\n>       g: 0\n>       b: 100\n>\n>     myObject.attrReader \"r\", \"g\", \"b\"\n>\n>     [myObject.r(), myObject.g(), myObject.b()]\n\n        attrReader: (attrNames...) ->\n          attrNames.forEach (attrName) ->\n            self[attrName] = ->\n              I[attrName]\n\n          return self\n\nExtends this object with methods from the passed in object. A shortcut for Object.extend(self, methods)\n\n>     I =\n>       x: 30\n>       y: 40\n>       maxSpeed: 5\n>\n>     # we are using extend to give player\n>     # additional methods that Core doesn't have\n>     player = Core(I).extend\n>       increaseSpeed: ->\n>         I.maxSpeed += 1\n>\n>     player.increaseSpeed()\n\n        extend: (objects...) ->\n          extend self, objects...\n\nIncludes a module in this object. A module is a constructor that takes two parameters, `I` and `self`\n\n>     myObject = Core()\n>     myObject.include(Bindable)\n\n>     # now you can bind handlers to functions\n>     myObject.bind \"someEvent\", ->\n>       alert(\"wow. that was easy.\")\n\n        include: (modules...) ->\n          for Module in modules\n            Module(I, self)\n\n          return self\n\n      return self\n\nHelpers\n-------\n\nExtend an object with the properties of other objects.\n\n    extend = (target, sources...) ->\n      for source in sources\n        for name of source\n          target[name] = source[name]\n\n      return target\n\nExport\n\n    module.exports = Core\n",
                  "type": "blob"
                },
                "pixie.cson": {
                  "path": "pixie.cson",
                  "mode": "100644",
                  "content": "entryPoint: \"core\"\nversion: \"0.6.0\"\n",
                  "type": "blob"
                },
                "test/core.coffee": {
                  "path": "test/core.coffee",
                  "mode": "100644",
                  "content": "Core = require \"../core\"\n\nok = assert\nequals = assert.equal\ntest = it\n\ndescribe \"Core\", ->\n\n  test \"#extend\", ->\n    o = Core()\n  \n    o.extend\n      test: \"jawsome\"\n  \n    equals o.test, \"jawsome\"\n  \n  test \"#attrAccessor\", ->\n    o = Core\n      test: \"my_val\"\n  \n    o.attrAccessor(\"test\")\n  \n    equals o.test(), \"my_val\"\n    equals o.test(\"new_val\"), o\n    equals o.test(), \"new_val\"\n  \n  test \"#attrReader\", ->\n    o = Core\n      test: \"my_val\"\n  \n    o.attrReader(\"test\")\n  \n    equals o.test(), \"my_val\"\n    equals o.test(\"new_val\"), \"my_val\"\n    equals o.test(), \"my_val\"\n  \n  test \"#include\", ->\n    o = Core\n      test: \"my_val\"\n  \n    M = (I, self) ->\n      self.attrReader \"test\"\n  \n      self.extend\n        test2: \"cool\"\n  \n    ret = o.include M\n  \n    equals ret, o, \"Should return self\"\n  \n    equals o.test(), \"my_val\"\n    equals o.test2, \"cool\"\n  \n  test \"#include multiple\", ->\n    o = Core\n      test: \"my_val\"\n  \n    M = (I, self) ->\n      self.attrReader \"test\"\n  \n      self.extend\n        test2: \"cool\"\n  \n    M2 = (I, self) ->\n      self.extend\n        test2: \"coolio\"\n  \n    o.include M, M2\n  \n    equals o.test2, \"coolio\"\n",
                  "type": "blob"
                }
              },
              "distribution": {
                "core": {
                  "path": "core",
                  "content": "(function() {\n  var Core, extend,\n    __slice = [].slice;\n\n  Core = function(I, self) {\n    if (I == null) {\n      I = {};\n    }\n    if (self == null) {\n      self = {};\n    }\n    extend(self, {\n      I: I,\n      attrAccessor: function() {\n        var attrNames;\n        attrNames = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        attrNames.forEach(function(attrName) {\n          return self[attrName] = function(newValue) {\n            if (arguments.length > 0) {\n              I[attrName] = newValue;\n              return self;\n            } else {\n              return I[attrName];\n            }\n          };\n        });\n        return self;\n      },\n      attrReader: function() {\n        var attrNames;\n        attrNames = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        attrNames.forEach(function(attrName) {\n          return self[attrName] = function() {\n            return I[attrName];\n          };\n        });\n        return self;\n      },\n      extend: function() {\n        var objects;\n        objects = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return extend.apply(null, [self].concat(__slice.call(objects)));\n      },\n      include: function() {\n        var Module, modules, _i, _len;\n        modules = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        for (_i = 0, _len = modules.length; _i < _len; _i++) {\n          Module = modules[_i];\n          Module(I, self);\n        }\n        return self;\n      }\n    });\n    return self;\n  };\n\n  extend = function() {\n    var name, source, sources, target, _i, _len;\n    target = arguments[0], sources = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    for (_i = 0, _len = sources.length; _i < _len; _i++) {\n      source = sources[_i];\n      for (name in source) {\n        target[name] = source[name];\n      }\n    }\n    return target;\n  };\n\n  module.exports = Core;\n\n}).call(this);\n\n//# sourceURL=core.coffee",
                  "type": "blob"
                },
                "pixie": {
                  "path": "pixie",
                  "content": "module.exports = {\"entryPoint\":\"core\",\"version\":\"0.6.0\"};",
                  "type": "blob"
                },
                "test/core": {
                  "path": "test/core",
                  "content": "(function() {\n  var Core, equals, ok, test;\n\n  Core = require(\"../core\");\n\n  ok = assert;\n\n  equals = assert.equal;\n\n  test = it;\n\n  describe(\"Core\", function() {\n    test(\"#extend\", function() {\n      var o;\n      o = Core();\n      o.extend({\n        test: \"jawsome\"\n      });\n      return equals(o.test, \"jawsome\");\n    });\n    test(\"#attrAccessor\", function() {\n      var o;\n      o = Core({\n        test: \"my_val\"\n      });\n      o.attrAccessor(\"test\");\n      equals(o.test(), \"my_val\");\n      equals(o.test(\"new_val\"), o);\n      return equals(o.test(), \"new_val\");\n    });\n    test(\"#attrReader\", function() {\n      var o;\n      o = Core({\n        test: \"my_val\"\n      });\n      o.attrReader(\"test\");\n      equals(o.test(), \"my_val\");\n      equals(o.test(\"new_val\"), \"my_val\");\n      return equals(o.test(), \"my_val\");\n    });\n    test(\"#include\", function() {\n      var M, o, ret;\n      o = Core({\n        test: \"my_val\"\n      });\n      M = function(I, self) {\n        self.attrReader(\"test\");\n        return self.extend({\n          test2: \"cool\"\n        });\n      };\n      ret = o.include(M);\n      equals(ret, o, \"Should return self\");\n      equals(o.test(), \"my_val\");\n      return equals(o.test2, \"cool\");\n    });\n    return test(\"#include multiple\", function() {\n      var M, M2, o;\n      o = Core({\n        test: \"my_val\"\n      });\n      M = function(I, self) {\n        self.attrReader(\"test\");\n        return self.extend({\n          test2: \"cool\"\n        });\n      };\n      M2 = function(I, self) {\n        return self.extend({\n          test2: \"coolio\"\n        });\n      };\n      o.include(M, M2);\n      return equals(o.test2, \"coolio\");\n    });\n  });\n\n}).call(this);\n\n//# sourceURL=test/core.coffee",
                  "type": "blob"
                }
              },
              "progenitor": {
                "url": "http://strd6.github.io/editor/"
              },
              "version": "0.6.0",
              "entryPoint": "core",
              "repository": {
                "id": 13567517,
                "name": "core",
                "full_name": "distri/core",
                "owner": {
                  "login": "distri",
                  "id": 6005125,
                  "avatar_url": "https://identicons.github.com/f90c81ffc1498e260c820082f2e7ca5f.png",
                  "gravatar_id": null,
                  "url": "https://api.github.com/users/distri",
                  "html_url": "https://github.com/distri",
                  "followers_url": "https://api.github.com/users/distri/followers",
                  "following_url": "https://api.github.com/users/distri/following{/other_user}",
                  "gists_url": "https://api.github.com/users/distri/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/distri/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/distri/subscriptions",
                  "organizations_url": "https://api.github.com/users/distri/orgs",
                  "repos_url": "https://api.github.com/users/distri/repos",
                  "events_url": "https://api.github.com/users/distri/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/distri/received_events",
                  "type": "Organization",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/distri/core",
                "description": "An object extension system.",
                "fork": false,
                "url": "https://api.github.com/repos/distri/core",
                "forks_url": "https://api.github.com/repos/distri/core/forks",
                "keys_url": "https://api.github.com/repos/distri/core/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/distri/core/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/distri/core/teams",
                "hooks_url": "https://api.github.com/repos/distri/core/hooks",
                "issue_events_url": "https://api.github.com/repos/distri/core/issues/events{/number}",
                "events_url": "https://api.github.com/repos/distri/core/events",
                "assignees_url": "https://api.github.com/repos/distri/core/assignees{/user}",
                "branches_url": "https://api.github.com/repos/distri/core/branches{/branch}",
                "tags_url": "https://api.github.com/repos/distri/core/tags",
                "blobs_url": "https://api.github.com/repos/distri/core/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/distri/core/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/distri/core/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/distri/core/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/distri/core/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/distri/core/languages",
                "stargazers_url": "https://api.github.com/repos/distri/core/stargazers",
                "contributors_url": "https://api.github.com/repos/distri/core/contributors",
                "subscribers_url": "https://api.github.com/repos/distri/core/subscribers",
                "subscription_url": "https://api.github.com/repos/distri/core/subscription",
                "commits_url": "https://api.github.com/repos/distri/core/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/distri/core/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/distri/core/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/distri/core/issues/comments/{number}",
                "contents_url": "https://api.github.com/repos/distri/core/contents/{+path}",
                "compare_url": "https://api.github.com/repos/distri/core/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/distri/core/merges",
                "archive_url": "https://api.github.com/repos/distri/core/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/distri/core/downloads",
                "issues_url": "https://api.github.com/repos/distri/core/issues{/number}",
                "pulls_url": "https://api.github.com/repos/distri/core/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/distri/core/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/distri/core/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/distri/core/labels{/name}",
                "releases_url": "https://api.github.com/repos/distri/core/releases{/id}",
                "created_at": "2013-10-14T17:04:33Z",
                "updated_at": "2013-12-24T00:49:21Z",
                "pushed_at": "2013-10-14T23:49:11Z",
                "git_url": "git://github.com/distri/core.git",
                "ssh_url": "git@github.com:distri/core.git",
                "clone_url": "https://github.com/distri/core.git",
                "svn_url": "https://github.com/distri/core",
                "homepage": null,
                "size": 592,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": "CoffeeScript",
                "has_issues": true,
                "has_downloads": true,
                "has_wiki": true,
                "forks_count": 0,
                "mirror_url": null,
                "open_issues_count": 0,
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "master_branch": "master",
                "permissions": {
                  "admin": true,
                  "push": true,
                  "pull": true
                },
                "organization": {
                  "login": "distri",
                  "id": 6005125,
                  "avatar_url": "https://identicons.github.com/f90c81ffc1498e260c820082f2e7ca5f.png",
                  "gravatar_id": null,
                  "url": "https://api.github.com/users/distri",
                  "html_url": "https://github.com/distri",
                  "followers_url": "https://api.github.com/users/distri/followers",
                  "following_url": "https://api.github.com/users/distri/following{/other_user}",
                  "gists_url": "https://api.github.com/users/distri/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/distri/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/distri/subscriptions",
                  "organizations_url": "https://api.github.com/users/distri/orgs",
                  "repos_url": "https://api.github.com/users/distri/repos",
                  "events_url": "https://api.github.com/users/distri/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/distri/received_events",
                  "type": "Organization",
                  "site_admin": false
                },
                "network_count": 0,
                "subscribers_count": 1,
                "branch": "v0.6.0",
                "defaultBranch": "master"
              },
              "dependencies": {}
            }
          }
        },
        "core": {
          "source": {
            "LICENSE": {
              "path": "LICENSE",
              "mode": "100644",
              "content": "The MIT License (MIT)\n\nCopyright (c) 2013 Daniel X Moore\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
              "type": "blob"
            },
            "README.md": {
              "path": "README.md",
              "mode": "100644",
              "content": "core\n====\n\nAn object extension system.\n",
              "type": "blob"
            },
            "core.coffee.md": {
              "path": "core.coffee.md",
              "mode": "100644",
              "content": "Core\n====\n\nThe Core module is used to add extended functionality to objects without\nextending `Object.prototype` directly.\n\n    Core = (I={}, self={}) ->\n      extend self,\n\nExternal access to instance variables. Use of this property should be avoided\nin general, but can come in handy from time to time.\n\n>     #! example\n>     I =\n>       r: 255\n>       g: 0\n>       b: 100\n>\n>     myObject = Core(I)\n>\n>     [myObject.I.r, myObject.I.g, myObject.I.b]\n\n        I: I\n\nGenerates a public jQuery style getter / setter method for each `String` argument.\n\n>     #! example\n>     myObject = Core\n>       r: 255\n>       g: 0\n>       b: 100\n>\n>     myObject.attrAccessor \"r\", \"g\", \"b\"\n>\n>     myObject.r(254)\n\n        attrAccessor: (attrNames...) ->\n          attrNames.forEach (attrName) ->\n            self[attrName] = (newValue) ->\n              if arguments.length > 0\n                I[attrName] = newValue\n\n                return self\n              else\n                I[attrName]\n\n          return self\n\nGenerates a public jQuery style getter method for each String argument.\n\n>     #! example\n>     myObject = Core\n>       r: 255\n>       g: 0\n>       b: 100\n>\n>     myObject.attrReader \"r\", \"g\", \"b\"\n>\n>     [myObject.r(), myObject.g(), myObject.b()]\n\n        attrReader: (attrNames...) ->\n          attrNames.forEach (attrName) ->\n            self[attrName] = ->\n              I[attrName]\n\n          return self\n\nExtends this object with methods from the passed in object. A shortcut for Object.extend(self, methods)\n\n>     I =\n>       x: 30\n>       y: 40\n>       maxSpeed: 5\n>\n>     # we are using extend to give player\n>     # additional methods that Core doesn't have\n>     player = Core(I).extend\n>       increaseSpeed: ->\n>         I.maxSpeed += 1\n>\n>     player.increaseSpeed()\n\n        extend: (objects...) ->\n          extend self, objects...\n\nIncludes a module in this object. A module is a constructor that takes two parameters, `I` and `self`\n\n>     myObject = Core()\n>     myObject.include(Bindable)\n\n>     # now you can bind handlers to functions\n>     myObject.bind \"someEvent\", ->\n>       alert(\"wow. that was easy.\")\n\n        include: (modules...) ->\n          for Module in modules\n            Module(I, self)\n\n          return self\n\n      return self\n\nHelpers\n-------\n\nExtend an object with the properties of other objects.\n\n    extend = (target, sources...) ->\n      for source in sources\n        for name of source\n          target[name] = source[name]\n\n      return target\n\nExport\n\n    module.exports = Core\n",
              "type": "blob"
            },
            "pixie.cson": {
              "path": "pixie.cson",
              "mode": "100644",
              "content": "entryPoint: \"core\"\nversion: \"0.6.0\"\n",
              "type": "blob"
            },
            "test/core.coffee": {
              "path": "test/core.coffee",
              "mode": "100644",
              "content": "Core = require \"../core\"\n\nok = assert\nequals = assert.equal\ntest = it\n\ndescribe \"Core\", ->\n\n  test \"#extend\", ->\n    o = Core()\n  \n    o.extend\n      test: \"jawsome\"\n  \n    equals o.test, \"jawsome\"\n  \n  test \"#attrAccessor\", ->\n    o = Core\n      test: \"my_val\"\n  \n    o.attrAccessor(\"test\")\n  \n    equals o.test(), \"my_val\"\n    equals o.test(\"new_val\"), o\n    equals o.test(), \"new_val\"\n  \n  test \"#attrReader\", ->\n    o = Core\n      test: \"my_val\"\n  \n    o.attrReader(\"test\")\n  \n    equals o.test(), \"my_val\"\n    equals o.test(\"new_val\"), \"my_val\"\n    equals o.test(), \"my_val\"\n  \n  test \"#include\", ->\n    o = Core\n      test: \"my_val\"\n  \n    M = (I, self) ->\n      self.attrReader \"test\"\n  \n      self.extend\n        test2: \"cool\"\n  \n    ret = o.include M\n  \n    equals ret, o, \"Should return self\"\n  \n    equals o.test(), \"my_val\"\n    equals o.test2, \"cool\"\n  \n  test \"#include multiple\", ->\n    o = Core\n      test: \"my_val\"\n  \n    M = (I, self) ->\n      self.attrReader \"test\"\n  \n      self.extend\n        test2: \"cool\"\n  \n    M2 = (I, self) ->\n      self.extend\n        test2: \"coolio\"\n  \n    o.include M, M2\n  \n    equals o.test2, \"coolio\"\n",
              "type": "blob"
            }
          },
          "distribution": {
            "core": {
              "path": "core",
              "content": "(function() {\n  var Core, extend,\n    __slice = [].slice;\n\n  Core = function(I, self) {\n    if (I == null) {\n      I = {};\n    }\n    if (self == null) {\n      self = {};\n    }\n    extend(self, {\n      I: I,\n      attrAccessor: function() {\n        var attrNames;\n        attrNames = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        attrNames.forEach(function(attrName) {\n          return self[attrName] = function(newValue) {\n            if (arguments.length > 0) {\n              I[attrName] = newValue;\n              return self;\n            } else {\n              return I[attrName];\n            }\n          };\n        });\n        return self;\n      },\n      attrReader: function() {\n        var attrNames;\n        attrNames = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        attrNames.forEach(function(attrName) {\n          return self[attrName] = function() {\n            return I[attrName];\n          };\n        });\n        return self;\n      },\n      extend: function() {\n        var objects;\n        objects = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return extend.apply(null, [self].concat(__slice.call(objects)));\n      },\n      include: function() {\n        var Module, modules, _i, _len;\n        modules = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        for (_i = 0, _len = modules.length; _i < _len; _i++) {\n          Module = modules[_i];\n          Module(I, self);\n        }\n        return self;\n      }\n    });\n    return self;\n  };\n\n  extend = function() {\n    var name, source, sources, target, _i, _len;\n    target = arguments[0], sources = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    for (_i = 0, _len = sources.length; _i < _len; _i++) {\n      source = sources[_i];\n      for (name in source) {\n        target[name] = source[name];\n      }\n    }\n    return target;\n  };\n\n  module.exports = Core;\n\n}).call(this);\n\n//# sourceURL=core.coffee",
              "type": "blob"
            },
            "pixie": {
              "path": "pixie",
              "content": "module.exports = {\"entryPoint\":\"core\",\"version\":\"0.6.0\"};",
              "type": "blob"
            },
            "test/core": {
              "path": "test/core",
              "content": "(function() {\n  var Core, equals, ok, test;\n\n  Core = require(\"../core\");\n\n  ok = assert;\n\n  equals = assert.equal;\n\n  test = it;\n\n  describe(\"Core\", function() {\n    test(\"#extend\", function() {\n      var o;\n      o = Core();\n      o.extend({\n        test: \"jawsome\"\n      });\n      return equals(o.test, \"jawsome\");\n    });\n    test(\"#attrAccessor\", function() {\n      var o;\n      o = Core({\n        test: \"my_val\"\n      });\n      o.attrAccessor(\"test\");\n      equals(o.test(), \"my_val\");\n      equals(o.test(\"new_val\"), o);\n      return equals(o.test(), \"new_val\");\n    });\n    test(\"#attrReader\", function() {\n      var o;\n      o = Core({\n        test: \"my_val\"\n      });\n      o.attrReader(\"test\");\n      equals(o.test(), \"my_val\");\n      equals(o.test(\"new_val\"), \"my_val\");\n      return equals(o.test(), \"my_val\");\n    });\n    test(\"#include\", function() {\n      var M, o, ret;\n      o = Core({\n        test: \"my_val\"\n      });\n      M = function(I, self) {\n        self.attrReader(\"test\");\n        return self.extend({\n          test2: \"cool\"\n        });\n      };\n      ret = o.include(M);\n      equals(ret, o, \"Should return self\");\n      equals(o.test(), \"my_val\");\n      return equals(o.test2, \"cool\");\n    });\n    return test(\"#include multiple\", function() {\n      var M, M2, o;\n      o = Core({\n        test: \"my_val\"\n      });\n      M = function(I, self) {\n        self.attrReader(\"test\");\n        return self.extend({\n          test2: \"cool\"\n        });\n      };\n      M2 = function(I, self) {\n        return self.extend({\n          test2: \"coolio\"\n        });\n      };\n      o.include(M, M2);\n      return equals(o.test2, \"coolio\");\n    });\n  });\n\n}).call(this);\n\n//# sourceURL=test/core.coffee",
              "type": "blob"
            }
          },
          "progenitor": {
            "url": "http://strd6.github.io/editor/"
          },
          "version": "0.6.0",
          "entryPoint": "core",
          "repository": {
            "id": 13567517,
            "name": "core",
            "full_name": "distri/core",
            "owner": {
              "login": "distri",
              "id": 6005125,
              "avatar_url": "https://identicons.github.com/f90c81ffc1498e260c820082f2e7ca5f.png",
              "gravatar_id": null,
              "url": "https://api.github.com/users/distri",
              "html_url": "https://github.com/distri",
              "followers_url": "https://api.github.com/users/distri/followers",
              "following_url": "https://api.github.com/users/distri/following{/other_user}",
              "gists_url": "https://api.github.com/users/distri/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/distri/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/distri/subscriptions",
              "organizations_url": "https://api.github.com/users/distri/orgs",
              "repos_url": "https://api.github.com/users/distri/repos",
              "events_url": "https://api.github.com/users/distri/events{/privacy}",
              "received_events_url": "https://api.github.com/users/distri/received_events",
              "type": "Organization",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/distri/core",
            "description": "An object extension system.",
            "fork": false,
            "url": "https://api.github.com/repos/distri/core",
            "forks_url": "https://api.github.com/repos/distri/core/forks",
            "keys_url": "https://api.github.com/repos/distri/core/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/distri/core/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/distri/core/teams",
            "hooks_url": "https://api.github.com/repos/distri/core/hooks",
            "issue_events_url": "https://api.github.com/repos/distri/core/issues/events{/number}",
            "events_url": "https://api.github.com/repos/distri/core/events",
            "assignees_url": "https://api.github.com/repos/distri/core/assignees{/user}",
            "branches_url": "https://api.github.com/repos/distri/core/branches{/branch}",
            "tags_url": "https://api.github.com/repos/distri/core/tags",
            "blobs_url": "https://api.github.com/repos/distri/core/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/distri/core/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/distri/core/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/distri/core/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/distri/core/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/distri/core/languages",
            "stargazers_url": "https://api.github.com/repos/distri/core/stargazers",
            "contributors_url": "https://api.github.com/repos/distri/core/contributors",
            "subscribers_url": "https://api.github.com/repos/distri/core/subscribers",
            "subscription_url": "https://api.github.com/repos/distri/core/subscription",
            "commits_url": "https://api.github.com/repos/distri/core/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/distri/core/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/distri/core/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/distri/core/issues/comments/{number}",
            "contents_url": "https://api.github.com/repos/distri/core/contents/{+path}",
            "compare_url": "https://api.github.com/repos/distri/core/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/distri/core/merges",
            "archive_url": "https://api.github.com/repos/distri/core/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/distri/core/downloads",
            "issues_url": "https://api.github.com/repos/distri/core/issues{/number}",
            "pulls_url": "https://api.github.com/repos/distri/core/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/distri/core/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/distri/core/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/distri/core/labels{/name}",
            "releases_url": "https://api.github.com/repos/distri/core/releases{/id}",
            "created_at": "2013-10-14T17:04:33Z",
            "updated_at": "2013-12-24T00:49:21Z",
            "pushed_at": "2013-10-14T23:49:11Z",
            "git_url": "git://github.com/distri/core.git",
            "ssh_url": "git@github.com:distri/core.git",
            "clone_url": "https://github.com/distri/core.git",
            "svn_url": "https://github.com/distri/core",
            "homepage": null,
            "size": 592,
            "stargazers_count": 0,
            "watchers_count": 0,
            "language": "CoffeeScript",
            "has_issues": true,
            "has_downloads": true,
            "has_wiki": true,
            "forks_count": 0,
            "mirror_url": null,
            "open_issues_count": 0,
            "forks": 0,
            "open_issues": 0,
            "watchers": 0,
            "default_branch": "master",
            "master_branch": "master",
            "permissions": {
              "admin": true,
              "push": true,
              "pull": true
            },
            "organization": {
              "login": "distri",
              "id": 6005125,
              "avatar_url": "https://identicons.github.com/f90c81ffc1498e260c820082f2e7ca5f.png",
              "gravatar_id": null,
              "url": "https://api.github.com/users/distri",
              "html_url": "https://github.com/distri",
              "followers_url": "https://api.github.com/users/distri/followers",
              "following_url": "https://api.github.com/users/distri/following{/other_user}",
              "gists_url": "https://api.github.com/users/distri/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/distri/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/distri/subscriptions",
              "organizations_url": "https://api.github.com/users/distri/orgs",
              "repos_url": "https://api.github.com/users/distri/repos",
              "events_url": "https://api.github.com/users/distri/events{/privacy}",
              "received_events_url": "https://api.github.com/users/distri/received_events",
              "type": "Organization",
              "site_admin": false
            },
            "network_count": 0,
            "subscribers_count": 1,
            "branch": "v0.6.0",
            "defaultBranch": "master"
          },
          "dependencies": {}
        },
        "extensions": {
          "source": {
            "LICENSE": {
              "path": "LICENSE",
              "mode": "100644",
              "content": "The MIT License (MIT)\n\nCopyright (c) 2013 Daniel X Moore\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
              "type": "blob"
            },
            "README.md": {
              "path": "README.md",
              "mode": "100644",
              "content": "Extensions\n==========\n\nExtend built-in prototypes with helpful methods.\n",
              "type": "blob"
            },
            "array.coffee.md": {
              "path": "array.coffee.md",
              "mode": "100644",
              "content": "Array\n=====\n\n    {extend} = require \"./util\"\n\n    extend Array.prototype,\n\nCalculate the average value of an array. Returns undefined if some elements\nare not numbers.\n\n      average: ->\n        @sum()/@length\n\n>     #! example\n>     [1, 3, 5, 7].average()\n\n----\n\nReturns a copy of the array without null and undefined values.\n\n      compact: ->\n        @select (element) ->\n          element?\n\n>     #! example\n>     [null, undefined, 3, 3, undefined, 5].compact()\n\n----\n\nCreates and returns a copy of the array. The copy contains\nthe same objects.\n\n      copy: ->\n        @concat()\n\n>     #! example\n>     a = [\"a\", \"b\", \"c\"]\n>     b = a.copy()\n>\n>     # their elements are equal\n>     a[0] == b[0] && a[1] == b[1] && a[2] == b[2]\n>     # => true\n>\n>     # but they aren't the same object in memory\n>     a is b\n>     # => false\n\n----\n\nEmpties the array of its contents. It is modified in place.\n\n      clear: ->\n        @length = 0\n\n        return this\n\n>     #! example\n>     fullArray = [1, 2, 3]\n>     fullArray.clear()\n>     fullArray\n\n----\n\nFlatten out an array of arrays into a single array of elements.\n\n      flatten: ->\n        @inject [], (a, b) ->\n          a.concat b\n\n>     #! example\n>     [[1, 2], [3, 4], 5].flatten()\n>     # => [1, 2, 3, 4, 5]\n>\n>     # won't flatten twice nested arrays. call\n>     # flatten twice if that is what you want\n>     [[1, 2], [3, [4, 5]], 6].flatten()\n>     # => [1, 2, 3, [4, 5], 6]\n\n----\n\nInvoke the named method on each element in the array\nand return a new array containing the results of the invocation.\n\n      invoke: (method, args...) ->\n        @map (element) ->\n          element[method].apply(element, args)\n\n>     #! example\n>     [1.1, 2.2, 3.3, 4.4].invoke(\"floor\")\n\n----\n\n>     #! example\n>     ['hello', 'world', 'cool!'].invoke('substring', 0, 3)\n\n----\n\nRandomly select an element from the array.\n\n      rand: ->\n        @[rand(@length)]\n\n>     #! example\n>     [1, 2, 3].rand()\n\n----\n\nRemove the first occurrence of the given object from the array if it is\npresent. The array is modified in place.\n\n      remove: (object) ->\n        index = @indexOf(object)\n\n        if index >= 0\n          @splice(index, 1)[0]\n        else\n          undefined\n\n>     #! example\n>     a = [1, 1, \"a\", \"b\"]\n>     a.remove(1)\n>     a\n\n----\n\nReturns true if the element is present in the array.\n\n      include: (element) ->\n        @indexOf(element) != -1\n\n>     #! example\n>     [\"a\", \"b\", \"c\"].include(\"c\")\n\n----\n\nCall the given iterator once for each element in the array,\npassing in the element as the first argument, the index of\nthe element as the second argument, and this array as the\nthird argument.\n\n      each: (iterator, context) ->\n        if @forEach\n          @forEach iterator, context\n        else\n          for element, i in this\n            iterator.call context, element, i, this\n\n        return this\n\n>     #! example\n>     word = \"\"\n>     indices = []\n>     [\"r\", \"a\", \"d\"].each (letter, index) ->\n>       word += letter\n>       indices.push(index)\n>\n>     # => [\"r\", \"a\", \"d\"]\n>\n>     word\n>     # => \"rad\"\n>\n>     indices\n\n----\n\nCall the given iterator once for each pair of objects in the array.\n\n      eachPair: (iterator, context) ->\n        length = @length\n        i = 0\n        while i < length\n          a = @[i]\n          j = i + 1\n          i += 1\n\n          while j < length\n            b = @[j]\n            j += 1\n\n            iterator.call context, a, b\n\n>     #! example\n>     results = []\n>     [1, 2, 3, 4].eachPair (a, b) ->\n>       results.push [a, b]\n>\n>     results\n\n----\n\nCall the given iterator once for each element in the array,\npassing in the element as the first argument and the given object\nas the second argument. Additional arguments are passed similar to\n`each`.\n\n      eachWithObject: (object, iterator, context) ->\n        @each (element, i, self) ->\n          iterator.call context, element, object, i, self\n\n        return object\n\nCall the given iterator once for each group of elements in the array,\npassing in the elements in groups of n. Additional arguments are\npassed as in `each`.\n\n      eachSlice: (n, iterator, context) ->\n        len = @length / n\n        i = -1\n\n        while ++i < len\n          iterator.call(context, @slice(i*n, (i+1)*n), i*n, this)\n\n        return this\n\n>     #! example\n>     results = []\n>     [1, 2, 3, 4].eachSlice 2, (slice) ->\n>       results.push(slice)\n>\n>     results\n\n----\n\nPipe the input through each function in the array in turn. For example, if you have a\nlist of objects you can perform a series of selection, sorting, and other processing\nmethods and then receive the processed list. This array must contain functions that\naccept a single input and return the processed input. The output of the first function\nis fed to the input of the second and so on until the final processed output is returned.\n\n      pipeline: (input) ->\n        @inject input, (input, fn) ->\n          fn(input)\n\nReturns a new array with the elements all shuffled up.\n\n      shuffle: ->\n        shuffledArray = []\n\n        @each (element) ->\n          shuffledArray.splice(rand(shuffledArray.length + 1), 0, element)\n\n        return shuffledArray\n\n>     #! example\n>     [0..9].shuffle()\n\n----\n\nReturns the first element of the array, undefined if the array is empty.\n\n      first: ->\n        @[0]\n\n>     #! example\n>     [\"first\", \"second\", \"third\"].first()\n\n----\n\nReturns the last element of the array, undefined if the array is empty.\n\n      last: ->\n        @[@length - 1]\n\n>     #! example\n>     [\"first\", \"second\", \"third\"].last()\n\n----\n\nReturns an object containing the extremes of this array.\n\n      extremes: (fn=identity) ->\n        min = max = undefined\n        minResult = maxResult = undefined\n\n        @each (object) ->\n          result = fn(object)\n\n          if min?\n            if result < minResult\n              min = object\n              minResult = result\n          else\n            min = object\n            minResult = result\n\n          if max?\n            if result > maxResult\n              max = object\n              maxResult = result\n          else\n            max = object\n            maxResult = result\n\n        min: min\n        max: max\n\n>     #! example\n>     [-1, 3, 0].extremes()\n\n----\n\n      maxima: (valueFunction=identity) ->\n        @inject([-Infinity, []], (memo, item) ->\n          value = valueFunction(item)\n          [maxValue, maxItems] = memo\n\n          if value > maxValue\n            [value, [item]]\n          else if value is maxValue\n            [value, maxItems.concat(item)]\n          else\n            memo\n        ).last()\n\n      maximum: (valueFunction) ->\n        @maxima(valueFunction).first()\n\n      minima: (valueFunction=identity) ->\n        inverseFn = (x) ->\n          -valueFunction(x)\n\n        @maxima(inverseFn)\n\n      minimum: (valueFunction) ->\n        @minima(valueFunction).first()\n\nPretend the array is a circle and grab a new array containing length elements.\nIf length is not given return the element at start, again assuming the array\nis a circle.\n\n      wrap: (start, length) ->\n        if length?\n          end = start + length\n          i = start\n          result = []\n\n          while i < end\n            result.push(@[mod(i, @length)])\n            i += 1\n\n          return result\n        else\n          return @[mod(start, @length)]\n\n>     #! example\n>     [1, 2, 3].wrap(-1)\n\n----\n\n>     #! example\n>     [1, 2, 3].wrap(6)\n\n----\n\n>     #! example\n>     [\"l\", \"o\", \"o\", \"p\"].wrap(0, 12)\n\n----\n\nPartitions the elements into two groups: those for which the iterator returns\ntrue, and those for which it returns false.\n\n      partition: (iterator, context) ->\n        trueCollection = []\n        falseCollection = []\n\n        @each (element) ->\n          if iterator.call(context, element)\n            trueCollection.push element\n          else\n            falseCollection.push element\n\n        return [trueCollection, falseCollection]\n\n>     #! example\n>     [0..9].partition (n) ->\n>       n % 2 is 0\n\n----\n\nReturn the group of elements for which the return value of the iterator is true.\n\n      select: (iterator, context) ->\n        return @partition(iterator, context)[0]\n\nReturn the group of elements that are not in the passed in set.\n\n      without: (values) ->\n        @reject (element) ->\n          values.include(element)\n\n>     #! example\n>     [1, 2, 3, 4].without [2, 3]\n\n----\n\nReturn the group of elements for which the return value of the iterator is false.\n\n      reject: (iterator, context) ->\n        @partition(iterator, context)[1]\n\nCombines all elements of the array by applying a binary operation.\nfor each element in the arra the iterator is passed an accumulator\nvalue (memo) and the element.\n\n      inject: (initial, iterator) ->\n        @each (element) ->\n          initial = iterator(initial, element)\n\n        return initial\n\nAdd all the elements in the array.\n\n      sum: ->\n        @inject 0, (sum, n) ->\n          sum + n\n\n>     #! example\n>     [1, 2, 3, 4].sum()\n\n----\n\nMultiply all the elements in the array.\n\n      product: ->\n        @inject 1, (product, n) ->\n          product * n\n\n>     #! example\n>     [1, 2, 3, 4].product()\n\n----\n\nProduce a duplicate-free version of the array.\n\n      unique: ->\n        @inject [], (results, element) ->\n          results.push element if results.indexOf(element) is -1\n\n          results\n\nMerges together the values of each of the arrays with the values at the corresponding position.\n\n      zip: (args...) ->\n        @map (element, index) ->\n          output = args.map (arr) ->\n            arr[index]\n\n          output.unshift(element)\n\n          return output\n\n>     #! example\n>     ['a', 'b', 'c'].zip([1, 2, 3])\n\n----\n\nHelpers\n-------\n\n    identity = (x) ->\n      x\n\n    rand = (n) ->\n      Math.floor n * Math.random()\n\n    mod = (n, base) ->\n      result = n % base\n\n      if result < 0 and base > 0\n        result += base\n\n      return result\n",
              "type": "blob"
            },
            "extensions.coffee.md": {
              "path": "extensions.coffee.md",
              "mode": "100644",
              "content": "Extensions\n==========\n\nExtend built in prototypes with additional behavior.\n\n    require \"./array\"\n    require \"./function\"\n    require \"./number\"\n    require \"./string\"\n",
              "type": "blob"
            },
            "function.coffee.md": {
              "path": "function.coffee.md",
              "mode": "100644",
              "content": "Function\n========\n\n    {extend} = require \"./util\"\n\nAdd our `Function` extensions.\n\n    extend Function.prototype,\n      once: ->\n        func = this\n\n        ran = false\n        memo = undefined\n\n        return ->\n          return memo if ran\n          ran = true\n\n          return memo = func.apply(this, arguments)\n\nCalling a debounced function will postpone its execution until after\nwait milliseconds have elapsed since the last time the function was\ninvoked. Useful for implementing behavior that should only happen after\nthe input has stopped arriving. For example: rendering a preview of a\nMarkdown comment, recalculating a layout after the window has stopped\nbeing resized...\n\n      debounce: (wait) ->\n        timeout = null\n        func = this\n\n        return ->\n          context = this\n          args = arguments\n\n          later = ->\n            timeout = null\n            func.apply(context, args)\n\n          clearTimeout(timeout)\n          timeout = setTimeout(later, wait)\n\n>     lazyLayout = calculateLayout.debounce(300)\n>     $(window).resize(lazyLayout)\n\n----\n\n      delay: (wait, args...) ->\n        func = this\n\n        setTimeout ->\n          func.apply(null, args)\n        , wait\n\n      defer: (args...) ->\n        this.delay.apply this, [1].concat(args)\n\n    extend Function,\n      identity: (x) ->\n        x\n\n      noop: ->\n",
              "type": "blob"
            },
            "number.coffee.md": {
              "path": "number.coffee.md",
              "mode": "100644",
              "content": "Number\n======\n\nReturns the absolute value of this number.\n\n>     #! example\n>     (-4).abs()\n\nReturns the mathematical ceiling of this number. The number truncated to the\nnearest integer of greater than or equal value.\n\n>     #! example\n>     4.2.ceil()\n\n---\n\n>     #! example\n>     (-1.2).ceil()\n\n---\n\nReturns the mathematical floor of this number. The number truncated to the\nnearest integer of less than or equal value.\n\n>     #! example\n>     4.9.floor()\n\n---\n\n>     #! example\n>     (-1.2).floor()\n\n---\n\nReturns this number rounded to the nearest integer.\n\n>     #! example\n>     4.5.round()\n\n---\n\n>     #! example\n>     4.4.round()\n\n---\n\n    [\n      \"abs\"\n      \"ceil\"\n      \"floor\"\n      \"round\"\n    ].forEach (method) ->\n      Number::[method] = ->\n        Math[method](this)\n\n    {extend} = require \"./util\"\n\n    extend Number.prototype,\n\nGet a bunch of points equally spaced around the unit circle.\n\n      circularPoints: ->\n        n = this\n\n        [0..n].map (i) ->\n          Point.fromAngle (i/n).turns\n\n>     #! example\n>     4.circularPoints()\n\n---\n\nReturns a number whose value is limited to the given range.\n\n      clamp: (min, max) ->\n        if min? and max?\n          Math.min(Math.max(this, min), max)\n        else if min?\n          Math.max(this, min)\n        else if max?\n          Math.min(this, max)\n        else\n          this\n\n>     #! example\n>     512.clamp(0, 255)\n\n---\n\nA mod method useful for array wrapping. The range of the function is\nconstrained to remain in bounds of array indices.\n\n      mod: (base) ->\n        result = this % base;\n\n        if result < 0 && base > 0\n          result += base\n\n        return result\n\n>     #! example\n>     (-1).mod(5)\n\n---\n\nGet the sign of this number as an integer (1, -1, or 0).\n\n      sign: ->\n        if this > 0\n          1\n        else if this < 0\n          -1\n        else\n          0\n\n>     #! example\n>     5.sign()\n\n---\n\nReturns true if this number is even (evenly divisible by 2).\n\n      even: ->\n        @mod(2) is 0\n\n>     #! example\n>     2.even()\n\n---\n\nReturns true if this number is odd (has remainder of 1 when divided by 2).\n\n      odd: ->\n        @mod(2) is 1\n\n>     #! example\n>     3.odd()\n\n---\n\nCalls iterator the specified number of times, passing in the number of the\ncurrent iteration as a parameter: 0 on first call, 1 on the second call, etc.\n\n      times: (iterator, context) ->\n        i = -1\n\n        while ++i < this\n          iterator.call context, i\n\n        return i\n\n>     #! example\n>     output = []\n>\n>     5.times (n) ->\n>       output.push(n)\n>\n>     output\n\n---\n\nReturns the the nearest grid resolution less than or equal to the number.\n\n      snap: (resolution) ->\n        (n / resolution).floor() * resolution\n\n>     #! example\n>     7.snap(8)\n\n---\n\n      truncate: ->\n        if this > 0\n          @floor()\n        else if this < 0\n          @ceil()\n        else\n          this\n\nConvert a number to an amount of rotations.\n\n    unless 5.rotations\n      Object.defineProperty Number::, 'rotations',\n        get: ->\n          this * Math.TAU\n\n    unless 1.rotation\n      Object.defineProperty Number::, 'rotation',\n        get: ->\n          this * Math.TAU\n\n>     #! example\n>     0.5.rotations\n\n---\n\nConvert a number to an amount of rotations.\n\n    unless 5.turns\n      Object.defineProperty Number.prototype, 'turns',\n        get: ->\n          this * Math.TAU\n\n    unless 1.turn\n      Object.defineProperty Number.prototype, 'turn',\n        get: ->\n          this * Math.TAU\n\n>     #! example\n>     0.5.turns\n\n---\n\nConvert a number to an amount of degrees.\n\n    unless 2.degrees\n      Object.defineProperty Number::, 'degrees',\n        get: ->\n          this * Math.TAU / 360\n\n    unless 1.degree\n      Object.defineProperty Number::, 'degree',\n        get: ->\n          this * Math.TAU / 360\n\n>     #! example\n>     180.degrees\n\n---\n\nExtra\n-----\n\nThe mathematical circle constant of 1 turn.\n\n    Math.TAU = 2 * Math.PI\n",
              "type": "blob"
            },
            "pixie.cson": {
              "path": "pixie.cson",
              "mode": "100644",
              "content": "version: \"0.2.0\"\nentryPoint: \"extensions\"\n",
              "type": "blob"
            },
            "string.coffee.md": {
              "path": "string.coffee.md",
              "mode": "100644",
              "content": "String\n======\n\nExtend strings with utility methods.\n\n    {extend} = require \"./util\"\n\n    extend String.prototype,\n\nReturns true if this string only contains whitespace characters.\n\n      blank: ->\n        /^\\s*$/.test(this)\n\n>     #! example\n>     \"   \".blank()\n\n---\n\nParse this string as though it is JSON and return the object it represents. If it\nis not valid JSON returns the string itself.\n\n      parse: () ->\n        try\n          JSON.parse(this.toString())\n        catch e\n          this.toString()\n\n>     #! example\n>     # this is valid json, so an object is returned\n>     '{\"a\": 3}'.parse()\n\n---\n\nReturns true if this string starts with the given string.\n\n      startsWith: (str) ->\n        @lastIndexOf(str, 0) is 0\n\nReturns true if this string ends with the given string.\n\n      endsWith: (str) ->\n        @indexOf(str, @length - str.length) != -1\n\nGet the file extension of a string.\n\n      extension: ->\n        if extension = this.match(/\\.([^\\.]*)$/, '')?.last()\n          extension\n        else\n          ''\n\n>     #! example\n>     \"README.md\".extension()\n\n---\n\nAssumes the string is something like a file name and returns the\ncontents of the string without the extension.\n\n      withoutExtension: ->\n        this.replace(/\\.[^\\.]*$/, '')\n\n      toInt: (base=10) ->\n        parseInt(this, base)\n\n>     #! example\n>     \"neat.png\".witouthExtension()\n\n---\n",
              "type": "blob"
            },
            "test/array.coffee": {
              "path": "test/array.coffee",
              "mode": "100644",
              "content": "require \"../array\"\n\nok = assert\nequals = assert.equal\ntest = it\n\ndescribe \"Array\", ->\n\n  test \"#average\", ->\n    equals [1, 3, 5, 7].average(), 4\n  \n  test \"#compact\", ->\n    a = [0, 1, undefined, 2, null, 3, '', 4]\n  \n    compacted = a.compact()\n  \n    equals(compacted[0], 0)\n    equals(compacted[1], 1)\n    equals(compacted[2], 2)\n    equals(compacted[3], 3)\n    equals(compacted[4], '')\n    equals(compacted[5], 4)\n  \n  test \"#copy\", ->\n    a = [1,2,3]\n    b = a.copy()\n  \n    ok a != b, \"Original array is not the same array as the copied one\"\n    ok a.length == b.length, \"Both arrays are the same size\"\n    ok a[0] == b[0] && a[1] == b[1] && a[2] == b[2], \"The elements of the two arrays are equal\"\n  \n  test \"#flatten\", ->\n    array = [[0,1], [2,3], [4,5]]\n  \n    flattenedArray = array.flatten()\n  \n    equals flattenedArray.length, 6, \"Flattened array length should equal number of elements in sub-arrays\"\n    equals flattenedArray.first(), 0, \"First element should be first element in first sub-array\"\n    equals flattenedArray.last(), 5, \"Last element should be last element in last sub-array\"\n  \n  test \"#rand\", ->\n    array = [1,2,3]\n  \n    ok array.indexOf(array.rand()) != -1, \"Array includes randomly selected element\"\n    ok [5].rand() == 5, \"[5].rand() === 5\"\n    ok [].rand() == undefined, \"[].rand() === undefined\"\n  \n  test \"#remove\", ->\n    equals [1,2,3].remove(2), 2, \"[1,2,3].remove(2) === 2\"\n    equals [1,3].remove(2), undefined, \"[1,3].remove(2) === undefined\"\n    equals [1,3].remove(3), 3, \"[1,3].remove(3) === 3\"\n  \n    array = [1,2,3]\n    array.remove(2)\n    ok array.length == 2, \"array = [1,2,3]; array.remove(2); array.length === 2\"\n    array.remove(3)\n    ok array.length == 1, \"array = [1,3]; array.remove(3); array.length === 1\"\n  \n  test \"#map\", ->\n    equals [1].map((x) -> return x + 1 )[0], 2\n  \n  test \"#invoke\", ->\n    results = ['hello', 'world', 'cool!'].invoke('substring', 0, 3)\n  \n    equals results[0], \"hel\"\n    equals results[1], \"wor\"\n    equals results[2], \"coo\"\n  \n  test \"#each\", ->\n    array = [1, 2, 3]\n    count = 0\n  \n    equals array, array.each -> count++\n    equals array.length, count\n  \n  test \"#eachPair\", ->\n    array = [1, 2, 3]\n    sum = 0\n  \n    array.eachPair (a, b) ->\n      sum += a + b\n  \n    equals(sum, 12)\n  \n  test \"#eachWithObject\", ->\n    array = [1, 2, 3]\n  \n    result = array.eachWithObject {}, (element, hash) ->\n      hash[element] = (element + 1).toString()\n  \n    equals result[1], \"2\"\n    equals result[2], \"3\"\n    equals result[3], \"4\"\n  \n  test \"#shuffle\", ->\n    array = [0, 1, 2, 3, 4, 5]\n  \n    shuffledArray = array.shuffle()\n  \n    shuffledArray.each (element) ->\n      ok array.indexOf(element) >= 0, \"Every element in shuffled array is in orig array\"\n  \n    array.each (element) ->\n      ok shuffledArray.indexOf(element) >= 0, \"Every element in orig array is in shuffled array\"\n  \n  test \"#first\", ->\n    equals [2].first(), 2\n    equals [1, 2, 3].first(), 1\n    equals [].first(), undefined\n  \n  test \"#last\", ->\n    equals [2].last(), 2\n    equals [1, 2, 3].last(), 3\n    equals [].first(), undefined\n  \n  test \"#maxima\", ->\n    maxima = [-52, 0, 78].maxima()\n  \n    maxima.each (n) ->\n      equals n, 78\n  \n    maxima = [0, 0, 1, 0, 1, 0, 1, 0].maxima()\n  \n    equals 3, maxima.length\n  \n    maxima.each (n) ->\n      equals n, 1\n  \n  test \"#maximum\", ->\n    equals [-345, 38, 8347].maximum(), 8347\n  \n  test \"#maximum with function\", ->\n    equals [3, 4, 5].maximum((n) ->\n      n % 4\n    ), 3\n  \n  test \"#minima\", ->\n    minima = [-52, 0, 78].minima()\n  \n    minima.each (n) ->\n      equals n, -52\n  \n    minima = [0, 0, 1, 0, 1, 0, 1, 0].minima()\n  \n    equals 5, minima.length\n  \n    minima.each (n) ->\n      equals n, 0\n  \n  test \"#minimum\", ->\n    equals [-345, 38, 8347].minimum(), -345\n  \n  test \"#pipeline\", ->\n    pipe = [\n      (x) -> x * x\n      (x) -> x - 10\n    ]\n  \n    equals pipe.pipeline(5), 15\n  \n  test \"#extremes\", ->\n    array = [-7, 1, 11, 94]\n  \n    extremes = array.extremes()\n  \n    equals extremes.min, -7, \"Min is -7\"\n    equals extremes.max, 94, \"Max is 94\"\n  \n  test \"#extremes with fn\", ->\n    array = [1, 11, 94]\n\n    extremes = array.extremes (value) ->\n      value % 11\n\n    equals extremes.min, 11, extremes.min\n    equals extremes.max, 94, extremes.max\n\n  test \"#sum\", ->\n    equals [].sum(), 0, \"Empty array sums to zero\"\n    equals [2].sum(), 2, \"[2] sums to 2\"\n    equals [1, 2, 3, 4, 5].sum(), 15, \"[1, 2, 3, 4, 5] sums to 15\"\n  \n  test \"#eachSlice\", ->\n    [1, 2, 3, 4, 5, 6].eachSlice 2, (array) ->\n      equals array[0] % 2, 1\n      equals array[1] % 2, 0\n  \n  test \"#without\", ->\n    array = [1, 2, 3, 4]\n  \n    excluded = array.without([2, 4])\n  \n    equals excluded[0], 1\n    equals excluded[1], 3\n  \n  test \"#clear\", ->\n    array = [1, 2, 3, 4]\n  \n    equals array.length, 4\n    equals array[0], 1\n  \n    array.clear()\n  \n    equals array.length, 0\n    equals array[0], undefined\n  \n  test \"#unique\", ->\n    array = [0, 0, 0, 1, 1, 1, 2, 3]\n  \n    equals array.unique().first(), 0\n    equals array.unique().last(), 3\n    equals array.unique().length, 4\n  \n  test \"#wrap\", ->\n    array = [0, 1, 2, 3, 4]\n  \n    equals array.wrap(0), 0\n    equals array.wrap(-1), 4\n    equals array.wrap(2), 2\n  \n  test \"#zip\", ->\n    a = [1, 2, 3]\n    b = [4, 5, 6]\n    c = [7, 8]\n  \n    output = a.zip(b, c)\n  \n    equals output[0][0], 1\n    equals output[0][1], 4\n    equals output[0][2], 7\n  \n    equals output[2][2], undefined\n",
              "type": "blob"
            },
            "test/function.coffee": {
              "path": "test/function.coffee",
              "mode": "100644",
              "content": "require \"../function\"\n\nok = assert\nequals = assert.equal\ntest = it\n\ndescribe \"Function\", ->\n\n  test \"#once\", ->\n    score = 0\n  \n    addScore = ->\n      score += 100\n  \n    onceScore = addScore.once()\n  \n    [0..9].map ->\n      onceScore()\n  \n    equals score, 100\n  \n  test \".identity\", ->\n    I = Function.identity\n  \n    [0, 1, true, false, null, undefined].each (x) ->\n      equals I(x), x\n  \n  test \"#debounce\", (done) ->\n    fn = (-> ok true; done()).debounce(1)\n  \n    # Though called multiple times the function is only triggered once\n    fn()\n    fn()\n    fn()\n  \n  test \"#delay\", (done) ->\n    fn = (x, y) ->\n      equals x, 3\n      equals y, \"testy\"\n      done()\n  \n    fn.delay 25, 3, \"testy\"\n  \n  test \"#defer\", (done) ->\n    fn = (x) ->\n      equals x, 3\n      done()\n  \n    fn.defer 3\n",
              "type": "blob"
            },
            "test/number.coffee": {
              "path": "test/number.coffee",
              "mode": "100644",
              "content": "require \"../number\"\n\nok = assert\nequals = assert.equal\ntest = it\n\nequalEnough = (expected, actual, tolerance, message) ->\n  message ||= \"#{expected} within #{tolerance} of #{actual}\"\n\n  ok(expected + tolerance >= actual && expected - tolerance <= actual, message)\n  \ndescribe \"Number\", ->\n  \n  test \"#abs\", ->\n    equals 5.abs(), 5, \"(5).abs() equals 5\"\n    equals 4.2.abs(), 4.2, \"(4.2).abs() equals 4.2\"\n    equals (-1.2).abs(), 1.2, \"(-1.2).abs() equals 1.2\"\n    equals 0.abs(), 0, \"(0).abs() equals 0\"\n  \n  test \"#ceil\", ->\n    equals 4.9.ceil(), 5, \"(4.9).floor() equals 5\"\n    equals 4.2.ceil(), 5, \"(4.2).ceil() equals 5\"\n    equals (-1.2).ceil(), -1, \"(-1.2).ceil() equals -1\"\n    equals 3.ceil(), 3, \"(3).ceil() equals 3\"\n  \n  test \"#clamp\", ->\n    equals 5.clamp(0, 3), 3\n    equals 5.clamp(-1, 0), 0\n    equals (-5).clamp(0, 1), 0\n    equals 1.clamp(0, null), 1\n    equals (-1).clamp(0, null), 0\n    equals (-10).clamp(-5, 0), -5\n    equals (-10).clamp(null, 0), -10\n    equals 50.clamp(null, 10), 10\n  \n  test \"#floor\", ->\n    equals 4.9.floor(), 4, \"(4.9).floor() equals 4\"\n    equals 4.2.floor(), 4, \"(4.2).floor() equals 4\"\n    equals (-1.2).floor(), -2, \"(-1.2).floor() equals -2\"\n    equals 3.floor(), 3, \"(3).floor() equals 3\"\n  \n  test \"#round\", ->\n    equals 4.5.round(), 5, \"(4.5).round() equals 5\"\n    equals 4.4.round(), 4, \"(4.4).round() equals 4\"\n  \n  test \"#sign\", ->\n    equals 5.sign(), 1, \"Positive number's sign is 1\"\n    equals (-3).sign(), -1, \"Negative number's sign is -1\"\n    equals 0.sign(), 0, \"Zero's sign is 0\"\n  \n  test \"#even\", ->\n    [0, 2, -32].each (n) ->\n      ok n.even(), \"#{n} is even\"\n  \n    [1, -1, 2.2, -3.784].each (n) ->\n      equals n.even(), false, \"#{n} is not even\"\n  \n  test \"#odd\", ->\n    [1, 9, -37].each (n) ->\n      ok n.odd(), \"#{n} is odd\"\n  \n    [0, 32, 2.2, -1.1].each (n) ->\n      equals n.odd(), false, \"#{n} is not odd\"\n  \n  test \"#times\", ->\n    n = 5\n    equals n.times(->), n, \"returns n\"\n  \n  test \"#times called correct amount\", ->\n    n = 5\n    count = 0\n  \n    n.times -> count++\n  \n    equals n, count, \"returns n\"\n  \n  test \"#mod should have a positive result when used with a positive base and a negative number\", ->\n    n = -3\n  \n    equals n.mod(8), 5, \"Should 'wrap' and be positive.\"\n  \n  test \"#degrees\", ->\n    equals 180.degrees, Math.PI\n    equals 1.degree, Math.TAU / 360\n  \n  test \"#rotations\", ->\n    equals 1.rotation, Math.TAU\n    equals 0.5.rotations, Math.TAU / 2\n  \n  test \"#turns\", ->\n    equals 1.turn, Math.TAU\n    equals 0.5.turns, Math.TAU / 2\n",
              "type": "blob"
            },
            "test/string.coffee": {
              "path": "test/string.coffee",
              "mode": "100644",
              "content": "require \"../string\"\n\nok = assert\nequals = assert.equal\ntest = it\n\ndescribe \"String\", ->\n  \n  test \"#blank\", ->\n    equals \"  \".blank(), true, \"A string containing only whitespace should be blank\"\n    equals \"a\".blank(), false, \"A string that contains a letter should not be blank\"\n    equals \"  a \".blank(), false\n    equals \"  \\n\\t \".blank(), true\n  \n  test \"#extension\", ->\n    equals \"README\".extension(), \"\"\n    equals \"README.md\".extension(), \"md\"\n    equals \"jquery.min.js\".extension(), \"js\"\n    equals \"src/bouse.js.coffee\".extension(), \"coffee\"\n  \n  test \"#parse\", ->\n    equals \"true\".parse(), true, \"parsing 'true' should equal boolean true\"\n    equals \"false\".parse(), false, \"parsing 'true' should equal boolean true\"\n    equals \"7.2\".parse(), 7.2, \"numbers should be cool too\"\n  \n    equals '{\"val\": \"a string\"}'.parse().val, \"a string\", \"even parsing objects works\"\n  \n    ok ''.parse() == '', \"Empty string parses to exactly the empty string\"\n  \n  test \"#startsWith\", ->\n    ok \"cool\".startsWith(\"coo\")\n    equals \"cool\".startsWith(\"oo\"), false\n  \n  test \"#toInt\", ->\n    equals \"31.3\".toInt(), 31\n    equals \"31.\".toInt(), 31\n    equals \"-1.02\".toInt(), -1\n  \n    equals \"009\".toInt(), 9\n    equals \"0109\".toInt(), 109\n  \n    equals \"F\".toInt(16), 15\n  \n  test \"#withoutExtension\", ->\n    equals \"neat.png\".withoutExtension(), \"neat\"\n    equals \"not a file\".withoutExtension(), \"not a file\"\n",
              "type": "blob"
            },
            "util.coffee.md": {
              "path": "util.coffee.md",
              "mode": "100644",
              "content": "Util\n====\n\nUtility methods shared in our extensions.\n\n    module.exports =\n\nExtend an object with the properties of other objects.\n\n      extend: (target, sources...) ->\n        for source in sources\n          for name of source\n            target[name] = source[name]\n\n        return target\n",
              "type": "blob"
            }
          },
          "distribution": {
            "array": {
              "path": "array",
              "content": "(function() {\n  var extend, identity, mod, rand,\n    __slice = [].slice;\n\n  extend = require(\"./util\").extend;\n\n  extend(Array.prototype, {\n    average: function() {\n      return this.sum() / this.length;\n    },\n    compact: function() {\n      return this.select(function(element) {\n        return element != null;\n      });\n    },\n    copy: function() {\n      return this.concat();\n    },\n    clear: function() {\n      this.length = 0;\n      return this;\n    },\n    flatten: function() {\n      return this.inject([], function(a, b) {\n        return a.concat(b);\n      });\n    },\n    invoke: function() {\n      var args, method;\n      method = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      return this.map(function(element) {\n        return element[method].apply(element, args);\n      });\n    },\n    rand: function() {\n      return this[rand(this.length)];\n    },\n    remove: function(object) {\n      var index;\n      index = this.indexOf(object);\n      if (index >= 0) {\n        return this.splice(index, 1)[0];\n      } else {\n        return void 0;\n      }\n    },\n    include: function(element) {\n      return this.indexOf(element) !== -1;\n    },\n    each: function(iterator, context) {\n      var element, i, _i, _len;\n      if (this.forEach) {\n        this.forEach(iterator, context);\n      } else {\n        for (i = _i = 0, _len = this.length; _i < _len; i = ++_i) {\n          element = this[i];\n          iterator.call(context, element, i, this);\n        }\n      }\n      return this;\n    },\n    eachPair: function(iterator, context) {\n      var a, b, i, j, length, _results;\n      length = this.length;\n      i = 0;\n      _results = [];\n      while (i < length) {\n        a = this[i];\n        j = i + 1;\n        i += 1;\n        _results.push((function() {\n          var _results1;\n          _results1 = [];\n          while (j < length) {\n            b = this[j];\n            j += 1;\n            _results1.push(iterator.call(context, a, b));\n          }\n          return _results1;\n        }).call(this));\n      }\n      return _results;\n    },\n    eachWithObject: function(object, iterator, context) {\n      this.each(function(element, i, self) {\n        return iterator.call(context, element, object, i, self);\n      });\n      return object;\n    },\n    eachSlice: function(n, iterator, context) {\n      var i, len;\n      len = this.length / n;\n      i = -1;\n      while (++i < len) {\n        iterator.call(context, this.slice(i * n, (i + 1) * n), i * n, this);\n      }\n      return this;\n    },\n    pipeline: function(input) {\n      return this.inject(input, function(input, fn) {\n        return fn(input);\n      });\n    },\n    shuffle: function() {\n      var shuffledArray;\n      shuffledArray = [];\n      this.each(function(element) {\n        return shuffledArray.splice(rand(shuffledArray.length + 1), 0, element);\n      });\n      return shuffledArray;\n    },\n    first: function() {\n      return this[0];\n    },\n    last: function() {\n      return this[this.length - 1];\n    },\n    extremes: function(fn) {\n      var max, maxResult, min, minResult;\n      if (fn == null) {\n        fn = identity;\n      }\n      min = max = void 0;\n      minResult = maxResult = void 0;\n      this.each(function(object) {\n        var result;\n        result = fn(object);\n        if (min != null) {\n          if (result < minResult) {\n            min = object;\n            minResult = result;\n          }\n        } else {\n          min = object;\n          minResult = result;\n        }\n        if (max != null) {\n          if (result > maxResult) {\n            max = object;\n            return maxResult = result;\n          }\n        } else {\n          max = object;\n          return maxResult = result;\n        }\n      });\n      return {\n        min: min,\n        max: max\n      };\n    },\n    maxima: function(valueFunction) {\n      if (valueFunction == null) {\n        valueFunction = identity;\n      }\n      return this.inject([-Infinity, []], function(memo, item) {\n        var maxItems, maxValue, value;\n        value = valueFunction(item);\n        maxValue = memo[0], maxItems = memo[1];\n        if (value > maxValue) {\n          return [value, [item]];\n        } else if (value === maxValue) {\n          return [value, maxItems.concat(item)];\n        } else {\n          return memo;\n        }\n      }).last();\n    },\n    maximum: function(valueFunction) {\n      return this.maxima(valueFunction).first();\n    },\n    minima: function(valueFunction) {\n      var inverseFn;\n      if (valueFunction == null) {\n        valueFunction = identity;\n      }\n      inverseFn = function(x) {\n        return -valueFunction(x);\n      };\n      return this.maxima(inverseFn);\n    },\n    minimum: function(valueFunction) {\n      return this.minima(valueFunction).first();\n    },\n    wrap: function(start, length) {\n      var end, i, result;\n      if (length != null) {\n        end = start + length;\n        i = start;\n        result = [];\n        while (i < end) {\n          result.push(this[mod(i, this.length)]);\n          i += 1;\n        }\n        return result;\n      } else {\n        return this[mod(start, this.length)];\n      }\n    },\n    partition: function(iterator, context) {\n      var falseCollection, trueCollection;\n      trueCollection = [];\n      falseCollection = [];\n      this.each(function(element) {\n        if (iterator.call(context, element)) {\n          return trueCollection.push(element);\n        } else {\n          return falseCollection.push(element);\n        }\n      });\n      return [trueCollection, falseCollection];\n    },\n    select: function(iterator, context) {\n      return this.partition(iterator, context)[0];\n    },\n    without: function(values) {\n      return this.reject(function(element) {\n        return values.include(element);\n      });\n    },\n    reject: function(iterator, context) {\n      return this.partition(iterator, context)[1];\n    },\n    inject: function(initial, iterator) {\n      this.each(function(element) {\n        return initial = iterator(initial, element);\n      });\n      return initial;\n    },\n    sum: function() {\n      return this.inject(0, function(sum, n) {\n        return sum + n;\n      });\n    },\n    product: function() {\n      return this.inject(1, function(product, n) {\n        return product * n;\n      });\n    },\n    unique: function() {\n      return this.inject([], function(results, element) {\n        if (results.indexOf(element) === -1) {\n          results.push(element);\n        }\n        return results;\n      });\n    },\n    zip: function() {\n      var args;\n      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      return this.map(function(element, index) {\n        var output;\n        output = args.map(function(arr) {\n          return arr[index];\n        });\n        output.unshift(element);\n        return output;\n      });\n    }\n  });\n\n  identity = function(x) {\n    return x;\n  };\n\n  rand = function(n) {\n    return Math.floor(n * Math.random());\n  };\n\n  mod = function(n, base) {\n    var result;\n    result = n % base;\n    if (result < 0 && base > 0) {\n      result += base;\n    }\n    return result;\n  };\n\n}).call(this);\n\n//# sourceURL=array.coffee",
              "type": "blob"
            },
            "extensions": {
              "path": "extensions",
              "content": "(function() {\n  require(\"./array\");\n\n  require(\"./function\");\n\n  require(\"./number\");\n\n  require(\"./string\");\n\n}).call(this);\n\n//# sourceURL=extensions.coffee",
              "type": "blob"
            },
            "function": {
              "path": "function",
              "content": "(function() {\n  var extend,\n    __slice = [].slice;\n\n  extend = require(\"./util\").extend;\n\n  extend(Function.prototype, {\n    once: function() {\n      var func, memo, ran;\n      func = this;\n      ran = false;\n      memo = void 0;\n      return function() {\n        if (ran) {\n          return memo;\n        }\n        ran = true;\n        return memo = func.apply(this, arguments);\n      };\n    },\n    debounce: function(wait) {\n      var func, timeout;\n      timeout = null;\n      func = this;\n      return function() {\n        var args, context, later;\n        context = this;\n        args = arguments;\n        later = function() {\n          timeout = null;\n          return func.apply(context, args);\n        };\n        clearTimeout(timeout);\n        return timeout = setTimeout(later, wait);\n      };\n    },\n    delay: function() {\n      var args, func, wait;\n      wait = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      func = this;\n      return setTimeout(function() {\n        return func.apply(null, args);\n      }, wait);\n    },\n    defer: function() {\n      var args;\n      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      return this.delay.apply(this, [1].concat(args));\n    }\n  });\n\n  extend(Function, {\n    identity: function(x) {\n      return x;\n    },\n    noop: function() {}\n  });\n\n}).call(this);\n\n//# sourceURL=function.coffee",
              "type": "blob"
            },
            "number": {
              "path": "number",
              "content": "(function() {\n  var extend;\n\n  [\"abs\", \"ceil\", \"floor\", \"round\"].forEach(function(method) {\n    return Number.prototype[method] = function() {\n      return Math[method](this);\n    };\n  });\n\n  extend = require(\"./util\").extend;\n\n  extend(Number.prototype, {\n    circularPoints: function() {\n      var n, _i, _results;\n      n = this;\n      return (function() {\n        _results = [];\n        for (var _i = 0; 0 <= n ? _i <= n : _i >= n; 0 <= n ? _i++ : _i--){ _results.push(_i); }\n        return _results;\n      }).apply(this).map(function(i) {\n        return Point.fromAngle((i / n).turns);\n      });\n    },\n    clamp: function(min, max) {\n      if ((min != null) && (max != null)) {\n        return Math.min(Math.max(this, min), max);\n      } else if (min != null) {\n        return Math.max(this, min);\n      } else if (max != null) {\n        return Math.min(this, max);\n      } else {\n        return this;\n      }\n    },\n    mod: function(base) {\n      var result;\n      result = this % base;\n      if (result < 0 && base > 0) {\n        result += base;\n      }\n      return result;\n    },\n    sign: function() {\n      if (this > 0) {\n        return 1;\n      } else if (this < 0) {\n        return -1;\n      } else {\n        return 0;\n      }\n    },\n    even: function() {\n      return this.mod(2) === 0;\n    },\n    odd: function() {\n      return this.mod(2) === 1;\n    },\n    times: function(iterator, context) {\n      var i;\n      i = -1;\n      while (++i < this) {\n        iterator.call(context, i);\n      }\n      return i;\n    },\n    snap: function(resolution) {\n      return (n / resolution).floor() * resolution;\n    },\n    truncate: function() {\n      if (this > 0) {\n        return this.floor();\n      } else if (this < 0) {\n        return this.ceil();\n      } else {\n        return this;\n      }\n    }\n  });\n\n  if (!5..rotations) {\n    Object.defineProperty(Number.prototype, 'rotations', {\n      get: function() {\n        return this * Math.TAU;\n      }\n    });\n  }\n\n  if (!1..rotation) {\n    Object.defineProperty(Number.prototype, 'rotation', {\n      get: function() {\n        return this * Math.TAU;\n      }\n    });\n  }\n\n  if (!5..turns) {\n    Object.defineProperty(Number.prototype, 'turns', {\n      get: function() {\n        return this * Math.TAU;\n      }\n    });\n  }\n\n  if (!1..turn) {\n    Object.defineProperty(Number.prototype, 'turn', {\n      get: function() {\n        return this * Math.TAU;\n      }\n    });\n  }\n\n  if (!2..degrees) {\n    Object.defineProperty(Number.prototype, 'degrees', {\n      get: function() {\n        return this * Math.TAU / 360;\n      }\n    });\n  }\n\n  if (!1..degree) {\n    Object.defineProperty(Number.prototype, 'degree', {\n      get: function() {\n        return this * Math.TAU / 360;\n      }\n    });\n  }\n\n  Math.TAU = 2 * Math.PI;\n\n}).call(this);\n\n//# sourceURL=number.coffee",
              "type": "blob"
            },
            "pixie": {
              "path": "pixie",
              "content": "module.exports = {\"version\":\"0.2.0\",\"entryPoint\":\"extensions\"};",
              "type": "blob"
            },
            "string": {
              "path": "string",
              "content": "(function() {\n  var extend;\n\n  extend = require(\"./util\").extend;\n\n  extend(String.prototype, {\n    blank: function() {\n      return /^\\s*$/.test(this);\n    },\n    parse: function() {\n      var e;\n      try {\n        return JSON.parse(this.toString());\n      } catch (_error) {\n        e = _error;\n        return this.toString();\n      }\n    },\n    startsWith: function(str) {\n      return this.lastIndexOf(str, 0) === 0;\n    },\n    endsWith: function(str) {\n      return this.indexOf(str, this.length - str.length) !== -1;\n    },\n    extension: function() {\n      var extension, _ref;\n      if (extension = (_ref = this.match(/\\.([^\\.]*)$/, '')) != null ? _ref.last() : void 0) {\n        return extension;\n      } else {\n        return '';\n      }\n    },\n    withoutExtension: function() {\n      return this.replace(/\\.[^\\.]*$/, '');\n    },\n    toInt: function(base) {\n      if (base == null) {\n        base = 10;\n      }\n      return parseInt(this, base);\n    }\n  });\n\n}).call(this);\n\n//# sourceURL=string.coffee",
              "type": "blob"
            },
            "test/array": {
              "path": "test/array",
              "content": "(function() {\n  var equals, ok, test;\n\n  require(\"../array\");\n\n  ok = assert;\n\n  equals = assert.equal;\n\n  test = it;\n\n  describe(\"Array\", function() {\n    test(\"#average\", function() {\n      return equals([1, 3, 5, 7].average(), 4);\n    });\n    test(\"#compact\", function() {\n      var a, compacted;\n      a = [0, 1, void 0, 2, null, 3, '', 4];\n      compacted = a.compact();\n      equals(compacted[0], 0);\n      equals(compacted[1], 1);\n      equals(compacted[2], 2);\n      equals(compacted[3], 3);\n      equals(compacted[4], '');\n      return equals(compacted[5], 4);\n    });\n    test(\"#copy\", function() {\n      var a, b;\n      a = [1, 2, 3];\n      b = a.copy();\n      ok(a !== b, \"Original array is not the same array as the copied one\");\n      ok(a.length === b.length, \"Both arrays are the same size\");\n      return ok(a[0] === b[0] && a[1] === b[1] && a[2] === b[2], \"The elements of the two arrays are equal\");\n    });\n    test(\"#flatten\", function() {\n      var array, flattenedArray;\n      array = [[0, 1], [2, 3], [4, 5]];\n      flattenedArray = array.flatten();\n      equals(flattenedArray.length, 6, \"Flattened array length should equal number of elements in sub-arrays\");\n      equals(flattenedArray.first(), 0, \"First element should be first element in first sub-array\");\n      return equals(flattenedArray.last(), 5, \"Last element should be last element in last sub-array\");\n    });\n    test(\"#rand\", function() {\n      var array;\n      array = [1, 2, 3];\n      ok(array.indexOf(array.rand()) !== -1, \"Array includes randomly selected element\");\n      ok([5].rand() === 5, \"[5].rand() === 5\");\n      return ok([].rand() === void 0, \"[].rand() === undefined\");\n    });\n    test(\"#remove\", function() {\n      var array;\n      equals([1, 2, 3].remove(2), 2, \"[1,2,3].remove(2) === 2\");\n      equals([1, 3].remove(2), void 0, \"[1,3].remove(2) === undefined\");\n      equals([1, 3].remove(3), 3, \"[1,3].remove(3) === 3\");\n      array = [1, 2, 3];\n      array.remove(2);\n      ok(array.length === 2, \"array = [1,2,3]; array.remove(2); array.length === 2\");\n      array.remove(3);\n      return ok(array.length === 1, \"array = [1,3]; array.remove(3); array.length === 1\");\n    });\n    test(\"#map\", function() {\n      return equals([1].map(function(x) {\n        return x + 1;\n      })[0], 2);\n    });\n    test(\"#invoke\", function() {\n      var results;\n      results = ['hello', 'world', 'cool!'].invoke('substring', 0, 3);\n      equals(results[0], \"hel\");\n      equals(results[1], \"wor\");\n      return equals(results[2], \"coo\");\n    });\n    test(\"#each\", function() {\n      var array, count;\n      array = [1, 2, 3];\n      count = 0;\n      equals(array, array.each(function() {\n        return count++;\n      }));\n      return equals(array.length, count);\n    });\n    test(\"#eachPair\", function() {\n      var array, sum;\n      array = [1, 2, 3];\n      sum = 0;\n      array.eachPair(function(a, b) {\n        return sum += a + b;\n      });\n      return equals(sum, 12);\n    });\n    test(\"#eachWithObject\", function() {\n      var array, result;\n      array = [1, 2, 3];\n      result = array.eachWithObject({}, function(element, hash) {\n        return hash[element] = (element + 1).toString();\n      });\n      equals(result[1], \"2\");\n      equals(result[2], \"3\");\n      return equals(result[3], \"4\");\n    });\n    test(\"#shuffle\", function() {\n      var array, shuffledArray;\n      array = [0, 1, 2, 3, 4, 5];\n      shuffledArray = array.shuffle();\n      shuffledArray.each(function(element) {\n        return ok(array.indexOf(element) >= 0, \"Every element in shuffled array is in orig array\");\n      });\n      return array.each(function(element) {\n        return ok(shuffledArray.indexOf(element) >= 0, \"Every element in orig array is in shuffled array\");\n      });\n    });\n    test(\"#first\", function() {\n      equals([2].first(), 2);\n      equals([1, 2, 3].first(), 1);\n      return equals([].first(), void 0);\n    });\n    test(\"#last\", function() {\n      equals([2].last(), 2);\n      equals([1, 2, 3].last(), 3);\n      return equals([].first(), void 0);\n    });\n    test(\"#maxima\", function() {\n      var maxima;\n      maxima = [-52, 0, 78].maxima();\n      maxima.each(function(n) {\n        return equals(n, 78);\n      });\n      maxima = [0, 0, 1, 0, 1, 0, 1, 0].maxima();\n      equals(3, maxima.length);\n      return maxima.each(function(n) {\n        return equals(n, 1);\n      });\n    });\n    test(\"#maximum\", function() {\n      return equals([-345, 38, 8347].maximum(), 8347);\n    });\n    test(\"#maximum with function\", function() {\n      return equals([3, 4, 5].maximum(function(n) {\n        return n % 4;\n      }), 3);\n    });\n    test(\"#minima\", function() {\n      var minima;\n      minima = [-52, 0, 78].minima();\n      minima.each(function(n) {\n        return equals(n, -52);\n      });\n      minima = [0, 0, 1, 0, 1, 0, 1, 0].minima();\n      equals(5, minima.length);\n      return minima.each(function(n) {\n        return equals(n, 0);\n      });\n    });\n    test(\"#minimum\", function() {\n      return equals([-345, 38, 8347].minimum(), -345);\n    });\n    test(\"#pipeline\", function() {\n      var pipe;\n      pipe = [\n        function(x) {\n          return x * x;\n        }, function(x) {\n          return x - 10;\n        }\n      ];\n      return equals(pipe.pipeline(5), 15);\n    });\n    test(\"#extremes\", function() {\n      var array, extremes;\n      array = [-7, 1, 11, 94];\n      extremes = array.extremes();\n      equals(extremes.min, -7, \"Min is -7\");\n      return equals(extremes.max, 94, \"Max is 94\");\n    });\n    test(\"#extremes with fn\", function() {\n      var array, extremes;\n      array = [1, 11, 94];\n      extremes = array.extremes(function(value) {\n        return value % 11;\n      });\n      equals(extremes.min, 11, extremes.min);\n      return equals(extremes.max, 94, extremes.max);\n    });\n    test(\"#sum\", function() {\n      equals([].sum(), 0, \"Empty array sums to zero\");\n      equals([2].sum(), 2, \"[2] sums to 2\");\n      return equals([1, 2, 3, 4, 5].sum(), 15, \"[1, 2, 3, 4, 5] sums to 15\");\n    });\n    test(\"#eachSlice\", function() {\n      return [1, 2, 3, 4, 5, 6].eachSlice(2, function(array) {\n        equals(array[0] % 2, 1);\n        return equals(array[1] % 2, 0);\n      });\n    });\n    test(\"#without\", function() {\n      var array, excluded;\n      array = [1, 2, 3, 4];\n      excluded = array.without([2, 4]);\n      equals(excluded[0], 1);\n      return equals(excluded[1], 3);\n    });\n    test(\"#clear\", function() {\n      var array;\n      array = [1, 2, 3, 4];\n      equals(array.length, 4);\n      equals(array[0], 1);\n      array.clear();\n      equals(array.length, 0);\n      return equals(array[0], void 0);\n    });\n    test(\"#unique\", function() {\n      var array;\n      array = [0, 0, 0, 1, 1, 1, 2, 3];\n      equals(array.unique().first(), 0);\n      equals(array.unique().last(), 3);\n      return equals(array.unique().length, 4);\n    });\n    test(\"#wrap\", function() {\n      var array;\n      array = [0, 1, 2, 3, 4];\n      equals(array.wrap(0), 0);\n      equals(array.wrap(-1), 4);\n      return equals(array.wrap(2), 2);\n    });\n    return test(\"#zip\", function() {\n      var a, b, c, output;\n      a = [1, 2, 3];\n      b = [4, 5, 6];\n      c = [7, 8];\n      output = a.zip(b, c);\n      equals(output[0][0], 1);\n      equals(output[0][1], 4);\n      equals(output[0][2], 7);\n      return equals(output[2][2], void 0);\n    });\n  });\n\n}).call(this);\n\n//# sourceURL=test/array.coffee",
              "type": "blob"
            },
            "test/function": {
              "path": "test/function",
              "content": "(function() {\n  var equals, ok, test;\n\n  require(\"../function\");\n\n  ok = assert;\n\n  equals = assert.equal;\n\n  test = it;\n\n  describe(\"Function\", function() {\n    test(\"#once\", function() {\n      var addScore, onceScore, score;\n      score = 0;\n      addScore = function() {\n        return score += 100;\n      };\n      onceScore = addScore.once();\n      [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(function() {\n        return onceScore();\n      });\n      return equals(score, 100);\n    });\n    test(\".identity\", function() {\n      var I;\n      I = Function.identity;\n      return [0, 1, true, false, null, void 0].each(function(x) {\n        return equals(I(x), x);\n      });\n    });\n    test(\"#debounce\", function(done) {\n      var fn;\n      fn = (function() {\n        ok(true);\n        return done();\n      }).debounce(1);\n      fn();\n      fn();\n      return fn();\n    });\n    test(\"#delay\", function(done) {\n      var fn;\n      fn = function(x, y) {\n        equals(x, 3);\n        equals(y, \"testy\");\n        return done();\n      };\n      return fn.delay(25, 3, \"testy\");\n    });\n    return test(\"#defer\", function(done) {\n      var fn;\n      fn = function(x) {\n        equals(x, 3);\n        return done();\n      };\n      return fn.defer(3);\n    });\n  });\n\n}).call(this);\n\n//# sourceURL=test/function.coffee",
              "type": "blob"
            },
            "test/number": {
              "path": "test/number",
              "content": "(function() {\n  var equalEnough, equals, ok, test;\n\n  require(\"../number\");\n\n  ok = assert;\n\n  equals = assert.equal;\n\n  test = it;\n\n  equalEnough = function(expected, actual, tolerance, message) {\n    message || (message = \"\" + expected + \" within \" + tolerance + \" of \" + actual);\n    return ok(expected + tolerance >= actual && expected - tolerance <= actual, message);\n  };\n\n  describe(\"Number\", function() {\n    test(\"#abs\", function() {\n      equals(5..abs(), 5, \"(5).abs() equals 5\");\n      equals(4.2.abs(), 4.2, \"(4.2).abs() equals 4.2\");\n      equals((-1.2).abs(), 1.2, \"(-1.2).abs() equals 1.2\");\n      return equals(0..abs(), 0, \"(0).abs() equals 0\");\n    });\n    test(\"#ceil\", function() {\n      equals(4.9.ceil(), 5, \"(4.9).floor() equals 5\");\n      equals(4.2.ceil(), 5, \"(4.2).ceil() equals 5\");\n      equals((-1.2).ceil(), -1, \"(-1.2).ceil() equals -1\");\n      return equals(3..ceil(), 3, \"(3).ceil() equals 3\");\n    });\n    test(\"#clamp\", function() {\n      equals(5..clamp(0, 3), 3);\n      equals(5..clamp(-1, 0), 0);\n      equals((-5).clamp(0, 1), 0);\n      equals(1..clamp(0, null), 1);\n      equals((-1).clamp(0, null), 0);\n      equals((-10).clamp(-5, 0), -5);\n      equals((-10).clamp(null, 0), -10);\n      return equals(50..clamp(null, 10), 10);\n    });\n    test(\"#floor\", function() {\n      equals(4.9.floor(), 4, \"(4.9).floor() equals 4\");\n      equals(4.2.floor(), 4, \"(4.2).floor() equals 4\");\n      equals((-1.2).floor(), -2, \"(-1.2).floor() equals -2\");\n      return equals(3..floor(), 3, \"(3).floor() equals 3\");\n    });\n    test(\"#round\", function() {\n      equals(4.5.round(), 5, \"(4.5).round() equals 5\");\n      return equals(4.4.round(), 4, \"(4.4).round() equals 4\");\n    });\n    test(\"#sign\", function() {\n      equals(5..sign(), 1, \"Positive number's sign is 1\");\n      equals((-3).sign(), -1, \"Negative number's sign is -1\");\n      return equals(0..sign(), 0, \"Zero's sign is 0\");\n    });\n    test(\"#even\", function() {\n      [0, 2, -32].each(function(n) {\n        return ok(n.even(), \"\" + n + \" is even\");\n      });\n      return [1, -1, 2.2, -3.784].each(function(n) {\n        return equals(n.even(), false, \"\" + n + \" is not even\");\n      });\n    });\n    test(\"#odd\", function() {\n      [1, 9, -37].each(function(n) {\n        return ok(n.odd(), \"\" + n + \" is odd\");\n      });\n      return [0, 32, 2.2, -1.1].each(function(n) {\n        return equals(n.odd(), false, \"\" + n + \" is not odd\");\n      });\n    });\n    test(\"#times\", function() {\n      var n;\n      n = 5;\n      return equals(n.times(function() {}), n, \"returns n\");\n    });\n    test(\"#times called correct amount\", function() {\n      var count, n;\n      n = 5;\n      count = 0;\n      n.times(function() {\n        return count++;\n      });\n      return equals(n, count, \"returns n\");\n    });\n    test(\"#mod should have a positive result when used with a positive base and a negative number\", function() {\n      var n;\n      n = -3;\n      return equals(n.mod(8), 5, \"Should 'wrap' and be positive.\");\n    });\n    test(\"#degrees\", function() {\n      equals(180..degrees, Math.PI);\n      return equals(1..degree, Math.TAU / 360);\n    });\n    test(\"#rotations\", function() {\n      equals(1..rotation, Math.TAU);\n      return equals(0.5.rotations, Math.TAU / 2);\n    });\n    return test(\"#turns\", function() {\n      equals(1..turn, Math.TAU);\n      return equals(0.5.turns, Math.TAU / 2);\n    });\n  });\n\n}).call(this);\n\n//# sourceURL=test/number.coffee",
              "type": "blob"
            },
            "test/string": {
              "path": "test/string",
              "content": "(function() {\n  var equals, ok, test;\n\n  require(\"../string\");\n\n  ok = assert;\n\n  equals = assert.equal;\n\n  test = it;\n\n  describe(\"String\", function() {\n    test(\"#blank\", function() {\n      equals(\"  \".blank(), true, \"A string containing only whitespace should be blank\");\n      equals(\"a\".blank(), false, \"A string that contains a letter should not be blank\");\n      equals(\"  a \".blank(), false);\n      return equals(\"  \\n\\t \".blank(), true);\n    });\n    test(\"#extension\", function() {\n      equals(\"README\".extension(), \"\");\n      equals(\"README.md\".extension(), \"md\");\n      equals(\"jquery.min.js\".extension(), \"js\");\n      return equals(\"src/bouse.js.coffee\".extension(), \"coffee\");\n    });\n    test(\"#parse\", function() {\n      equals(\"true\".parse(), true, \"parsing 'true' should equal boolean true\");\n      equals(\"false\".parse(), false, \"parsing 'true' should equal boolean true\");\n      equals(\"7.2\".parse(), 7.2, \"numbers should be cool too\");\n      equals('{\"val\": \"a string\"}'.parse().val, \"a string\", \"even parsing objects works\");\n      return ok(''.parse() === '', \"Empty string parses to exactly the empty string\");\n    });\n    test(\"#startsWith\", function() {\n      ok(\"cool\".startsWith(\"coo\"));\n      return equals(\"cool\".startsWith(\"oo\"), false);\n    });\n    test(\"#toInt\", function() {\n      equals(\"31.3\".toInt(), 31);\n      equals(\"31.\".toInt(), 31);\n      equals(\"-1.02\".toInt(), -1);\n      equals(\"009\".toInt(), 9);\n      equals(\"0109\".toInt(), 109);\n      return equals(\"F\".toInt(16), 15);\n    });\n    return test(\"#withoutExtension\", function() {\n      equals(\"neat.png\".withoutExtension(), \"neat\");\n      return equals(\"not a file\".withoutExtension(), \"not a file\");\n    });\n  });\n\n}).call(this);\n\n//# sourceURL=test/string.coffee",
              "type": "blob"
            },
            "util": {
              "path": "util",
              "content": "(function() {\n  var __slice = [].slice;\n\n  module.exports = {\n    extend: function() {\n      var name, source, sources, target, _i, _len;\n      target = arguments[0], sources = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      for (_i = 0, _len = sources.length; _i < _len; _i++) {\n        source = sources[_i];\n        for (name in source) {\n          target[name] = source[name];\n        }\n      }\n      return target;\n    }\n  };\n\n}).call(this);\n\n//# sourceURL=util.coffee",
              "type": "blob"
            }
          },
          "progenitor": {
            "url": "http://strd6.github.io/editor/"
          },
          "version": "0.2.0",
          "entryPoint": "extensions",
          "repository": {
            "id": 13577503,
            "name": "extensions",
            "full_name": "distri/extensions",
            "owner": {
              "login": "distri",
              "id": 6005125,
              "avatar_url": "https://identicons.github.com/f90c81ffc1498e260c820082f2e7ca5f.png",
              "gravatar_id": null,
              "url": "https://api.github.com/users/distri",
              "html_url": "https://github.com/distri",
              "followers_url": "https://api.github.com/users/distri/followers",
              "following_url": "https://api.github.com/users/distri/following{/other_user}",
              "gists_url": "https://api.github.com/users/distri/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/distri/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/distri/subscriptions",
              "organizations_url": "https://api.github.com/users/distri/orgs",
              "repos_url": "https://api.github.com/users/distri/repos",
              "events_url": "https://api.github.com/users/distri/events{/privacy}",
              "received_events_url": "https://api.github.com/users/distri/received_events",
              "type": "Organization",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/distri/extensions",
            "description": "",
            "fork": false,
            "url": "https://api.github.com/repos/distri/extensions",
            "forks_url": "https://api.github.com/repos/distri/extensions/forks",
            "keys_url": "https://api.github.com/repos/distri/extensions/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/distri/extensions/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/distri/extensions/teams",
            "hooks_url": "https://api.github.com/repos/distri/extensions/hooks",
            "issue_events_url": "https://api.github.com/repos/distri/extensions/issues/events{/number}",
            "events_url": "https://api.github.com/repos/distri/extensions/events",
            "assignees_url": "https://api.github.com/repos/distri/extensions/assignees{/user}",
            "branches_url": "https://api.github.com/repos/distri/extensions/branches{/branch}",
            "tags_url": "https://api.github.com/repos/distri/extensions/tags",
            "blobs_url": "https://api.github.com/repos/distri/extensions/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/distri/extensions/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/distri/extensions/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/distri/extensions/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/distri/extensions/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/distri/extensions/languages",
            "stargazers_url": "https://api.github.com/repos/distri/extensions/stargazers",
            "contributors_url": "https://api.github.com/repos/distri/extensions/contributors",
            "subscribers_url": "https://api.github.com/repos/distri/extensions/subscribers",
            "subscription_url": "https://api.github.com/repos/distri/extensions/subscription",
            "commits_url": "https://api.github.com/repos/distri/extensions/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/distri/extensions/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/distri/extensions/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/distri/extensions/issues/comments/{number}",
            "contents_url": "https://api.github.com/repos/distri/extensions/contents/{+path}",
            "compare_url": "https://api.github.com/repos/distri/extensions/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/distri/extensions/merges",
            "archive_url": "https://api.github.com/repos/distri/extensions/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/distri/extensions/downloads",
            "issues_url": "https://api.github.com/repos/distri/extensions/issues{/number}",
            "pulls_url": "https://api.github.com/repos/distri/extensions/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/distri/extensions/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/distri/extensions/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/distri/extensions/labels{/name}",
            "releases_url": "https://api.github.com/repos/distri/extensions/releases{/id}",
            "created_at": "2013-10-15T01:14:11Z",
            "updated_at": "2013-12-24T01:04:48Z",
            "pushed_at": "2013-12-24T01:04:20Z",
            "git_url": "git://github.com/distri/extensions.git",
            "ssh_url": "git@github.com:distri/extensions.git",
            "clone_url": "https://github.com/distri/extensions.git",
            "svn_url": "https://github.com/distri/extensions",
            "homepage": null,
            "size": 964,
            "stargazers_count": 0,
            "watchers_count": 0,
            "language": "CoffeeScript",
            "has_issues": true,
            "has_downloads": true,
            "has_wiki": true,
            "forks_count": 0,
            "mirror_url": null,
            "open_issues_count": 0,
            "forks": 0,
            "open_issues": 0,
            "watchers": 0,
            "default_branch": "master",
            "master_branch": "master",
            "permissions": {
              "admin": true,
              "push": true,
              "pull": true
            },
            "organization": {
              "login": "distri",
              "id": 6005125,
              "avatar_url": "https://identicons.github.com/f90c81ffc1498e260c820082f2e7ca5f.png",
              "gravatar_id": null,
              "url": "https://api.github.com/users/distri",
              "html_url": "https://github.com/distri",
              "followers_url": "https://api.github.com/users/distri/followers",
              "following_url": "https://api.github.com/users/distri/following{/other_user}",
              "gists_url": "https://api.github.com/users/distri/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/distri/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/distri/subscriptions",
              "organizations_url": "https://api.github.com/users/distri/orgs",
              "repos_url": "https://api.github.com/users/distri/repos",
              "events_url": "https://api.github.com/users/distri/events{/privacy}",
              "received_events_url": "https://api.github.com/users/distri/received_events",
              "type": "Organization",
              "site_admin": false
            },
            "network_count": 0,
            "subscribers_count": 1,
            "branch": "v0.2.0",
            "defaultBranch": "master"
          },
          "dependencies": {}
        },
        "inflector": {
          "source": {
            ".gitignore": {
              "path": ".gitignore",
              "content": "dist/\ndocs/\nnode_modules/\n",
              "mode": "100644",
              "type": "blob"
            },
            ".travis.yml": {
              "path": ".travis.yml",
              "content": "language: node_js\nnode_js:\n  - \"0.11\"\n  - \"0.10\"\n",
              "mode": "100644",
              "type": "blob"
            },
            "README.md": {
              "path": "README.md",
              "content": "[![Build Status](https://travis-ci.org/STRd6/inflecta.png?branch=master)](https://travis-ci.org/STRd6/inflecta)\n\nInflecta\n========\n\nWhat? Another ActiveSupport::Inflector port? Yeah, sorry.\n\nThe primary difference between **inflecta** and other ports is that **inflecta** translates the Ruby idioms to JavaScript idioms. It goes all the way.\n\nThe most important method is `constantize` which is not even attempted in most ports. In fact, the only reason we really need to pluralize or singularize things is so that we can automatically determine the class to instantiate from the name of the data key. That is the whole point of `ActiveSupport::Inflector`, `humanize` is just a nice side effect.\n\nIn Ruby the scope resolution operator is `::`. JavaScript doesn't have any such thing, instead people generally namespace classes using a module pattern like `MyApp.Models.MyModel`. For that reason **inflecta** uses `.` rather than blindly copying the Ruby scope resolution operator.\n\nIn JavaScript variables and properties are usually named with camel case. In Ruby they are named with underscores. It generally doesn't make a big difference, but if we want to implement `humanize` then it better work with our default conventions.\n\nReal sorry about the name, but inflector was taken on npm.\n",
              "mode": "100644",
              "type": "blob"
            },
            "interactive_runtime.coffee.md": {
              "path": "interactive_runtime.coffee.md",
              "content": "Interactive Runtime\n-------------------\n\nRegister our interactive documentation runtime components.\n\n    inflector = require \"/source/inflector\"\n\n    Object.keys(inflector).forEach (method) ->\n      return if method is \"version\"\n      return if method is \"pollute\"\n\n      Interactive.register method, ({source, runtimeElement}) ->\n        outputElement = document.createElement \"pre\"\n        runtimeElement.empty().append outputElement\n\n        outputElement.textContent = source.split(\"\\n\").map (word) ->\n          result = inflector[method](word)\n        .join(\"\\n\")\n",
              "mode": "100644",
              "type": "blob"
            },
            "package.json": {
              "path": "package.json",
              "content": "{\n  \"name\": \"inflecta\",\n  \"version\": \"0.8.3\",\n  \"description\": \"A better port of ActiveSupport Inflector to JS.\",\n  \"main\": \"dist/inflector.js\",\n  \"scripts\": {\n    \"prepublish\": \"script/prepublish\",\n    \"test\": \"script/test\"\n  },\n  \"files\": [\n    \"dist\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/STRd6/inflector\"\n  },\n  \"keywords\": [\n    \"inflector\"\n  ],\n  \"devDependencies\": {\n    \"should\": \"1.2.2\",\n    \"coffee-script\": \"~1.6.3\",\n    \"mocha\": \"~1.12.0\",\n    \"uglify-js\": \"~2.3.6\",\n    \"docco\": \"~0.6.2\",\n    \"browserify\": \"~2.26.0\"\n  },\n  \"author\": \"\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/STRd6/inflector/issues\"\n  }\n}\n",
              "mode": "100644",
              "type": "blob"
            },
            "pixie.cson": {
              "path": "pixie.cson",
              "content": "version: \"0.2.1\"\nentryPoint: \"source/inflector\"\n",
              "mode": "100644",
              "type": "blob"
            },
            "script/doc": {
              "path": "script/doc",
              "content": "#!/bin/bash\nset -e\n\nmkdir -p docs\nrm -rf docs/*\n\nnode_modules/.bin/docco -t resources/docco.jst source/*\nnode_modules/.bin/coffee -co docs/javascripts resources/interactive.litcoffee\nnode_modules/.bin/browserify -r ./dist/inflector.js > docs/javascripts/inflector.js\n\ncp -r resources/docco.css resources/public docs\ncp resources/*.js docs/javascripts\ncp docs/inflector.html docs/index.html\n",
              "mode": "100644",
              "type": "blob"
            },
            "script/gh-pages": {
              "path": "script/gh-pages",
              "content": "#!/bin/bash\n\nset -e\n\ncd docs\ngit add .\ngit ci -am \"gh-pages\"\ngit pull\ngit push\n",
              "mode": "100644",
              "type": "blob"
            },
            "script/prepublish": {
              "path": "script/prepublish",
              "content": "#!/bin/bash\n\n./node_modules/.bin/coffee -co dist/ source/\n\nfor file in dist/*.js\ndo\n  ./node_modules/.bin/uglifyjs $file > tmp.js\n  mv tmp.js $file\ndone\n",
              "mode": "100644",
              "type": "blob"
            },
            "script/test": {
              "path": "script/test",
              "content": "#!/bin/bash\n\nnode_modules/.bin/mocha \\\n  --compilers coffee:coffee-script \\\n  --reporter spec \\\n  --require test_helper.coffee.md\n",
              "mode": "100644",
              "type": "blob"
            },
            "source/inflector.coffee.md": {
              "path": "source/inflector.coffee.md",
              "content": "Inflecta\n========\n\nLoad our word lists and rules for inflecting from [rules](rules.html).\n\n    {\n      nonTitlecasedWords\n      pluralRules\n      singularRules\n      uncountableWords\n    } = require(\"./rules\")\n\nThese are regular expressions used for converting between String formats.\n\n    idSuffix = RegExp(\"(_ids|_id)$\", \"g\")\n    underbar = RegExp(\"_\", \"g\")\n    spaceOrUnderbar = RegExp(\"[ _]\", \"g\")\n    uppercase = RegExp(\"([A-Z])\", \"g\")\n    underbarPrefix = RegExp(\"^_\")\n    scopeResolution = \".\"\n    fileSeparator = \"/\"\n\nThe apply rules helper method applies a rules based replacement to a String.\n\n    applyRules = (string, rules) ->\n      return string if uncountableWords.indexOf(string.toLowerCase()) > -1\n\nReduce the list of rules to the first substitution that matches and apply it.\n\n      rules.reduce((result, [rule, replacer]) ->\n        result or\n          if string.match(rule)\n            string.replace(rule, replacer)\n\nReturn the string unmodified if no rule matches.\n\n      , null) or string\n\nAn object to hold all of our inflection methods.\n\n    inflector =\n\nConvert a string to a pluralized form by applying a list of rules. The rules contain regexes that match and replace portions of the string to transform it.\n\n>     #! pluralize\n>     address\n>     boss\n>     bus\n>     child\n>     man\n>     woman\n>     zombie\n>     octopus\n>     walrus\n>     person\n>     status\n\n      pluralize: (string) ->\n        applyRules string, pluralRules\n\nConversely we can also convert a string to a singular form by applying another list of rules.\n\n>     #! singularize\n>     addresses\n>     bosses\n>     buses\n>     children\n>     men\n>     women\n>     zombies\n>     octopi\n>     walruses\n>     people\n>     statuses\n\n      singularize: (string) ->\n        applyRules string, singularRules\n\nCamelize converts an underscore separated identifier into camel case. The optional parameter lowercaseFirstLetter can be passed in as `true` to prevent the default behavior of capitalizing it. File separators `/` are translated to the scope resolution operator `.`.\n\n>     #! camelize\n>     message_properties\n>     models/person\n\n      camelize: (string, lowercaseFirstLetter) ->\n        string.split(fileSeparator).map (pathItem) ->\n          pathItem.split(underbar).map (chunk, i) ->\n            if lowercaseFirstLetter and i is 0\n              chunk\n            else\n              chunk.charAt(0).toUpperCase() + chunk.substring(1)\n\n          .join(\"\")\n        .join scopeResolution\n\nConstantize looks up a class from within a namespace. For example `\"MyApp.Models.MyModel\".constantize()` will look up that constant in the global namespace. You can optionally pass the root namespace as an argument. `\"Models.MyModel\".constantize(MyApp)` will look up the constant in with the given namespace as a root.\n\n      constantize: (string, rootModule) ->\n        target = rootModule ? (global ? window)\n\n        target = target[item] for item in string.split scopeResolution\n\n        return target\n\nUnderscoring converts an identifier into lowercase separated by underscores. This is handy for file names or interfacing with services that prefer underscored names to camel cased.\n\nCamel cased words are returned as lower cased and underscored. Additionally the scope resolution symbol `.` is translated to file separator: '/'.\n\n>     #! underscore\n>     messageProperties\n>     Models.Person\n\n      underscore: (string) ->\n        string.split(scopeResolution).map (chunk) ->\n          chunk\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\n            .replace(/-/g, '_')\n            .toLowerCase()\n        .join(fileSeparator).toLowerCase()\n\nHumanize takes words that computers like to read and converts them to a form that is easier for people. Lower case underscored words will be returned in humanized form, as will camel cased words.\n\nPassing true as the optional parameter will maintain the first letter as lowercase. The default is to capitalize the first letter if false or no optional parameter is passed.\n\n>     #! humanize\n>     message_property_id\n>     userPreferences\n\n      humanize: (string, lowFirstLetter) ->\n        string = inflector.underscore(string)\n          .toLowerCase()\n          .replace(idSuffix, \"\")\n          .replace(underbar, \" \")\n\n        unless lowFirstLetter\n          string = inflector.capitalize(string)\n\n        return string\n\nWhen capitalizing a string all characters will be lower case and the first will be upper.\n\n>     #! capitalize\n>     egg basket\n>     user preferences\n\n      capitalize: (string) ->\n        string = string.toLowerCase()\n        string.substring(0, 1).toUpperCase() + string.substring(1)\n\nTitleize capitalizes words as you would for a book title or page. Each principle word is capitalized.\n\n>     #! titleize\n>     a man for all seasons\n>     customer_support\n>     aboutUs\n\n      titleize: (string) ->\n        result = string\n          .toLowerCase()\n          .replace(underbar, \" \")\n          .split(\" \")\n          .map (chunk) ->\n            chunk.split(\"-\").map (piece) ->\n              if nonTitlecasedWords.indexOf(piece.toLowerCase()) < 0\n                inflector.capitalize(piece)\n              else\n                piece\n            .join(\"-\")\n\n          .join(\" \")\n\n        result.substring(0, 1).toUpperCase() + result.substring(1)\n\nTableize converts property names to something that would be used for a table name in SQL. It converts camel cased words into their underscored plural form.\n\n>     #! tableize\n>     sandwich\n>     userPreferences\n\n      tableize: (string) ->\n        inflector.pluralize(inflector.underscore(string))\n\nClassify converts a string into something that would be suitable for lookup via constantize. Underscored plural nouns become the camel cased singular form.\n\n>     #! classify\n>     sandwich\n>     user_preference\n>     app/models/person\n\n      classify: (str) ->\n        inflector.singularize(inflector.camelize(str))\n\nConvert a string with spaces and mixed case into all lower case with spaces replaced with dashes. This is the style that Github branch names are commonly in.\n\n      dasherize: (str) ->\n        str.trim()\n          .replace(/\\s+/g, \"-\")\n          .toLowerCase()\n\nAdds all of these sweet inflections to `String.prototype`. To each their own.\n\n`require('inflecta').pollute()` if you are so inclined.\n\n      pollute: ->\n        Object.keys(inflector).forEach (key) ->\n          return if key is \"version\"\n          return if key is \"pollute\"\n\n          String::[key] = (args...) ->\n            inflector[key](this, args...)\n\n        return inflector\n\nExport the inflector.\n\n    module.exports = inflector\n\nInteractive Docs\n----------------\n\nSet up interactive demos for docs.\n\n[Interactive Runtime](./interactive_runtime)\n\n>     #! setup\n>     require \"/interactive_runtime\"\n",
              "mode": "100644",
              "type": "blob"
            },
            "source/rules.coffee.md": {
              "path": "source/rules.coffee.md",
              "content": "Rules\n=====\n\nThese rules are used by the [inflector](inflector.html).\n\nThis `matcher` helper will let us construct rules easier. The default `replacement` is the entire match unchanged.\n\n    matcher = (string, replacement=\"$&\") ->\n      [RegExp(string, \"gi\"), replacement]\n\nAnother little helper to convert blocks of rules text into arrays of matchers. Each line is passed to the matcher helper to create a matcher and replacement pair.\n\n    toArrays = (text) ->\n      text.split(\"\\n\").map (line) ->\n        matcher line.split(\" \").filter((piece) -> piece != \"\")...\n\nThese rules translate from the singular form of a noun to its plural form. The first section is plurals that should remain unchanged. The next section contains rules and replacements to transform words from plural to singular forms.\n\n    pluralRules = toArrays \"\"\"\n      (m)en$\n      (pe)ople$\n      (child)ren$\n      ([ti])a$\n      ((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$\n      (hive)s$\n      (tive)s$\n      (curve)s$\n      ([lr])ves$\n      ([^fo])ves$\n      ([^aeiouy]|qu)ies$\n      (s)eries$\n      (m)ovies$\n      (x|ch|ss|sh)es$\n      ([m|l])ice$\n      (bus)es$\n      (o)es$\n      (shoe)s$\n      (cris|ax|test)es$\n      (octop|vir)i$\n      (alias|status)es$\n      ^(ox)en$\n      (vert|ind)ices$\n      (matr)ices$\n      (quiz)zes$\n      (m)an$                 $1en\n      (pe)rson$              $1ople\n      (child)$               $1ren\n      ^(ox)$                 $1en\n      (ax|test)is$           $1es\n      (octop|vir)us$         $1i\n      (alias|status)$        $1es\n      (u)s$                  $1ses\n      (buffal|tomat|potat)o$ $1oes\n      ([ti])um$              $1a\n      sis$                   ses\n      (?:([^f])fe|([lr])f)$  $1$2ves\n      (hive)$                $1s\n      ([^aeiouy]|qu)y$       $1ies\n      (x|ch|ss|sh)$          $1es\n      (matr|vert|ind)ix|ex$  $1ices\n      ([m|l])ouse$           $1ice\n      (quiz)$                $1zes\n      s$                     s\n      $                      s\n    \"\"\"\n\nThese rules translate from the plural form of a noun to its singular form. Like the plulization rules above, the first section contains matches that are already singular and sholud not be transformed. The following section contains the matchers with the transformations to convert plurals to singular form.\n\n    singularRules = toArrays \"\"\"\n      (m)an$\n      (pe)rson$\n      (child)$\n      ^(ox)$\n      (ax|test)is$\n      (octop|vir)us$\n      (alias|status)$\n      (b)ie$\n      ([br]u)s$\n      (buffal|tomat|potat)o$\n      ([ti])um$\n      sis$\n      (?:([^f])fe|([lr])f)$\n      (hive)$\n      ([^aeiouy]|qu)y$\n      (x|ch|ss|sh)$\n      (matr|vert|ind)ix|ex$\n      ([m|l])ouse$\n      (quiz)$\n      (m)en$                  $1an\n      (pe)ople$               $1rson\n      (child)ren$             $1\n      ([ti])a$                $1um\n      ((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$ $1$2sis\n      (hive)s$                $1\n      (tive)s$                $1\n      (curve)s$               $1\n      ([lr])ves$              $1f\n      ([^fo])ves$             $1fe\n      (bie)s                  $1\n      ([^aeiouy]|qu)ies$      $1y\n      (s)eries$               $1eries\n      (m)ovies$               $1ovie\n      (x|ch|ss|sh)es$         $1\n      ([m|l])ice$             $1ouse\n      (us)es$                 $1\n      (o)es$                  $1\n      (shoe)s$                $1\n      (cris|ax|test)es$       $1is\n      (octop|vir)i$           $1us\n      (alias|status)es$       $1\n      ^(ox)en                 $1\n      (vert|ind)ices$         $1ex\n      (matr)ices$             $1ix\n      (quiz)zes$              $1\n      ss$                     ss\n    \"\"\"\n\nThe common case for replacing the last s with an empty string, added separately because the text block can't easily parse the empty string as a replacement.\n\n    singularRules.push matcher(\"s$\", \"\")\n\nWords that should not be capitalized for title case.\n\n    nonTitlecasedWords = \"\"\"\n      and\n      or\n      nor\n      a\n      an\n      the\n      so\n      but\n      to\n      of\n      at\n      by\n      from\n      into\n      on\n      onto\n      off\n      out\n      in\n      over\n      with\n      for\n    \"\"\".split(\"\\n\")\n\nNouns that use the same form for both singular and plural.\n\n    uncountableWords = \"\"\"\n      equipment\n      information\n      rice\n      money\n      species\n      series\n      fish\n      sheep\n      moose\n      deer\n      news\n    \"\"\".split(\"\\n\")\n\nExport our rules.\n\n    module.exports = {\n      nonTitlecasedWords\n      pluralRules\n      singularRules\n      uncountableWords\n    }\n",
              "mode": "100644",
              "type": "blob"
            },
            "test/pollute.coffee": {
              "path": "test/pollute.coffee",
              "content": "require(\"../source/inflector\").pollute()\n\ndescribe \"Polluted String\", ->\n  it \"should have inflector methods\", ->\n    assert.equal \"String\".constantize(), String\n\n  it \"should not have version property\", ->\n    assert !\"\".version\n\n  it \"should not have pollute method\", ->\n    assert !\"\".pollute\n",
              "mode": "100644",
              "type": "blob"
            },
            "test/test.coffee": {
              "path": "test/test.coffee",
              "content": "Inflector = require(\"../source/inflector\")\n\nsampleData = \"\"\"\n  address       addresses\n  boss          bosses\n  bus           buses\n  cat           cats\n  child         children\n  duder         duders\n  Hat           Hats\n  man           men\n  woman         women\n  zombie        zombies\n  octopus       octopi\n  walrus        walruses\n  guy           guys\n  person        people\n  status        statuses\n\"\"\".split(\"\\n\").map (line) ->\n  line.split(\" \").filter (piece) ->\n    piece != \"\"\n\ndescribe \"Inflector\", ->\n  describe \"pluralize\", ->\n    sampleData.forEach ([singular, plural]) ->\n      it \"#{singular} as #{plural}\", ->\n        assert.equal Inflector.pluralize(singular), plural\n\n      it \"#{plural} as #{plural}\", ->\n        assert.equal Inflector.pluralize(plural), plural\n\n  describe \"singularize\", ->\n    sampleData.forEach ([singular, plural]) ->\n      it \"#{plural} as #{singular}\", ->\n        assert.equal Inflector.singularize(plural), singular\n\n      it \"#{singular} as #{singular}\", ->\n        assert.equal Inflector.singularize(singular), singular\n\n  describe \"camelize\", ->\n    it \"message_properties as MessageProperties\", ->\n      assert.equal Inflector.camelize(\"message_properties\"), \"MessageProperties\"\n\n    it \"message_properties, true as messageProperties\", ->\n      assert.equal Inflector.camelize(\"message_properties\", true), \"messageProperties\"\n\n    it \"should replace / with scope resolution operator\", ->\n      assert.equal Inflector.camelize(\"models/person\"), \"Models.Person\"\n\n    it \"shouldn't overdo it\", ->\n      assert.equal Inflector.camelize(Inflector.camelize(\"anAlreadyCamelizedDude\")), \"AnAlreadyCamelizedDude\"\n\n  describe \"classify\", ->\n    it \"should convert a property name into a class name suitable for lookup\", ->\n      assert.equal Inflector.classify(\"message_bus_properties\"), \"MessageBusProperty\"\n\n    it \"should work for camel cased names too\", ->\n      assert.equal Inflector.classify(\"messageBusProperties\"), \"MessageBusProperty\"\n\n    it \"should convert directory separators to namespaces\", ->\n      assert.equal Inflector.classify(\"models/message_bus_properties\"), \"Models.MessageBusProperty\"\n\n  describe \"capitalize\", ->\n    it \"should work on underscored words\", ->\n      assert.equal Inflector.capitalize(\"message_properties\"), \"Message_properties\"\n\n    it \"should work on normal words\", ->\n      assert.equal Inflector.capitalize(\"message properties\"), \"Message properties\"\n\n  describe \"constantize\", ->\n    # Namespace for testing\n    Tempest =\n      Models:\n        Person: {}\n\n    it \"should look up global constants\", ->\n      assert.equal Inflector.constantize(\"String\"), String\n      assert.equal Inflector.constantize(\"Number\"), Number\n      assert.equal Inflector.constantize(\"Object\"), Object\n\n    it \"should traverse namespaces\", ->\n      assert.equal Inflector.constantize(\"Models.Person\", Tempest), Tempest.Models.Person\n\n    it \"should work with classify\", ->\n      assert.equal Inflector.constantize(Inflector.classify(\"models/person\"), Tempest), Tempest.Models.Person\n\n  describe \"humanize\", ->\n    it \"should replace underscores with spaces\", ->\n      assert.equal Inflector.humanize(\"message_properties\"), \"Message properties\"\n      assert.equal Inflector.humanize(\"message_properties\", true), \"message properties\"\n\n    it \"should remove id suffixes\", ->\n      assert.equal Inflector.humanize(\"message_id\"), \"Message\"\n      assert.equal Inflector.humanize(\"messageId\"), \"Message\"\n\n    it \"should also work for camelCased words\", ->\n      assert.equal Inflector.humanize(\"messageProperties\"), \"Message properties\"\n      assert.equal Inflector.humanize(\"messageProperties\", true), \"message properties\"\n\n  describe \"tableize\", ->\n    it \"should transform words for use in storage solutions\", ->\n      assert.equal Inflector.tableize(\"people\"), \"people\"\n      assert.equal Inflector.tableize(\"MessageBusProperty\"), \"message_bus_properties\"\n\n  describe \"titleize\", ->\n    it \"should transform words to title case\", ->\n      assert.equal Inflector.titleize(\"message_properties\"), \"Message Properties\"\n      assert.equal Inflector.titleize(\"message properties to keep\"), \"Message Properties to Keep\"\n\n  describe \"underscore\", ->\n    it \"should convert camelCased words to underscored words\", ->\n      assert.equal Inflector.underscore(\"MessageProperties\"), \"message_properties\"\n      assert.equal Inflector.underscore(\"messageProperties\"), \"message_properties\"\n\n    it \"should deal with acronyms\", ->\n      assert.equal Inflector.underscore(\"MP\"), \"mp\"\n      assert.equal Inflector.underscore(\"HTTPConnection\"), \"http_connection\"\n\n  describe \"dasherize\", ->\n    it \"should convert words with spaces into words with dashes\", ->\n      assert.equal Inflector.dasherize(\"A really cool Feature\"), \"a-really-cool-feature\"\n",
              "mode": "100644",
              "type": "blob"
            },
            "test_helper.coffee.md": {
              "path": "test_helper.coffee.md",
              "content": "Test Helper\n===========\n\n    global.assert = require \"assert\"\n",
              "mode": "100644",
              "type": "blob"
            }
          },
          "distribution": {
            "interactive_runtime": {
              "path": "interactive_runtime",
              "content": "(function() {\n  var inflector;\n\n  inflector = require(\"/source/inflector\");\n\n  Object.keys(inflector).forEach(function(method) {\n    if (method === \"version\") {\n      return;\n    }\n    if (method === \"pollute\") {\n      return;\n    }\n    return Interactive.register(method, function(_arg) {\n      var outputElement, runtimeElement, source;\n      source = _arg.source, runtimeElement = _arg.runtimeElement;\n      outputElement = document.createElement(\"pre\");\n      runtimeElement.empty().append(outputElement);\n      return outputElement.textContent = source.split(\"\\n\").map(function(word) {\n        var result;\n        return result = inflector[method](word);\n      }).join(\"\\n\");\n    });\n  });\n\n}).call(this);\n",
              "type": "blob"
            },
            "package": {
              "path": "package",
              "content": "module.exports = {\"name\":\"inflecta\",\"version\":\"0.8.3\",\"description\":\"A better port of ActiveSupport Inflector to JS.\",\"main\":\"dist/inflector.js\",\"scripts\":{\"prepublish\":\"script/prepublish\",\"test\":\"script/test\"},\"files\":[\"dist\"],\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/STRd6/inflector\"},\"keywords\":[\"inflector\"],\"devDependencies\":{\"should\":\"1.2.2\",\"coffee-script\":\"~1.6.3\",\"mocha\":\"~1.12.0\",\"uglify-js\":\"~2.3.6\",\"docco\":\"~0.6.2\",\"browserify\":\"~2.26.0\"},\"author\":\"\",\"license\":\"MIT\",\"bugs\":{\"url\":\"https://github.com/STRd6/inflector/issues\"}};",
              "type": "blob"
            },
            "pixie": {
              "path": "pixie",
              "content": "module.exports = {\"version\":\"0.2.1\",\"entryPoint\":\"source/inflector\"};",
              "type": "blob"
            },
            "source/inflector": {
              "path": "source/inflector",
              "content": "(function() {\n  var applyRules, fileSeparator, idSuffix, inflector, nonTitlecasedWords, pluralRules, scopeResolution, singularRules, spaceOrUnderbar, uncountableWords, underbar, underbarPrefix, uppercase, _ref,\n    __slice = [].slice;\n\n  _ref = require(\"./rules\"), nonTitlecasedWords = _ref.nonTitlecasedWords, pluralRules = _ref.pluralRules, singularRules = _ref.singularRules, uncountableWords = _ref.uncountableWords;\n\n  idSuffix = RegExp(\"(_ids|_id)$\", \"g\");\n\n  underbar = RegExp(\"_\", \"g\");\n\n  spaceOrUnderbar = RegExp(\"[ _]\", \"g\");\n\n  uppercase = RegExp(\"([A-Z])\", \"g\");\n\n  underbarPrefix = RegExp(\"^_\");\n\n  scopeResolution = \".\";\n\n  fileSeparator = \"/\";\n\n  applyRules = function(string, rules) {\n    if (uncountableWords.indexOf(string.toLowerCase()) > -1) {\n      return string;\n    }\n    return rules.reduce(function(result, _arg) {\n      var replacer, rule;\n      rule = _arg[0], replacer = _arg[1];\n      return result || (string.match(rule) ? string.replace(rule, replacer) : void 0);\n    }, null) || string;\n  };\n\n  inflector = {\n    pluralize: function(string) {\n      return applyRules(string, pluralRules);\n    },\n    singularize: function(string) {\n      return applyRules(string, singularRules);\n    },\n    camelize: function(string, lowercaseFirstLetter) {\n      return string.split(fileSeparator).map(function(pathItem) {\n        return pathItem.split(underbar).map(function(chunk, i) {\n          if (lowercaseFirstLetter && i === 0) {\n            return chunk;\n          } else {\n            return chunk.charAt(0).toUpperCase() + chunk.substring(1);\n          }\n        }).join(\"\");\n      }).join(scopeResolution);\n    },\n    constantize: function(string, rootModule) {\n      var item, target, _i, _len, _ref1;\n      target = rootModule != null ? rootModule : typeof global !== \"undefined\" && global !== null ? global : window;\n      _ref1 = string.split(scopeResolution);\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        item = _ref1[_i];\n        target = target[item];\n      }\n      return target;\n    },\n    underscore: function(string) {\n      return string.split(scopeResolution).map(function(chunk) {\n        return chunk.replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2').replace(/([a-z\\d])([A-Z])/g, '$1_$2').replace(/-/g, '_').toLowerCase();\n      }).join(fileSeparator).toLowerCase();\n    },\n    humanize: function(string, lowFirstLetter) {\n      string = inflector.underscore(string).toLowerCase().replace(idSuffix, \"\").replace(underbar, \" \");\n      if (!lowFirstLetter) {\n        string = inflector.capitalize(string);\n      }\n      return string;\n    },\n    capitalize: function(string) {\n      string = string.toLowerCase();\n      return string.substring(0, 1).toUpperCase() + string.substring(1);\n    },\n    titleize: function(string) {\n      var result;\n      result = string.toLowerCase().replace(underbar, \" \").split(\" \").map(function(chunk) {\n        return chunk.split(\"-\").map(function(piece) {\n          if (nonTitlecasedWords.indexOf(piece.toLowerCase()) < 0) {\n            return inflector.capitalize(piece);\n          } else {\n            return piece;\n          }\n        }).join(\"-\");\n      }).join(\" \");\n      return result.substring(0, 1).toUpperCase() + result.substring(1);\n    },\n    tableize: function(string) {\n      return inflector.pluralize(inflector.underscore(string));\n    },\n    classify: function(str) {\n      return inflector.singularize(inflector.camelize(str));\n    },\n    dasherize: function(str) {\n      return str.trim().replace(/\\s+/g, \"-\").toLowerCase();\n    },\n    pollute: function() {\n      Object.keys(inflector).forEach(function(key) {\n        if (key === \"version\") {\n          return;\n        }\n        if (key === \"pollute\") {\n          return;\n        }\n        return String.prototype[key] = function() {\n          var args;\n          args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n          return inflector[key].apply(inflector, [this].concat(__slice.call(args)));\n        };\n      });\n      return inflector;\n    }\n  };\n\n  module.exports = inflector;\n\n}).call(this);\n",
              "type": "blob"
            },
            "source/rules": {
              "path": "source/rules",
              "content": "(function() {\n  var matcher, nonTitlecasedWords, pluralRules, singularRules, toArrays, uncountableWords;\n\n  matcher = function(string, replacement) {\n    if (replacement == null) {\n      replacement = \"$&\";\n    }\n    return [RegExp(string, \"gi\"), replacement];\n  };\n\n  toArrays = function(text) {\n    return text.split(\"\\n\").map(function(line) {\n      return matcher.apply(null, line.split(\" \").filter(function(piece) {\n        return piece !== \"\";\n      }));\n    });\n  };\n\n  pluralRules = toArrays(\"(m)en$\\n(pe)ople$\\n(child)ren$\\n([ti])a$\\n((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$\\n(hive)s$\\n(tive)s$\\n(curve)s$\\n([lr])ves$\\n([^fo])ves$\\n([^aeiouy]|qu)ies$\\n(s)eries$\\n(m)ovies$\\n(x|ch|ss|sh)es$\\n([m|l])ice$\\n(bus)es$\\n(o)es$\\n(shoe)s$\\n(cris|ax|test)es$\\n(octop|vir)i$\\n(alias|status)es$\\n^(ox)en$\\n(vert|ind)ices$\\n(matr)ices$\\n(quiz)zes$\\n(m)an$                 $1en\\n(pe)rson$              $1ople\\n(child)$               $1ren\\n^(ox)$                 $1en\\n(ax|test)is$           $1es\\n(octop|vir)us$         $1i\\n(alias|status)$        $1es\\n(u)s$                  $1ses\\n(buffal|tomat|potat)o$ $1oes\\n([ti])um$              $1a\\nsis$                   ses\\n(?:([^f])fe|([lr])f)$  $1$2ves\\n(hive)$                $1s\\n([^aeiouy]|qu)y$       $1ies\\n(x|ch|ss|sh)$          $1es\\n(matr|vert|ind)ix|ex$  $1ices\\n([m|l])ouse$           $1ice\\n(quiz)$                $1zes\\ns$                     s\\n$                      s\");\n\n  singularRules = toArrays(\"(m)an$\\n(pe)rson$\\n(child)$\\n^(ox)$\\n(ax|test)is$\\n(octop|vir)us$\\n(alias|status)$\\n(b)ie$\\n([br]u)s$\\n(buffal|tomat|potat)o$\\n([ti])um$\\nsis$\\n(?:([^f])fe|([lr])f)$\\n(hive)$\\n([^aeiouy]|qu)y$\\n(x|ch|ss|sh)$\\n(matr|vert|ind)ix|ex$\\n([m|l])ouse$\\n(quiz)$\\n(m)en$                  $1an\\n(pe)ople$               $1rson\\n(child)ren$             $1\\n([ti])a$                $1um\\n((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$ $1$2sis\\n(hive)s$                $1\\n(tive)s$                $1\\n(curve)s$               $1\\n([lr])ves$              $1f\\n([^fo])ves$             $1fe\\n(bie)s                  $1\\n([^aeiouy]|qu)ies$      $1y\\n(s)eries$               $1eries\\n(m)ovies$               $1ovie\\n(x|ch|ss|sh)es$         $1\\n([m|l])ice$             $1ouse\\n(us)es$                 $1\\n(o)es$                  $1\\n(shoe)s$                $1\\n(cris|ax|test)es$       $1is\\n(octop|vir)i$           $1us\\n(alias|status)es$       $1\\n^(ox)en                 $1\\n(vert|ind)ices$         $1ex\\n(matr)ices$             $1ix\\n(quiz)zes$              $1\\nss$                     ss\");\n\n  singularRules.push(matcher(\"s$\", \"\"));\n\n  nonTitlecasedWords = \"and\\nor\\nnor\\na\\nan\\nthe\\nso\\nbut\\nto\\nof\\nat\\nby\\nfrom\\ninto\\non\\nonto\\noff\\nout\\nin\\nover\\nwith\\nfor\".split(\"\\n\");\n\n  uncountableWords = \"equipment\\ninformation\\nrice\\nmoney\\nspecies\\nseries\\nfish\\nsheep\\nmoose\\ndeer\\nnews\".split(\"\\n\");\n\n  module.exports = {\n    nonTitlecasedWords: nonTitlecasedWords,\n    pluralRules: pluralRules,\n    singularRules: singularRules,\n    uncountableWords: uncountableWords\n  };\n\n}).call(this);\n",
              "type": "blob"
            },
            "test/pollute": {
              "path": "test/pollute",
              "content": "(function() {\n  require(\"../source/inflector\").pollute();\n\n  describe(\"Polluted String\", function() {\n    it(\"should have inflector methods\", function() {\n      return assert.equal(\"String\".constantize(), String);\n    });\n    it(\"should not have version property\", function() {\n      return assert(!\"\".version);\n    });\n    return it(\"should not have pollute method\", function() {\n      return assert(!\"\".pollute);\n    });\n  });\n\n}).call(this);\n",
              "type": "blob"
            },
            "test/test": {
              "path": "test/test",
              "content": "(function() {\n  var Inflector, sampleData;\n\n  Inflector = require(\"../source/inflector\");\n\n  sampleData = \"address       addresses\\nboss          bosses\\nbus           buses\\ncat           cats\\nchild         children\\nduder         duders\\nHat           Hats\\nman           men\\nwoman         women\\nzombie        zombies\\noctopus       octopi\\nwalrus        walruses\\nguy           guys\\nperson        people\\nstatus        statuses\".split(\"\\n\").map(function(line) {\n    return line.split(\" \").filter(function(piece) {\n      return piece !== \"\";\n    });\n  });\n\n  describe(\"Inflector\", function() {\n    describe(\"pluralize\", function() {\n      return sampleData.forEach(function(_arg) {\n        var plural, singular;\n        singular = _arg[0], plural = _arg[1];\n        it(\"\" + singular + \" as \" + plural, function() {\n          return assert.equal(Inflector.pluralize(singular), plural);\n        });\n        return it(\"\" + plural + \" as \" + plural, function() {\n          return assert.equal(Inflector.pluralize(plural), plural);\n        });\n      });\n    });\n    describe(\"singularize\", function() {\n      return sampleData.forEach(function(_arg) {\n        var plural, singular;\n        singular = _arg[0], plural = _arg[1];\n        it(\"\" + plural + \" as \" + singular, function() {\n          return assert.equal(Inflector.singularize(plural), singular);\n        });\n        return it(\"\" + singular + \" as \" + singular, function() {\n          return assert.equal(Inflector.singularize(singular), singular);\n        });\n      });\n    });\n    describe(\"camelize\", function() {\n      it(\"message_properties as MessageProperties\", function() {\n        return assert.equal(Inflector.camelize(\"message_properties\"), \"MessageProperties\");\n      });\n      it(\"message_properties, true as messageProperties\", function() {\n        return assert.equal(Inflector.camelize(\"message_properties\", true), \"messageProperties\");\n      });\n      it(\"should replace / with scope resolution operator\", function() {\n        return assert.equal(Inflector.camelize(\"models/person\"), \"Models.Person\");\n      });\n      return it(\"shouldn't overdo it\", function() {\n        return assert.equal(Inflector.camelize(Inflector.camelize(\"anAlreadyCamelizedDude\")), \"AnAlreadyCamelizedDude\");\n      });\n    });\n    describe(\"classify\", function() {\n      it(\"should convert a property name into a class name suitable for lookup\", function() {\n        return assert.equal(Inflector.classify(\"message_bus_properties\"), \"MessageBusProperty\");\n      });\n      it(\"should work for camel cased names too\", function() {\n        return assert.equal(Inflector.classify(\"messageBusProperties\"), \"MessageBusProperty\");\n      });\n      return it(\"should convert directory separators to namespaces\", function() {\n        return assert.equal(Inflector.classify(\"models/message_bus_properties\"), \"Models.MessageBusProperty\");\n      });\n    });\n    describe(\"capitalize\", function() {\n      it(\"should work on underscored words\", function() {\n        return assert.equal(Inflector.capitalize(\"message_properties\"), \"Message_properties\");\n      });\n      return it(\"should work on normal words\", function() {\n        return assert.equal(Inflector.capitalize(\"message properties\"), \"Message properties\");\n      });\n    });\n    describe(\"constantize\", function() {\n      var Tempest;\n      Tempest = {\n        Models: {\n          Person: {}\n        }\n      };\n      it(\"should look up global constants\", function() {\n        assert.equal(Inflector.constantize(\"String\"), String);\n        assert.equal(Inflector.constantize(\"Number\"), Number);\n        return assert.equal(Inflector.constantize(\"Object\"), Object);\n      });\n      it(\"should traverse namespaces\", function() {\n        return assert.equal(Inflector.constantize(\"Models.Person\", Tempest), Tempest.Models.Person);\n      });\n      return it(\"should work with classify\", function() {\n        return assert.equal(Inflector.constantize(Inflector.classify(\"models/person\"), Tempest), Tempest.Models.Person);\n      });\n    });\n    describe(\"humanize\", function() {\n      it(\"should replace underscores with spaces\", function() {\n        assert.equal(Inflector.humanize(\"message_properties\"), \"Message properties\");\n        return assert.equal(Inflector.humanize(\"message_properties\", true), \"message properties\");\n      });\n      it(\"should remove id suffixes\", function() {\n        assert.equal(Inflector.humanize(\"message_id\"), \"Message\");\n        return assert.equal(Inflector.humanize(\"messageId\"), \"Message\");\n      });\n      return it(\"should also work for camelCased words\", function() {\n        assert.equal(Inflector.humanize(\"messageProperties\"), \"Message properties\");\n        return assert.equal(Inflector.humanize(\"messageProperties\", true), \"message properties\");\n      });\n    });\n    describe(\"tableize\", function() {\n      return it(\"should transform words for use in storage solutions\", function() {\n        assert.equal(Inflector.tableize(\"people\"), \"people\");\n        return assert.equal(Inflector.tableize(\"MessageBusProperty\"), \"message_bus_properties\");\n      });\n    });\n    describe(\"titleize\", function() {\n      return it(\"should transform words to title case\", function() {\n        assert.equal(Inflector.titleize(\"message_properties\"), \"Message Properties\");\n        return assert.equal(Inflector.titleize(\"message properties to keep\"), \"Message Properties to Keep\");\n      });\n    });\n    describe(\"underscore\", function() {\n      it(\"should convert camelCased words to underscored words\", function() {\n        assert.equal(Inflector.underscore(\"MessageProperties\"), \"message_properties\");\n        return assert.equal(Inflector.underscore(\"messageProperties\"), \"message_properties\");\n      });\n      return it(\"should deal with acronyms\", function() {\n        assert.equal(Inflector.underscore(\"MP\"), \"mp\");\n        return assert.equal(Inflector.underscore(\"HTTPConnection\"), \"http_connection\");\n      });\n    });\n    return describe(\"dasherize\", function() {\n      return it(\"should convert words with spaces into words with dashes\", function() {\n        return assert.equal(Inflector.dasherize(\"A really cool Feature\"), \"a-really-cool-feature\");\n      });\n    });\n  });\n\n}).call(this);\n",
              "type": "blob"
            },
            "test_helper": {
              "path": "test_helper",
              "content": "(function() {\n  global.assert = require(\"assert\");\n\n}).call(this);\n",
              "type": "blob"
            }
          },
          "progenitor": {
            "url": "http://www.danielx.net/editor/"
          },
          "version": "0.2.1",
          "entryPoint": "source/inflector",
          "repository": {
            "branch": "v0.2.1",
            "default_branch": "master",
            "full_name": "distri/inflector",
            "homepage": null,
            "description": " A better port of ActiveSupport Inflector to JS",
            "html_url": "https://github.com/distri/inflector",
            "url": "https://api.github.com/repos/distri/inflector",
            "publishBranch": "gh-pages"
          },
          "dependencies": {}
        },
        "math": {
          "source": {
            "LICENSE": {
              "path": "LICENSE",
              "content": "The MIT License (MIT)\n\nCopyright (c) 2013 Daniel X Moore\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
              "mode": "100644",
              "type": "blob"
            },
            "README.md": {
              "path": "README.md",
              "content": "math\n====\n\nMath is for cool guys.\n",
              "mode": "100644",
              "type": "blob"
            },
            "math.coffee.md": {
              "path": "math.coffee.md",
              "content": "Math\n====\n\nRequire and export many math libraries.\n\n    Point = require \"point\"\n    Size = require \"size\"\n\n    Matrix = require \"matrix\"\n    Matrix.Point = Point\n\n    Random = require \"random\"\n\n    module.exports = self =\n      Point: Point\n      Matrix: Matrix\n      Random: Random\n      Rectangle: require \"./rectangle\"\n      rand: Random.rand\n      Size: Size\n      version: require(\"./pixie\").version\n\nPollute all libraries to the global namespace.\n\n      pollute: ->\n        Object.keys(self).forEach (key) ->\n          return if key is \"version\"\n          return if key is \"pollute\"\n\n          global[key] = self[key]\n\n        return self\n",
              "mode": "100644",
              "type": "blob"
            },
            "pixie.cson": {
              "path": "pixie.cson",
              "content": "entryPoint: \"math\"\nversion: \"0.2.4\"\ndependencies:\n  point: \"distri/point:v0.2.0\"\n  matrix: \"distri/matrix:v0.3.1\"\n  random: \"distri/random:v0.2.0\"\n  size: \"distri/size:v0.1.4\"\n",
              "mode": "100644",
              "type": "blob"
            },
            "rectangle.coffee.md": {
              "path": "rectangle.coffee.md",
              "content": "Rectangle\n=========\n\nA rectangle is a size at a given position.\n\n    {abs, min} = Math\n\n    Size = require \"size\"\n\n    module.exports = Rectangle = (position, size) ->\n      if position?.size?\n        {position, size} = position\n\n      position: Point(position)\n      size: Size(size)\n      __proto__: Rectangle.prototype\n\n    Rectangle.prototype =\n      each: (iterator) ->\n        p = @position\n\n        @size.each (x, y) ->\n          iterator(p.x + x, p.y + y)\n\n    Rectangle.fromPoints = (start, end) ->\n      Rectangle Point(min(start.x, end.x), min(start.y, end.y)), Size(abs(end.x - start.x), abs(end.y - start.y))\n",
              "mode": "100644",
              "type": "blob"
            },
            "test/math.coffee": {
              "path": "test/math.coffee",
              "content": "require(\"../math\").pollute()\n\ndescribe \"Point\", ->\n  it \"should exist\", ->\n    assert Point\n\n  it \"should construct points\", ->\n    assert Point()\n\ndescribe \"Matrix\", ->\n  it \"should exist and return matrices when invoked\", ->\n    assert Matrix\n\n    assert Matrix()\n\n  it \"should use the same `Point` class\", ->\n    assert Matrix.Point is Point\n\n    assert Matrix().transformPoint(Point()) instanceof Point\n\ndescribe \"Random\", ->\n  it \"should exist\", ->\n    assert Random\n\ndescribe \"rand\", ->\n  it \"should exist\", ->\n    assert rand\n\n    assert rand()?\n\ndescribe \"Size\", ->\n  it \"should exist\", ->\n    assert Size\n\ndescribe \"Math\", ->\n  it \"should have a version\", ->\n    assert require(\"../math\").version\n",
              "mode": "100644",
              "type": "blob"
            },
            "test/rectangle.coffee": {
              "path": "test/rectangle.coffee",
              "content": "{Point, Size, Rectangle} = require \"../math\"\n\ndescribe \"rectangle\", ->\n  it \"should iterate\", ->\n    rectangle = Rectangle\n      position: Point(2, 2)\n      size: Size(2, 2)\n\n    total = 0\n    rectangle.each (x, y) ->\n      total += 1\n\n    assert.equal total, 4\n",
              "mode": "100644",
              "type": "blob"
            }
          },
          "distribution": {
            "math": {
              "path": "math",
              "content": "(function() {\n  var Matrix, Point, Random, Size, self;\n\n  Point = require(\"point\");\n\n  Size = require(\"size\");\n\n  Matrix = require(\"matrix\");\n\n  Matrix.Point = Point;\n\n  Random = require(\"random\");\n\n  module.exports = self = {\n    Point: Point,\n    Matrix: Matrix,\n    Random: Random,\n    Rectangle: require(\"./rectangle\"),\n    rand: Random.rand,\n    Size: Size,\n    version: require(\"./pixie\").version,\n    pollute: function() {\n      Object.keys(self).forEach(function(key) {\n        if (key === \"version\") {\n          return;\n        }\n        if (key === \"pollute\") {\n          return;\n        }\n        return global[key] = self[key];\n      });\n      return self;\n    }\n  };\n\n}).call(this);\n",
              "type": "blob"
            },
            "pixie": {
              "path": "pixie",
              "content": "module.exports = {\"entryPoint\":\"math\",\"version\":\"0.2.4\",\"dependencies\":{\"point\":\"distri/point:v0.2.0\",\"matrix\":\"distri/matrix:v0.3.1\",\"random\":\"distri/random:v0.2.0\",\"size\":\"distri/size:v0.1.4\"}};",
              "type": "blob"
            },
            "rectangle": {
              "path": "rectangle",
              "content": "(function() {\n  var Rectangle, Size, abs, min;\n\n  abs = Math.abs, min = Math.min;\n\n  Size = require(\"size\");\n\n  module.exports = Rectangle = function(position, size) {\n    var _ref;\n    if ((position != null ? position.size : void 0) != null) {\n      _ref = position, position = _ref.position, size = _ref.size;\n    }\n    return {\n      position: Point(position),\n      size: Size(size),\n      __proto__: Rectangle.prototype\n    };\n  };\n\n  Rectangle.prototype = {\n    each: function(iterator) {\n      var p;\n      p = this.position;\n      return this.size.each(function(x, y) {\n        return iterator(p.x + x, p.y + y);\n      });\n    }\n  };\n\n  Rectangle.fromPoints = function(start, end) {\n    return Rectangle(Point(min(start.x, end.x), min(start.y, end.y)), Size(abs(end.x - start.x), abs(end.y - start.y)));\n  };\n\n}).call(this);\n",
              "type": "blob"
            },
            "test/math": {
              "path": "test/math",
              "content": "(function() {\n  require(\"../math\").pollute();\n\n  describe(\"Point\", function() {\n    it(\"should exist\", function() {\n      return assert(Point);\n    });\n    return it(\"should construct points\", function() {\n      return assert(Point());\n    });\n  });\n\n  describe(\"Matrix\", function() {\n    it(\"should exist and return matrices when invoked\", function() {\n      assert(Matrix);\n      return assert(Matrix());\n    });\n    return it(\"should use the same `Point` class\", function() {\n      assert(Matrix.Point === Point);\n      return assert(Matrix().transformPoint(Point()) instanceof Point);\n    });\n  });\n\n  describe(\"Random\", function() {\n    return it(\"should exist\", function() {\n      return assert(Random);\n    });\n  });\n\n  describe(\"rand\", function() {\n    return it(\"should exist\", function() {\n      assert(rand);\n      return assert(rand() != null);\n    });\n  });\n\n  describe(\"Size\", function() {\n    return it(\"should exist\", function() {\n      return assert(Size);\n    });\n  });\n\n  describe(\"Math\", function() {\n    return it(\"should have a version\", function() {\n      return assert(require(\"../math\").version);\n    });\n  });\n\n}).call(this);\n",
              "type": "blob"
            },
            "test/rectangle": {
              "path": "test/rectangle",
              "content": "(function() {\n  var Point, Rectangle, Size, _ref;\n\n  _ref = require(\"../math\"), Point = _ref.Point, Size = _ref.Size, Rectangle = _ref.Rectangle;\n\n  describe(\"rectangle\", function() {\n    return it(\"should iterate\", function() {\n      var rectangle, total;\n      rectangle = Rectangle({\n        position: Point(2, 2),\n        size: Size(2, 2)\n      });\n      total = 0;\n      rectangle.each(function(x, y) {\n        return total += 1;\n      });\n      return assert.equal(total, 4);\n    });\n  });\n\n}).call(this);\n",
              "type": "blob"
            }
          },
          "progenitor": {
            "url": "http://www.danielx.net/editor/"
          },
          "version": "0.2.4",
          "entryPoint": "math",
          "repository": {
            "branch": "v0.2.4",
            "default_branch": "master",
            "full_name": "distri/math",
            "homepage": null,
            "description": "Math is for cool guys.",
            "html_url": "https://github.com/distri/math",
            "url": "https://api.github.com/repos/distri/math",
            "publishBranch": "gh-pages"
          },
          "dependencies": {
            "point": {
              "source": {
                "LICENSE": {
                  "path": "LICENSE",
                  "mode": "100644",
                  "content": "The MIT License (MIT)\n\nCopyright (c) 2013 Daniel X Moore\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
                  "type": "blob"
                },
                "README.md": {
                  "path": "README.md",
                  "mode": "100644",
                  "content": "point\n=====\n\nJavaScript Point implementation\n",
                  "type": "blob"
                },
                "interactive_runtime.coffee.md": {
                  "path": "interactive_runtime.coffee.md",
                  "mode": "100644",
                  "content": "Interactive Runtime\n-------------------\n\n    window.Point = require(\"./point\")\n\nRegister our example runner.\n\n    Interactive.register \"example\", ({source, runtimeElement}) ->\n      program = CoffeeScript.compile(source, bare: true)\n\n      outputElement = document.createElement \"pre\"\n      runtimeElement.empty().append outputElement\n\n      result = eval(program)\n\n      if typeof result is \"number\"\n        if result != (0 | result)\n          result = result.toFixed(4)\n    \n\n      outputElement.textContent = result\n",
                  "type": "blob"
                },
                "pixie.cson": {
                  "path": "pixie.cson",
                  "mode": "100644",
                  "content": "version: \"0.2.0\"\nentryPoint: \"point\"\n",
                  "type": "blob"
                },
                "point.coffee.md": {
                  "path": "point.coffee.md",
                  "mode": "100644",
                  "content": "\nCreate a new point with given x and y coordinates. If no arguments are given\ndefaults to (0, 0).\n\n>     #! example\n>     Point()\n\n----\n\n>     #! example\n>     Point(-2, 5)\n\n----\n\n    Point = (x, y) ->\n      if isObject(x)\n        {x, y} = x\n\n      __proto__: Point.prototype\n      x: x ? 0\n      y: y ? 0\n\nPoint protoype methods.\n\n    Point:: =\n\nConstrain the magnitude of a vector.\n\n      clamp: (n) ->\n        if @magnitude() > n\n          @norm(n)\n        else\n          @copy()\n\nCreates a copy of this point.\n\n      copy: ->\n        Point(@x, @y)\n\n>     #! example\n>     Point(1, 1).copy()\n\n----\n\nAdds a point to this one and returns the new point. You may\nalso use a two argument call like `point.add(x, y)`\nto add x and y values without a second point object.\n\n      add: (first, second) ->\n        if second?\n          Point(\n            @x + first\n            @y + second\n          )\n        else\n          Point(\n            @x + first.x,\n            @y + first.y\n          )\n\n>     #! example\n>     Point(2, 3).add(Point(3, 4))\n\n----\n\nSubtracts a point to this one and returns the new point.\n\n      subtract: (first, second) ->\n        if second?\n          Point(\n            @x - first,\n            @y - second\n          )\n        else\n          @add(first.scale(-1))\n\n>     #! example\n>     Point(1, 2).subtract(Point(2, 0))\n\n----\n\nScale this Point (Vector) by a constant amount.\n\n      scale: (scalar) ->\n        Point(\n          @x * scalar,\n          @y * scalar\n        )\n\n>     #! example\n>     point = Point(5, 6).scale(2)\n\n----\n\nThe `norm` of a vector is the unit vector pointing in the same direction. This method\ntreats the point as though it is a vector from the origin to (x, y).\n\n      norm: (length=1.0) ->\n        if m = @length()\n          @scale(length/m)\n        else\n          @copy()\n\n>     #! example\n>     point = Point(2, 3).norm()\n\n----\n\nDetermine whether this `Point` is equal to another `Point`. Returns `true` if\nthey are equal and `false` otherwise.\n\n      equal: (other) ->\n        @x == other.x && @y == other.y\n\n>     #! example\n>     point = Point(2, 3)\n>\n>     point.equal(Point(2, 3))\n\n----\n\nComputed the length of this point as though it were a vector from (0,0) to (x,y).\n\n      length: ->\n        Math.sqrt(@dot(this))\n\n>     #! example\n>     Point(5, 7).length()\n\n----\n\nCalculate the magnitude of this Point (Vector).\n\n      magnitude: ->\n        @length()\n\n>     #! example\n>     Point(5, 7).magnitude()\n\n----\n\nReturns the direction in radians of this point from the origin.\n\n      direction: ->\n        Math.atan2(@y, @x)\n\n>     #! example\n>     point = Point(0, 1)\n>\n>     point.direction()\n\n----\n\nCalculate the dot product of this point and another point (Vector).\n\n      dot: (other) ->\n        @x * other.x + @y * other.y\n\n\n`cross` calculates the cross product of this point and another point (Vector).\nUsually cross products are thought of as only applying to three dimensional vectors,\nbut z can be treated as zero. The result of this method is interpreted as the magnitude\nof the vector result of the cross product between [x1, y1, 0] x [x2, y2, 0]\nperpendicular to the xy plane.\n\n      cross: (other) ->\n        @x * other.y - other.x * @y\n\n\n`distance` computes the Euclidean distance between this point and another point.\n\n      distance: (other) ->\n        Point.distance(this, other)\n\n>     #! example\n>     pointA = Point(2, 3)\n>     pointB = Point(9, 2)\n>\n>     pointA.distance(pointB)\n\n----\n\n`toFixed` returns a string representation of this point with fixed decimal places.\n\n      toFixed: (n) ->\n        \"Point(#{@x.toFixed(n)}, #{@y.toFixed(n)})\"\n\n`toString` returns a string representation of this point. The representation is\nsuch that if `eval`d it will return a `Point`\n\n      toString: ->\n        \"Point(#{@x}, #{@y})\"\n\n`distance` Compute the Euclidean distance between two points.\n\n    Point.distance = (p1, p2) ->\n      Math.sqrt(Point.distanceSquared(p1, p2))\n\n>     #! example\n>     pointA = Point(2, 3)\n>     pointB = Point(9, 2)\n>\n>     Point.distance(pointA, pointB)\n\n----\n\n`distanceSquared` The square of the Euclidean distance between two points.\n\n    Point.distanceSquared = (p1, p2) ->\n      Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2)\n\n>     #! example\n>     pointA = Point(2, 3)\n>     pointB = Point(9, 2)\n>\n>     Point.distanceSquared(pointA, pointB)\n\n----\n\n`interpolate` returns a point along the path from p1 to p2\n\n    Point.interpolate = (p1, p2, t) ->\n      p2.subtract(p1).scale(t).add(p1)\n\nConstruct a point on the unit circle for the given angle.\n\n    Point.fromAngle = (angle) ->\n      Point(Math.cos(angle), Math.sin(angle))\n\n>     #! example\n>     Point.fromAngle(Math.PI / 2)\n\n----\n\nIf you have two dudes, one standing at point p1, and the other\nstanding at point p2, then this method will return the direction\nthat the dude standing at p1 will need to face to look at p2.\n\n>     #! example\n>     p1 = Point(0, 0)\n>     p2 = Point(7, 3)\n>\n>     Point.direction(p1, p2)\n\n    Point.direction = (p1, p2) ->\n      Math.atan2(\n        p2.y - p1.y,\n        p2.x - p1.x\n      )\n\nThe centroid of a set of points is their arithmetic mean.\n\n    Point.centroid = (points...) ->\n      points.reduce((sumPoint, point) ->\n        sumPoint.add(point)\n      , Point(0, 0))\n      .scale(1/points.length)\n\nGenerate a random point on the unit circle.\n\n    Point.random = ->\n      Point.fromAngle(Math.random() * 2 * Math.PI)\n\nExport\n\n    module.exports = Point\n\nHelpers\n-------\n\n    isObject = (object) ->\n      Object.prototype.toString.call(object) is \"[object Object]\"\n\nLive Examples\n-------------\n\n>     #! setup\n>     require(\"/interactive_runtime\")\n",
                  "type": "blob"
                },
                "test/test.coffee": {
                  "path": "test/test.coffee",
                  "mode": "100644",
                  "content": "Point = require \"../point\"\n\nok = assert\nequals = assert.equal\n\nTAU = 2 * Math.PI\n\ndescribe \"Point\", ->\n\n  TOLERANCE = 0.00001\n\n  equalEnough = (expected, actual, tolerance, message) ->\n    message ||= \"\" + expected + \" within \" + tolerance + \" of \" + actual\n    ok(expected + tolerance >= actual && expected - tolerance <= actual, message)\n\n  it \"copy constructor\", ->\n    p = Point(3, 7)\n\n    p2 = Point(p)\n\n    equals p2.x, p.x\n    equals p2.y, p.y\n\n  it \"#add\", ->\n    p1 = Point(5, 6)\n    p2 = Point(7, 5)\n\n    result = p1.add(p2)\n\n    equals result.x, p1.x + p2.x\n    equals result.y, p1.y + p2.y\n\n    equals p1.x, 5\n    equals p1.y, 6\n    equals p2.x, 7\n    equals p2.y, 5\n\n  it \"#add with two arguments\", ->\n    point = Point(3, 7)\n    x = 2\n    y = 1\n\n    result = point.add(x, y)\n\n    equals result.x, point.x + x\n    equals result.y, point.y + y\n\n    x = 2\n    y = 0\n\n    result = point.add(x, y)\n\n    equals result.x, point.x + x\n    equals result.y, point.y + y\n\n  it \"#add existing\", ->\n    p = Point(0, 0)\n\n    p.add(Point(3, 5))\n\n    equals p.x, 0\n    equals p.y, 0\n\n  it \"#subtract\", ->\n    p1 = Point(5, 6)\n    p2 = Point(7, 5)\n\n    result = p1.subtract(p2)\n\n    equals result.x, p1.x - p2.x\n    equals result.y, p1.y - p2.y\n\n  it \"#subtract existing\", ->\n    p = Point(8, 6)\n\n    p.subtract(3, 4)\n\n    equals p.x, 8\n    equals p.y, 6\n\n  it \"#norm\", ->\n    p = Point(2, 0)\n\n    normal = p.norm()\n    equals normal.x, 1\n\n    normal = p.norm(5)\n    equals normal.x, 5\n\n    p = Point(0, 0)\n\n    normal = p.norm()\n    equals normal.x, 0, \"x value of norm of point(0,0) is 0\"\n    equals normal.y, 0, \"y value of norm of point(0,0) is 0\"\n\n  it \"#norm existing\", ->\n    p = Point(6, 8)\n\n    p.norm(5)\n\n    equals p.x, 6\n    equals p.y, 8\n\n  it \"#scale\", ->\n    p = Point(5, 6)\n    scalar = 2\n\n    result = p.scale(scalar)\n\n    equals result.x, p.x * scalar\n    equals result.y, p.y * scalar\n\n    equals p.x, 5\n    equals p.y, 6\n\n  it \"#scale existing\", ->\n    p = Point(0, 1)\n    scalar = 3\n\n    p.scale(scalar)\n\n    equals p.x, 0\n    equals p.y, 1\n\n  it \"#equal\", ->\n    ok Point(7, 8).equal(Point(7, 8))\n\n  it \"#magnitude\", ->\n    equals Point(3, 4).magnitude(), 5\n\n  it \"#length\", ->\n    equals Point(0, 0).length(), 0\n    equals Point(-1, 0).length(), 1\n\n  it \"#toString\", ->\n    p = Point(7, 5)\n    ok eval(p.toString()).equal(p)\n\n  it \"#clamp\", ->\n    p = Point(10, 10)\n    p2 = p.clamp(5)\n\n    equals p2.length(), 5\n\n  it \".centroid\", ->\n    centroid = Point.centroid(\n      Point(0, 0),\n      Point(10, 10),\n      Point(10, 0),\n      Point(0, 10)\n    )\n\n    equals centroid.x, 5\n    equals centroid.y, 5\n\n  it \".fromAngle\", ->\n    p = Point.fromAngle(TAU / 4)\n\n    equalEnough p.x, 0, TOLERANCE\n    equals p.y, 1\n\n  it \".random\", ->\n    p = Point.random()\n\n    ok p\n\n  it \".interpolate\", ->\n    p1 = Point(10, 7)\n    p2 = Point(-6, 29)\n\n    ok p1.equal(Point.interpolate(p1, p2, 0))\n    ok p2.equal(Point.interpolate(p1, p2, 1))\n",
                  "type": "blob"
                }
              },
              "distribution": {
                "interactive_runtime": {
                  "path": "interactive_runtime",
                  "content": "(function() {\n  window.Point = require(\"./point\");\n\n  Interactive.register(\"example\", function(_arg) {\n    var outputElement, program, result, runtimeElement, source;\n    source = _arg.source, runtimeElement = _arg.runtimeElement;\n    program = CoffeeScript.compile(source, {\n      bare: true\n    });\n    outputElement = document.createElement(\"pre\");\n    runtimeElement.empty().append(outputElement);\n    result = eval(program);\n    if (typeof result === \"number\") {\n      if (result !== (0 | result)) {\n        result = result.toFixed(4);\n      }\n    }\n    return outputElement.textContent = result;\n  });\n\n}).call(this);\n\n//# sourceURL=interactive_runtime.coffee",
                  "type": "blob"
                },
                "pixie": {
                  "path": "pixie",
                  "content": "module.exports = {\"version\":\"0.2.0\",\"entryPoint\":\"point\"};",
                  "type": "blob"
                },
                "point": {
                  "path": "point",
                  "content": "(function() {\n  var Point, isObject,\n    __slice = [].slice;\n\n  Point = function(x, y) {\n    var _ref;\n    if (isObject(x)) {\n      _ref = x, x = _ref.x, y = _ref.y;\n    }\n    return {\n      __proto__: Point.prototype,\n      x: x != null ? x : 0,\n      y: y != null ? y : 0\n    };\n  };\n\n  Point.prototype = {\n    clamp: function(n) {\n      if (this.magnitude() > n) {\n        return this.norm(n);\n      } else {\n        return this.copy();\n      }\n    },\n    copy: function() {\n      return Point(this.x, this.y);\n    },\n    add: function(first, second) {\n      if (second != null) {\n        return Point(this.x + first, this.y + second);\n      } else {\n        return Point(this.x + first.x, this.y + first.y);\n      }\n    },\n    subtract: function(first, second) {\n      if (second != null) {\n        return Point(this.x - first, this.y - second);\n      } else {\n        return this.add(first.scale(-1));\n      }\n    },\n    scale: function(scalar) {\n      return Point(this.x * scalar, this.y * scalar);\n    },\n    norm: function(length) {\n      var m;\n      if (length == null) {\n        length = 1.0;\n      }\n      if (m = this.length()) {\n        return this.scale(length / m);\n      } else {\n        return this.copy();\n      }\n    },\n    equal: function(other) {\n      return this.x === other.x && this.y === other.y;\n    },\n    length: function() {\n      return Math.sqrt(this.dot(this));\n    },\n    magnitude: function() {\n      return this.length();\n    },\n    direction: function() {\n      return Math.atan2(this.y, this.x);\n    },\n    dot: function(other) {\n      return this.x * other.x + this.y * other.y;\n    },\n    cross: function(other) {\n      return this.x * other.y - other.x * this.y;\n    },\n    distance: function(other) {\n      return Point.distance(this, other);\n    },\n    toFixed: function(n) {\n      return \"Point(\" + (this.x.toFixed(n)) + \", \" + (this.y.toFixed(n)) + \")\";\n    },\n    toString: function() {\n      return \"Point(\" + this.x + \", \" + this.y + \")\";\n    }\n  };\n\n  Point.distance = function(p1, p2) {\n    return Math.sqrt(Point.distanceSquared(p1, p2));\n  };\n\n  Point.distanceSquared = function(p1, p2) {\n    return Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2);\n  };\n\n  Point.interpolate = function(p1, p2, t) {\n    return p2.subtract(p1).scale(t).add(p1);\n  };\n\n  Point.fromAngle = function(angle) {\n    return Point(Math.cos(angle), Math.sin(angle));\n  };\n\n  Point.direction = function(p1, p2) {\n    return Math.atan2(p2.y - p1.y, p2.x - p1.x);\n  };\n\n  Point.centroid = function() {\n    var points;\n    points = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    return points.reduce(function(sumPoint, point) {\n      return sumPoint.add(point);\n    }, Point(0, 0)).scale(1 / points.length);\n  };\n\n  Point.random = function() {\n    return Point.fromAngle(Math.random() * 2 * Math.PI);\n  };\n\n  module.exports = Point;\n\n  isObject = function(object) {\n    return Object.prototype.toString.call(object) === \"[object Object]\";\n  };\n\n}).call(this);\n\n//# sourceURL=point.coffee",
                  "type": "blob"
                },
                "test/test": {
                  "path": "test/test",
                  "content": "(function() {\n  var Point, TAU, equals, ok;\n\n  Point = require(\"../point\");\n\n  ok = assert;\n\n  equals = assert.equal;\n\n  TAU = 2 * Math.PI;\n\n  describe(\"Point\", function() {\n    var TOLERANCE, equalEnough;\n    TOLERANCE = 0.00001;\n    equalEnough = function(expected, actual, tolerance, message) {\n      message || (message = \"\" + expected + \" within \" + tolerance + \" of \" + actual);\n      return ok(expected + tolerance >= actual && expected - tolerance <= actual, message);\n    };\n    it(\"copy constructor\", function() {\n      var p, p2;\n      p = Point(3, 7);\n      p2 = Point(p);\n      equals(p2.x, p.x);\n      return equals(p2.y, p.y);\n    });\n    it(\"#add\", function() {\n      var p1, p2, result;\n      p1 = Point(5, 6);\n      p2 = Point(7, 5);\n      result = p1.add(p2);\n      equals(result.x, p1.x + p2.x);\n      equals(result.y, p1.y + p2.y);\n      equals(p1.x, 5);\n      equals(p1.y, 6);\n      equals(p2.x, 7);\n      return equals(p2.y, 5);\n    });\n    it(\"#add with two arguments\", function() {\n      var point, result, x, y;\n      point = Point(3, 7);\n      x = 2;\n      y = 1;\n      result = point.add(x, y);\n      equals(result.x, point.x + x);\n      equals(result.y, point.y + y);\n      x = 2;\n      y = 0;\n      result = point.add(x, y);\n      equals(result.x, point.x + x);\n      return equals(result.y, point.y + y);\n    });\n    it(\"#add existing\", function() {\n      var p;\n      p = Point(0, 0);\n      p.add(Point(3, 5));\n      equals(p.x, 0);\n      return equals(p.y, 0);\n    });\n    it(\"#subtract\", function() {\n      var p1, p2, result;\n      p1 = Point(5, 6);\n      p2 = Point(7, 5);\n      result = p1.subtract(p2);\n      equals(result.x, p1.x - p2.x);\n      return equals(result.y, p1.y - p2.y);\n    });\n    it(\"#subtract existing\", function() {\n      var p;\n      p = Point(8, 6);\n      p.subtract(3, 4);\n      equals(p.x, 8);\n      return equals(p.y, 6);\n    });\n    it(\"#norm\", function() {\n      var normal, p;\n      p = Point(2, 0);\n      normal = p.norm();\n      equals(normal.x, 1);\n      normal = p.norm(5);\n      equals(normal.x, 5);\n      p = Point(0, 0);\n      normal = p.norm();\n      equals(normal.x, 0, \"x value of norm of point(0,0) is 0\");\n      return equals(normal.y, 0, \"y value of norm of point(0,0) is 0\");\n    });\n    it(\"#norm existing\", function() {\n      var p;\n      p = Point(6, 8);\n      p.norm(5);\n      equals(p.x, 6);\n      return equals(p.y, 8);\n    });\n    it(\"#scale\", function() {\n      var p, result, scalar;\n      p = Point(5, 6);\n      scalar = 2;\n      result = p.scale(scalar);\n      equals(result.x, p.x * scalar);\n      equals(result.y, p.y * scalar);\n      equals(p.x, 5);\n      return equals(p.y, 6);\n    });\n    it(\"#scale existing\", function() {\n      var p, scalar;\n      p = Point(0, 1);\n      scalar = 3;\n      p.scale(scalar);\n      equals(p.x, 0);\n      return equals(p.y, 1);\n    });\n    it(\"#equal\", function() {\n      return ok(Point(7, 8).equal(Point(7, 8)));\n    });\n    it(\"#magnitude\", function() {\n      return equals(Point(3, 4).magnitude(), 5);\n    });\n    it(\"#length\", function() {\n      equals(Point(0, 0).length(), 0);\n      return equals(Point(-1, 0).length(), 1);\n    });\n    it(\"#toString\", function() {\n      var p;\n      p = Point(7, 5);\n      return ok(eval(p.toString()).equal(p));\n    });\n    it(\"#clamp\", function() {\n      var p, p2;\n      p = Point(10, 10);\n      p2 = p.clamp(5);\n      return equals(p2.length(), 5);\n    });\n    it(\".centroid\", function() {\n      var centroid;\n      centroid = Point.centroid(Point(0, 0), Point(10, 10), Point(10, 0), Point(0, 10));\n      equals(centroid.x, 5);\n      return equals(centroid.y, 5);\n    });\n    it(\".fromAngle\", function() {\n      var p;\n      p = Point.fromAngle(TAU / 4);\n      equalEnough(p.x, 0, TOLERANCE);\n      return equals(p.y, 1);\n    });\n    it(\".random\", function() {\n      var p;\n      p = Point.random();\n      return ok(p);\n    });\n    return it(\".interpolate\", function() {\n      var p1, p2;\n      p1 = Point(10, 7);\n      p2 = Point(-6, 29);\n      ok(p1.equal(Point.interpolate(p1, p2, 0)));\n      return ok(p2.equal(Point.interpolate(p1, p2, 1)));\n    });\n  });\n\n}).call(this);\n\n//# sourceURL=test/test.coffee",
                  "type": "blob"
                }
              },
              "progenitor": {
                "url": "http://strd6.github.io/editor/"
              },
              "version": "0.2.0",
              "entryPoint": "point",
              "repository": {
                "id": 13484982,
                "name": "point",
                "full_name": "distri/point",
                "owner": {
                  "login": "distri",
                  "id": 6005125,
                  "avatar_url": "https://identicons.github.com/f90c81ffc1498e260c820082f2e7ca5f.png",
                  "gravatar_id": null,
                  "url": "https://api.github.com/users/distri",
                  "html_url": "https://github.com/distri",
                  "followers_url": "https://api.github.com/users/distri/followers",
                  "following_url": "https://api.github.com/users/distri/following{/other_user}",
                  "gists_url": "https://api.github.com/users/distri/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/distri/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/distri/subscriptions",
                  "organizations_url": "https://api.github.com/users/distri/orgs",
                  "repos_url": "https://api.github.com/users/distri/repos",
                  "events_url": "https://api.github.com/users/distri/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/distri/received_events",
                  "type": "Organization",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/distri/point",
                "description": "JavaScript Point implementation",
                "fork": false,
                "url": "https://api.github.com/repos/distri/point",
                "forks_url": "https://api.github.com/repos/distri/point/forks",
                "keys_url": "https://api.github.com/repos/distri/point/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/distri/point/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/distri/point/teams",
                "hooks_url": "https://api.github.com/repos/distri/point/hooks",
                "issue_events_url": "https://api.github.com/repos/distri/point/issues/events{/number}",
                "events_url": "https://api.github.com/repos/distri/point/events",
                "assignees_url": "https://api.github.com/repos/distri/point/assignees{/user}",
                "branches_url": "https://api.github.com/repos/distri/point/branches{/branch}",
                "tags_url": "https://api.github.com/repos/distri/point/tags",
                "blobs_url": "https://api.github.com/repos/distri/point/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/distri/point/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/distri/point/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/distri/point/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/distri/point/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/distri/point/languages",
                "stargazers_url": "https://api.github.com/repos/distri/point/stargazers",
                "contributors_url": "https://api.github.com/repos/distri/point/contributors",
                "subscribers_url": "https://api.github.com/repos/distri/point/subscribers",
                "subscription_url": "https://api.github.com/repos/distri/point/subscription",
                "commits_url": "https://api.github.com/repos/distri/point/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/distri/point/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/distri/point/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/distri/point/issues/comments/{number}",
                "contents_url": "https://api.github.com/repos/distri/point/contents/{+path}",
                "compare_url": "https://api.github.com/repos/distri/point/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/distri/point/merges",
                "archive_url": "https://api.github.com/repos/distri/point/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/distri/point/downloads",
                "issues_url": "https://api.github.com/repos/distri/point/issues{/number}",
                "pulls_url": "https://api.github.com/repos/distri/point/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/distri/point/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/distri/point/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/distri/point/labels{/name}",
                "releases_url": "https://api.github.com/repos/distri/point/releases{/id}",
                "created_at": "2013-10-10T22:59:27Z",
                "updated_at": "2013-12-23T23:33:20Z",
                "pushed_at": "2013-10-15T00:22:04Z",
                "git_url": "git://github.com/distri/point.git",
                "ssh_url": "git@github.com:distri/point.git",
                "clone_url": "https://github.com/distri/point.git",
                "svn_url": "https://github.com/distri/point",
                "homepage": null,
                "size": 836,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": "CoffeeScript",
                "has_issues": true,
                "has_downloads": true,
                "has_wiki": true,
                "forks_count": 0,
                "mirror_url": null,
                "open_issues_count": 0,
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "master_branch": "master",
                "permissions": {
                  "admin": true,
                  "push": true,
                  "pull": true
                },
                "organization": {
                  "login": "distri",
                  "id": 6005125,
                  "avatar_url": "https://identicons.github.com/f90c81ffc1498e260c820082f2e7ca5f.png",
                  "gravatar_id": null,
                  "url": "https://api.github.com/users/distri",
                  "html_url": "https://github.com/distri",
                  "followers_url": "https://api.github.com/users/distri/followers",
                  "following_url": "https://api.github.com/users/distri/following{/other_user}",
                  "gists_url": "https://api.github.com/users/distri/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/distri/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/distri/subscriptions",
                  "organizations_url": "https://api.github.com/users/distri/orgs",
                  "repos_url": "https://api.github.com/users/distri/repos",
                  "events_url": "https://api.github.com/users/distri/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/distri/received_events",
                  "type": "Organization",
                  "site_admin": false
                },
                "network_count": 0,
                "subscribers_count": 1,
                "branch": "v0.2.0",
                "defaultBranch": "master"
              },
              "dependencies": {}
            },
            "matrix": {
              "source": {
                "LICENSE": {
                  "path": "LICENSE",
                  "mode": "100644",
                  "content": "The MIT License (MIT)\n\nCopyright (c) 2013 Daniel X Moore\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
                  "type": "blob"
                },
                "README.md": {
                  "path": "README.md",
                  "mode": "100644",
                  "content": "matrix\n======\n\nWhere matrices become heroes, together.\n",
                  "type": "blob"
                },
                "matrix.coffee.md": {
                  "path": "matrix.coffee.md",
                  "mode": "100644",
                  "content": "Matrix\n======\n\n```\n   _        _\n  | a  c tx  |\n  | b  d ty  |\n  |_0  0  1 _|\n```\n\nCreates a matrix for 2d affine transformations.\n\n`concat`, `inverse`, `rotate`, `scale` and `translate` return new matrices with\nthe transformations applied. The matrix is not modified in place.\n\nReturns the identity matrix when called with no arguments.\n\n    Matrix = (a, b, c, d, tx, ty) ->\n      if isObject(a)\n        {a, b, c, d, tx, ty} = a\n\n      __proto__: Matrix.prototype\n      a: a ? 1\n      b: b ? 0\n      c: c ? 0\n      d: d ? 1\n      tx: tx ? 0\n      ty: ty ? 0\n\nA `Point` constructor for the methods that return points. This can be overridden\nwith a compatible constructor if you want fancier points.\n\n    Matrix.Point = require \"./point\"\n\n    Matrix.prototype =\n\n`concat` returns the result of this matrix multiplied by another matrix\ncombining the geometric effects of the two. In mathematical terms,\nconcatenating two matrixes is the same as combining them using matrix multiplication.\nIf this matrix is A and the matrix passed in is B, the resulting matrix is A x B\nhttp://mathworld.wolfram.com/MatrixMultiplication.html\n\n      concat: (matrix) ->\n        Matrix(\n          @a * matrix.a + @c * matrix.b,\n          @b * matrix.a + @d * matrix.b,\n          @a * matrix.c + @c * matrix.d,\n          @b * matrix.c + @d * matrix.d,\n          @a * matrix.tx + @c * matrix.ty + @tx,\n          @b * matrix.tx + @d * matrix.ty + @ty\n        )\n\n\nReturn a new matrix that is a `copy` of this matrix.\n\n      copy: ->\n        Matrix(@a, @b, @c, @d, @tx, @ty)\n\nGiven a point in the pretransform coordinate space, returns the coordinates of\nthat point after the transformation occurs. Unlike the standard transformation\napplied using the transformPoint() method, the deltaTransformPoint() method\ndoes not consider the translation parameters tx and ty.\n\nReturns a new `Point` transformed by this matrix ignoring tx and ty.\n\n      deltaTransformPoint: (point) ->\n        Matrix.Point(\n          @a * point.x + @c * point.y,\n          @b * point.x + @d * point.y\n        )\n\nReturns a new matrix that is the inverse of this matrix.\nhttp://mathworld.wolfram.com/MatrixInverse.html\n\n      inverse: ->\n        determinant = @a * @d - @b * @c\n\n        Matrix(\n          @d / determinant,\n          -@b / determinant,\n          -@c / determinant,\n          @a / determinant,\n          (@c * @ty - @d * @tx) / determinant,\n          (@b * @tx - @a * @ty) / determinant\n        )\n\nReturns a new matrix that corresponds this matrix multiplied by a\na rotation matrix.\n\nThe first parameter `theta` is the amount to rotate in radians.\n\nThe second optional parameter, `aboutPoint` is the point about which the\nrotation occurs. Defaults to (0,0).\n\n      rotate: (theta, aboutPoint) ->\n        @concat(Matrix.rotation(theta, aboutPoint))\n\nReturns a new matrix that corresponds this matrix multiplied by a\na scaling matrix.\n\n      scale: (sx, sy, aboutPoint) ->\n        @concat(Matrix.scale(sx, sy, aboutPoint))\n\nReturns a new matrix that corresponds this matrix multiplied by a\na skewing matrix.\n\n      skew: (skewX, skewY) ->\n        @concat(Matrix.skew(skewX, skewY))\n\nReturns a string representation of this matrix.\n\n      toString: ->\n        \"Matrix(#{@a}, #{@b}, #{@c}, #{@d}, #{@tx}, #{@ty})\"\n\nReturns the result of applying the geometric transformation represented by the\nMatrix object to the specified point.\n\n      transformPoint: (point) ->\n        Matrix.Point(\n          @a * point.x + @c * point.y + @tx,\n          @b * point.x + @d * point.y + @ty\n        )\n\nTranslates the matrix along the x and y axes, as specified by the tx and ty parameters.\n\n      translate: (tx, ty) ->\n        @concat(Matrix.translation(tx, ty))\n\nCreates a matrix transformation that corresponds to the given rotation,\naround (0,0) or the specified point.\n\n    Matrix.rotate = Matrix.rotation = (theta, aboutPoint) ->\n      rotationMatrix = Matrix(\n        Math.cos(theta),\n        Math.sin(theta),\n        -Math.sin(theta),\n        Math.cos(theta)\n      )\n\n      if aboutPoint?\n        rotationMatrix =\n          Matrix.translation(aboutPoint.x, aboutPoint.y).concat(\n            rotationMatrix\n          ).concat(\n            Matrix.translation(-aboutPoint.x, -aboutPoint.y)\n          )\n\n      return rotationMatrix\n\nReturns a matrix that corresponds to scaling by factors of sx, sy along\nthe x and y axis respectively.\n\nIf only one parameter is given the matrix is scaled uniformly along both axis.\n\nIf the optional aboutPoint parameter is given the scaling takes place\nabout the given point.\n\n    Matrix.scale = (sx, sy, aboutPoint) ->\n      sy = sy || sx\n\n      scaleMatrix = Matrix(sx, 0, 0, sy)\n\n      if aboutPoint\n        scaleMatrix =\n          Matrix.translation(aboutPoint.x, aboutPoint.y).concat(\n            scaleMatrix\n          ).concat(\n            Matrix.translation(-aboutPoint.x, -aboutPoint.y)\n          )\n\n      return scaleMatrix\n\n\nReturns a matrix that corresponds to a skew of skewX, skewY.\n\n    Matrix.skew = (skewX, skewY) ->\n      Matrix(0, Math.tan(skewY), Math.tan(skewX), 0)\n\nReturns a matrix that corresponds to a translation of tx, ty.\n\n    Matrix.translate = Matrix.translation = (tx, ty) ->\n      Matrix(1, 0, 0, 1, tx, ty)\n\nHelpers\n-------\n\n    isObject = (object) ->\n      Object.prototype.toString.call(object) is \"[object Object]\"\n\n    frozen = (object) ->\n      Object.freeze?(object)\n\n      return object\n\nConstants\n---------\n\nA constant representing the identity matrix.\n\n    Matrix.IDENTITY = frozen Matrix()\n\nA constant representing the horizontal flip transformation matrix.\n\n    Matrix.HORIZONTAL_FLIP = frozen Matrix(-1, 0, 0, 1)\n\nA constant representing the vertical flip transformation matrix.\n\n    Matrix.VERTICAL_FLIP = frozen Matrix(1, 0, 0, -1)\n\nExports\n-------\n\n    module.exports = Matrix\n",
                  "type": "blob"
                },
                "pixie.cson": {
                  "path": "pixie.cson",
                  "mode": "100644",
                  "content": "version: \"0.3.1\"\nentryPoint: \"matrix\"\n",
                  "type": "blob"
                },
                "test/matrix.coffee": {
                  "path": "test/matrix.coffee",
                  "mode": "100644",
                  "content": "Matrix = require \"../matrix\"\nPoint = require \"../point\"\n\nok = assert\nequals = assert.equal\ntest = it\n\ndescribe \"Matrix\", ->\n\n  TOLERANCE = 0.00001\n  \n  equalEnough = (expected, actual, tolerance, message) ->\n    message ||= \"\" + expected + \" within \" + tolerance + \" of \" + actual\n    ok(expected + tolerance >= actual && expected - tolerance <= actual, message)\n  \n  matrixEqual = (m1, m2) ->\n    equalEnough(m1.a, m2.a, TOLERANCE)\n    equalEnough(m1.b, m2.b, TOLERANCE)\n    equalEnough(m1.c, m2.c, TOLERANCE)\n    equalEnough(m1.d, m2.d, TOLERANCE)\n    equalEnough(m1.tx, m2.tx, TOLERANCE)\n    equalEnough(m1.ty, m2.ty, TOLERANCE)\n  \n  test \"copy constructor\", ->\n   matrix = Matrix(1, 0, 0, 1, 10, 12)\n  \n   matrix2 = Matrix(matrix)\n  \n   ok matrix != matrix2\n   matrixEqual(matrix2, matrix)\n  \n  test \"Matrix() (Identity)\", ->\n    matrix = Matrix()\n  \n    equals(matrix.a, 1, \"a\")\n    equals(matrix.b, 0, \"b\")\n    equals(matrix.c, 0, \"c\")\n    equals(matrix.d, 1, \"d\")\n    equals(matrix.tx, 0, \"tx\")\n    equals(matrix.ty, 0, \"ty\")\n  \n    matrixEqual(matrix, Matrix.IDENTITY)\n  \n  test \"Empty\", ->\n    matrix = Matrix(0, 0, 0, 0, 0, 0)\n  \n    equals(matrix.a, 0, \"a\")\n    equals(matrix.b, 0, \"b\")\n    equals(matrix.c, 0, \"c\")\n    equals(matrix.d, 0, \"d\")\n    equals(matrix.tx, 0, \"tx\")\n    equals(matrix.ty, 0, \"ty\")\n  \n  test \"#copy\", ->\n    matrix = Matrix(2, 0, 0, 2)\n  \n    copyMatrix = matrix.copy()\n  \n    matrixEqual copyMatrix, matrix\n  \n    copyMatrix.a = 4\n  \n    equals copyMatrix.a, 4\n    equals matrix.a, 2, \"Old 'a' value is unchanged\"\n  \n  test \".scale\", ->\n    matrix = Matrix.scale(2, 2)\n  \n    equals(matrix.a, 2, \"a\")\n    equals(matrix.b, 0, \"b\")\n    equals(matrix.c, 0, \"c\")\n    equals(matrix.d, 2, \"d\")\n  \n    matrix = Matrix.scale(3)\n  \n    equals(matrix.a, 3, \"a\")\n    equals(matrix.b, 0, \"b\")\n    equals(matrix.c, 0, \"c\")\n    equals(matrix.d, 3, \"d\")\n  \n  test \".scale (about a point)\", ->\n    p = Point(5, 17)\n  \n    transformedPoint = Matrix.scale(3, 7, p).transformPoint(p)\n  \n    equals(transformedPoint.x, p.x, \"Point should remain the same\")\n    equals(transformedPoint.y, p.y, \"Point should remain the same\")\n  \n  test \"#scale (about a point)\", ->\n    p = Point(3, 11)\n  \n    transformedPoint = Matrix.IDENTITY.scale(3, 7, p).transformPoint(p)\n  \n    equals(transformedPoint.x, p.x, \"Point should remain the same\")\n    equals(transformedPoint.y, p.y, \"Point should remain the same\")\n  \n  test \"#skew\", ->\n    matrix = Matrix()\n\n    angle = 0.25 * Math.PI\n  \n    matrix = matrix.skew(angle, 0)\n  \n    equals matrix.c, Math.tan(angle)\n  \n  test \".rotation\", ->\n    matrix = Matrix.rotation(Math.PI / 2)\n  \n    equalEnough(matrix.a, 0, TOLERANCE)\n    equalEnough(matrix.b, 1, TOLERANCE)\n    equalEnough(matrix.c,-1, TOLERANCE)\n    equalEnough(matrix.d, 0, TOLERANCE)\n  \n  test \".rotation (about a point)\", ->\n    p = Point(11, 7)\n  \n    transformedPoint = Matrix.rotation(Math.PI / 2, p).transformPoint(p)\n  \n    equals transformedPoint.x, p.x, \"Point should remain the same\"\n    equals transformedPoint.y, p.y, \"Point should remain the same\"\n  \n  test \"#rotate (about a point)\", ->\n    p = Point(8, 5);\n  \n    transformedPoint = Matrix.IDENTITY.rotate(Math.PI / 2, p).transformPoint(p)\n  \n    equals transformedPoint.x, p.x, \"Point should remain the same\"\n    equals transformedPoint.y, p.y, \"Point should remain the same\"\n  \n  test \"#inverse (Identity)\", ->\n    matrix = Matrix().inverse()\n  \n    equals(matrix.a, 1, \"a\")\n    equals(matrix.b, 0, \"b\")\n    equals(matrix.c, 0, \"c\")\n    equals(matrix.d, 1, \"d\")\n    equals(matrix.tx, 0, \"tx\")\n    equals(matrix.ty, 0, \"ty\")\n  \n  test \"#concat\", ->\n    matrix = Matrix.rotation(Math.PI / 2).concat(Matrix.rotation(-Math.PI / 2))\n  \n    matrixEqual(matrix, Matrix.IDENTITY)\n  \n  test \"#toString\", ->\n    matrix = Matrix(0.5, 2, 0.5, -2, 3, 4.5)\n    matrixEqual eval(matrix.toString()), matrix\n  \n  test \"Maths\", ->\n    a = Matrix(12, 3, 3, 1, 7, 9)\n    b = Matrix(3, 8, 3, 2, 1, 5)\n  \n    c = a.concat(b)\n  \n    equals(c.a, 60)\n    equals(c.b, 17)\n    equals(c.c, 42)\n    equals(c.d, 11)\n    equals(c.tx, 34)\n    equals(c.ty, 17)\n  \n  test \"Order of transformations should match manual concat\", ->\n    tx = 10\n    ty = 5\n    theta = Math.PI/3\n    s = 2\n  \n    m1 = Matrix().translate(tx, ty).scale(s).rotate(theta)\n    m2 = Matrix().concat(Matrix.translation(tx, ty)).concat(Matrix.scale(s)).concat(Matrix.rotation(theta))\n  \n    matrixEqual(m1, m2)\n  \n  test \"IDENTITY is immutable\", ->\n    identity = Matrix.IDENTITY\n  \n    identity.a = 5\n  \n    equals identity.a, 1\n",
                  "type": "blob"
                },
                "point.coffee.md": {
                  "path": "point.coffee.md",
                  "mode": "100644",
                  "content": "Point\n=====\n\nA very simple Point object constructor.\n\n    module.exports = (x, y) ->\n      x: x\n      y: y\n",
                  "type": "blob"
                }
              },
              "distribution": {
                "matrix": {
                  "path": "matrix",
                  "content": "(function() {\n  var Matrix, frozen, isObject;\n\n  Matrix = function(a, b, c, d, tx, ty) {\n    var _ref;\n    if (isObject(a)) {\n      _ref = a, a = _ref.a, b = _ref.b, c = _ref.c, d = _ref.d, tx = _ref.tx, ty = _ref.ty;\n    }\n    return {\n      __proto__: Matrix.prototype,\n      a: a != null ? a : 1,\n      b: b != null ? b : 0,\n      c: c != null ? c : 0,\n      d: d != null ? d : 1,\n      tx: tx != null ? tx : 0,\n      ty: ty != null ? ty : 0\n    };\n  };\n\n  Matrix.Point = require(\"./point\");\n\n  Matrix.prototype = {\n    concat: function(matrix) {\n      return Matrix(this.a * matrix.a + this.c * matrix.b, this.b * matrix.a + this.d * matrix.b, this.a * matrix.c + this.c * matrix.d, this.b * matrix.c + this.d * matrix.d, this.a * matrix.tx + this.c * matrix.ty + this.tx, this.b * matrix.tx + this.d * matrix.ty + this.ty);\n    },\n    copy: function() {\n      return Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\n    },\n    deltaTransformPoint: function(point) {\n      return Matrix.Point(this.a * point.x + this.c * point.y, this.b * point.x + this.d * point.y);\n    },\n    inverse: function() {\n      var determinant;\n      determinant = this.a * this.d - this.b * this.c;\n      return Matrix(this.d / determinant, -this.b / determinant, -this.c / determinant, this.a / determinant, (this.c * this.ty - this.d * this.tx) / determinant, (this.b * this.tx - this.a * this.ty) / determinant);\n    },\n    rotate: function(theta, aboutPoint) {\n      return this.concat(Matrix.rotation(theta, aboutPoint));\n    },\n    scale: function(sx, sy, aboutPoint) {\n      return this.concat(Matrix.scale(sx, sy, aboutPoint));\n    },\n    skew: function(skewX, skewY) {\n      return this.concat(Matrix.skew(skewX, skewY));\n    },\n    toString: function() {\n      return \"Matrix(\" + this.a + \", \" + this.b + \", \" + this.c + \", \" + this.d + \", \" + this.tx + \", \" + this.ty + \")\";\n    },\n    transformPoint: function(point) {\n      return Matrix.Point(this.a * point.x + this.c * point.y + this.tx, this.b * point.x + this.d * point.y + this.ty);\n    },\n    translate: function(tx, ty) {\n      return this.concat(Matrix.translation(tx, ty));\n    }\n  };\n\n  Matrix.rotate = Matrix.rotation = function(theta, aboutPoint) {\n    var rotationMatrix;\n    rotationMatrix = Matrix(Math.cos(theta), Math.sin(theta), -Math.sin(theta), Math.cos(theta));\n    if (aboutPoint != null) {\n      rotationMatrix = Matrix.translation(aboutPoint.x, aboutPoint.y).concat(rotationMatrix).concat(Matrix.translation(-aboutPoint.x, -aboutPoint.y));\n    }\n    return rotationMatrix;\n  };\n\n  Matrix.scale = function(sx, sy, aboutPoint) {\n    var scaleMatrix;\n    sy = sy || sx;\n    scaleMatrix = Matrix(sx, 0, 0, sy);\n    if (aboutPoint) {\n      scaleMatrix = Matrix.translation(aboutPoint.x, aboutPoint.y).concat(scaleMatrix).concat(Matrix.translation(-aboutPoint.x, -aboutPoint.y));\n    }\n    return scaleMatrix;\n  };\n\n  Matrix.skew = function(skewX, skewY) {\n    return Matrix(0, Math.tan(skewY), Math.tan(skewX), 0);\n  };\n\n  Matrix.translate = Matrix.translation = function(tx, ty) {\n    return Matrix(1, 0, 0, 1, tx, ty);\n  };\n\n  isObject = function(object) {\n    return Object.prototype.toString.call(object) === \"[object Object]\";\n  };\n\n  frozen = function(object) {\n    if (typeof Object.freeze === \"function\") {\n      Object.freeze(object);\n    }\n    return object;\n  };\n\n  Matrix.IDENTITY = frozen(Matrix());\n\n  Matrix.HORIZONTAL_FLIP = frozen(Matrix(-1, 0, 0, 1));\n\n  Matrix.VERTICAL_FLIP = frozen(Matrix(1, 0, 0, -1));\n\n  module.exports = Matrix;\n\n}).call(this);\n\n//# sourceURL=matrix.coffee",
                  "type": "blob"
                },
                "pixie": {
                  "path": "pixie",
                  "content": "module.exports = {\"version\":\"0.3.1\",\"entryPoint\":\"matrix\"};",
                  "type": "blob"
                },
                "test/matrix": {
                  "path": "test/matrix",
                  "content": "(function() {\n  var Matrix, Point, equals, ok, test;\n\n  Matrix = require(\"../matrix\");\n\n  Point = require(\"../point\");\n\n  ok = assert;\n\n  equals = assert.equal;\n\n  test = it;\n\n  describe(\"Matrix\", function() {\n    var TOLERANCE, equalEnough, matrixEqual;\n    TOLERANCE = 0.00001;\n    equalEnough = function(expected, actual, tolerance, message) {\n      message || (message = \"\" + expected + \" within \" + tolerance + \" of \" + actual);\n      return ok(expected + tolerance >= actual && expected - tolerance <= actual, message);\n    };\n    matrixEqual = function(m1, m2) {\n      equalEnough(m1.a, m2.a, TOLERANCE);\n      equalEnough(m1.b, m2.b, TOLERANCE);\n      equalEnough(m1.c, m2.c, TOLERANCE);\n      equalEnough(m1.d, m2.d, TOLERANCE);\n      equalEnough(m1.tx, m2.tx, TOLERANCE);\n      return equalEnough(m1.ty, m2.ty, TOLERANCE);\n    };\n    test(\"copy constructor\", function() {\n      var matrix, matrix2;\n      matrix = Matrix(1, 0, 0, 1, 10, 12);\n      matrix2 = Matrix(matrix);\n      ok(matrix !== matrix2);\n      return matrixEqual(matrix2, matrix);\n    });\n    test(\"Matrix() (Identity)\", function() {\n      var matrix;\n      matrix = Matrix();\n      equals(matrix.a, 1, \"a\");\n      equals(matrix.b, 0, \"b\");\n      equals(matrix.c, 0, \"c\");\n      equals(matrix.d, 1, \"d\");\n      equals(matrix.tx, 0, \"tx\");\n      equals(matrix.ty, 0, \"ty\");\n      return matrixEqual(matrix, Matrix.IDENTITY);\n    });\n    test(\"Empty\", function() {\n      var matrix;\n      matrix = Matrix(0, 0, 0, 0, 0, 0);\n      equals(matrix.a, 0, \"a\");\n      equals(matrix.b, 0, \"b\");\n      equals(matrix.c, 0, \"c\");\n      equals(matrix.d, 0, \"d\");\n      equals(matrix.tx, 0, \"tx\");\n      return equals(matrix.ty, 0, \"ty\");\n    });\n    test(\"#copy\", function() {\n      var copyMatrix, matrix;\n      matrix = Matrix(2, 0, 0, 2);\n      copyMatrix = matrix.copy();\n      matrixEqual(copyMatrix, matrix);\n      copyMatrix.a = 4;\n      equals(copyMatrix.a, 4);\n      return equals(matrix.a, 2, \"Old 'a' value is unchanged\");\n    });\n    test(\".scale\", function() {\n      var matrix;\n      matrix = Matrix.scale(2, 2);\n      equals(matrix.a, 2, \"a\");\n      equals(matrix.b, 0, \"b\");\n      equals(matrix.c, 0, \"c\");\n      equals(matrix.d, 2, \"d\");\n      matrix = Matrix.scale(3);\n      equals(matrix.a, 3, \"a\");\n      equals(matrix.b, 0, \"b\");\n      equals(matrix.c, 0, \"c\");\n      return equals(matrix.d, 3, \"d\");\n    });\n    test(\".scale (about a point)\", function() {\n      var p, transformedPoint;\n      p = Point(5, 17);\n      transformedPoint = Matrix.scale(3, 7, p).transformPoint(p);\n      equals(transformedPoint.x, p.x, \"Point should remain the same\");\n      return equals(transformedPoint.y, p.y, \"Point should remain the same\");\n    });\n    test(\"#scale (about a point)\", function() {\n      var p, transformedPoint;\n      p = Point(3, 11);\n      transformedPoint = Matrix.IDENTITY.scale(3, 7, p).transformPoint(p);\n      equals(transformedPoint.x, p.x, \"Point should remain the same\");\n      return equals(transformedPoint.y, p.y, \"Point should remain the same\");\n    });\n    test(\"#skew\", function() {\n      var angle, matrix;\n      matrix = Matrix();\n      angle = 0.25 * Math.PI;\n      matrix = matrix.skew(angle, 0);\n      return equals(matrix.c, Math.tan(angle));\n    });\n    test(\".rotation\", function() {\n      var matrix;\n      matrix = Matrix.rotation(Math.PI / 2);\n      equalEnough(matrix.a, 0, TOLERANCE);\n      equalEnough(matrix.b, 1, TOLERANCE);\n      equalEnough(matrix.c, -1, TOLERANCE);\n      return equalEnough(matrix.d, 0, TOLERANCE);\n    });\n    test(\".rotation (about a point)\", function() {\n      var p, transformedPoint;\n      p = Point(11, 7);\n      transformedPoint = Matrix.rotation(Math.PI / 2, p).transformPoint(p);\n      equals(transformedPoint.x, p.x, \"Point should remain the same\");\n      return equals(transformedPoint.y, p.y, \"Point should remain the same\");\n    });\n    test(\"#rotate (about a point)\", function() {\n      var p, transformedPoint;\n      p = Point(8, 5);\n      transformedPoint = Matrix.IDENTITY.rotate(Math.PI / 2, p).transformPoint(p);\n      equals(transformedPoint.x, p.x, \"Point should remain the same\");\n      return equals(transformedPoint.y, p.y, \"Point should remain the same\");\n    });\n    test(\"#inverse (Identity)\", function() {\n      var matrix;\n      matrix = Matrix().inverse();\n      equals(matrix.a, 1, \"a\");\n      equals(matrix.b, 0, \"b\");\n      equals(matrix.c, 0, \"c\");\n      equals(matrix.d, 1, \"d\");\n      equals(matrix.tx, 0, \"tx\");\n      return equals(matrix.ty, 0, \"ty\");\n    });\n    test(\"#concat\", function() {\n      var matrix;\n      matrix = Matrix.rotation(Math.PI / 2).concat(Matrix.rotation(-Math.PI / 2));\n      return matrixEqual(matrix, Matrix.IDENTITY);\n    });\n    test(\"#toString\", function() {\n      var matrix;\n      matrix = Matrix(0.5, 2, 0.5, -2, 3, 4.5);\n      return matrixEqual(eval(matrix.toString()), matrix);\n    });\n    test(\"Maths\", function() {\n      var a, b, c;\n      a = Matrix(12, 3, 3, 1, 7, 9);\n      b = Matrix(3, 8, 3, 2, 1, 5);\n      c = a.concat(b);\n      equals(c.a, 60);\n      equals(c.b, 17);\n      equals(c.c, 42);\n      equals(c.d, 11);\n      equals(c.tx, 34);\n      return equals(c.ty, 17);\n    });\n    test(\"Order of transformations should match manual concat\", function() {\n      var m1, m2, s, theta, tx, ty;\n      tx = 10;\n      ty = 5;\n      theta = Math.PI / 3;\n      s = 2;\n      m1 = Matrix().translate(tx, ty).scale(s).rotate(theta);\n      m2 = Matrix().concat(Matrix.translation(tx, ty)).concat(Matrix.scale(s)).concat(Matrix.rotation(theta));\n      return matrixEqual(m1, m2);\n    });\n    return test(\"IDENTITY is immutable\", function() {\n      var identity;\n      identity = Matrix.IDENTITY;\n      identity.a = 5;\n      return equals(identity.a, 1);\n    });\n  });\n\n}).call(this);\n\n//# sourceURL=test/matrix.coffee",
                  "type": "blob"
                },
                "point": {
                  "path": "point",
                  "content": "(function() {\n  module.exports = function(x, y) {\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n}).call(this);\n\n//# sourceURL=point.coffee",
                  "type": "blob"
                }
              },
              "progenitor": {
                "url": "http://strd6.github.io/editor/"
              },
              "version": "0.3.1",
              "entryPoint": "matrix",
              "repository": {
                "id": 13551996,
                "name": "matrix",
                "full_name": "distri/matrix",
                "owner": {
                  "login": "distri",
                  "id": 6005125,
                  "avatar_url": "https://identicons.github.com/f90c81ffc1498e260c820082f2e7ca5f.png",
                  "gravatar_id": null,
                  "url": "https://api.github.com/users/distri",
                  "html_url": "https://github.com/distri",
                  "followers_url": "https://api.github.com/users/distri/followers",
                  "following_url": "https://api.github.com/users/distri/following{/other_user}",
                  "gists_url": "https://api.github.com/users/distri/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/distri/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/distri/subscriptions",
                  "organizations_url": "https://api.github.com/users/distri/orgs",
                  "repos_url": "https://api.github.com/users/distri/repos",
                  "events_url": "https://api.github.com/users/distri/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/distri/received_events",
                  "type": "Organization",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/distri/matrix",
                "description": "Where matrices become heroes, together.",
                "fork": false,
                "url": "https://api.github.com/repos/distri/matrix",
                "forks_url": "https://api.github.com/repos/distri/matrix/forks",
                "keys_url": "https://api.github.com/repos/distri/matrix/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/distri/matrix/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/distri/matrix/teams",
                "hooks_url": "https://api.github.com/repos/distri/matrix/hooks",
                "issue_events_url": "https://api.github.com/repos/distri/matrix/issues/events{/number}",
                "events_url": "https://api.github.com/repos/distri/matrix/events",
                "assignees_url": "https://api.github.com/repos/distri/matrix/assignees{/user}",
                "branches_url": "https://api.github.com/repos/distri/matrix/branches{/branch}",
                "tags_url": "https://api.github.com/repos/distri/matrix/tags",
                "blobs_url": "https://api.github.com/repos/distri/matrix/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/distri/matrix/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/distri/matrix/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/distri/matrix/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/distri/matrix/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/distri/matrix/languages",
                "stargazers_url": "https://api.github.com/repos/distri/matrix/stargazers",
                "contributors_url": "https://api.github.com/repos/distri/matrix/contributors",
                "subscribers_url": "https://api.github.com/repos/distri/matrix/subscribers",
                "subscription_url": "https://api.github.com/repos/distri/matrix/subscription",
                "commits_url": "https://api.github.com/repos/distri/matrix/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/distri/matrix/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/distri/matrix/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/distri/matrix/issues/comments/{number}",
                "contents_url": "https://api.github.com/repos/distri/matrix/contents/{+path}",
                "compare_url": "https://api.github.com/repos/distri/matrix/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/distri/matrix/merges",
                "archive_url": "https://api.github.com/repos/distri/matrix/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/distri/matrix/downloads",
                "issues_url": "https://api.github.com/repos/distri/matrix/issues{/number}",
                "pulls_url": "https://api.github.com/repos/distri/matrix/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/distri/matrix/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/distri/matrix/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/distri/matrix/labels{/name}",
                "releases_url": "https://api.github.com/repos/distri/matrix/releases{/id}",
                "created_at": "2013-10-14T03:46:16Z",
                "updated_at": "2013-12-23T23:45:28Z",
                "pushed_at": "2013-10-15T00:22:51Z",
                "git_url": "git://github.com/distri/matrix.git",
                "ssh_url": "git@github.com:distri/matrix.git",
                "clone_url": "https://github.com/distri/matrix.git",
                "svn_url": "https://github.com/distri/matrix",
                "homepage": null,
                "size": 580,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": "CoffeeScript",
                "has_issues": true,
                "has_downloads": true,
                "has_wiki": true,
                "forks_count": 0,
                "mirror_url": null,
                "open_issues_count": 0,
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "master_branch": "master",
                "permissions": {
                  "admin": true,
                  "push": true,
                  "pull": true
                },
                "organization": {
                  "login": "distri",
                  "id": 6005125,
                  "avatar_url": "https://identicons.github.com/f90c81ffc1498e260c820082f2e7ca5f.png",
                  "gravatar_id": null,
                  "url": "https://api.github.com/users/distri",
                  "html_url": "https://github.com/distri",
                  "followers_url": "https://api.github.com/users/distri/followers",
                  "following_url": "https://api.github.com/users/distri/following{/other_user}",
                  "gists_url": "https://api.github.com/users/distri/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/distri/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/distri/subscriptions",
                  "organizations_url": "https://api.github.com/users/distri/orgs",
                  "repos_url": "https://api.github.com/users/distri/repos",
                  "events_url": "https://api.github.com/users/distri/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/distri/received_events",
                  "type": "Organization",
                  "site_admin": false
                },
                "network_count": 0,
                "subscribers_count": 1,
                "branch": "v0.3.1",
                "defaultBranch": "master"
              },
              "dependencies": {}
            },
            "random": {
              "source": {
                "LICENSE": {
                  "path": "LICENSE",
                  "mode": "100644",
                  "content": "The MIT License (MIT)\n\nCopyright (c) 2013 Daniel X Moore\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
                  "type": "blob"
                },
                "README.md": {
                  "path": "README.md",
                  "mode": "100644",
                  "content": "random\n======\n\nRandom generation.\n",
                  "type": "blob"
                },
                "pixie.cson": {
                  "path": "pixie.cson",
                  "mode": "100644",
                  "content": "version: \"0.2.0\"\nentryPoint: \"random\"\n",
                  "type": "blob"
                },
                "random.coffee.md": {
                  "path": "random.coffee.md",
                  "mode": "100644",
                  "content": "Random\n======\n\nSome useful methods for generating random things.\n\nHelpers\n-------\n\n`τ` is the circle constant.\n\n    τ = 2 * Math.PI\n\n`U` returns a continuous uniform distribution between `min` and `max`.\n\n    U = (min, max) ->\n      ->\n        Math.random() * (max - min) + min\n\n`standardUniformDistribution` is the uniform distribution between [0, 1]\n\n    standardUniformDistribution = U(0, 1)\n\n`rand` is a helpful shortcut for generating random numbers from a standard\nuniform distribution or from a discreet set of integers.\n\n    rand = (n) ->\n      if n\n        Math.floor(n * standardUniformDistribution())\n      else\n        standardUniformDistribution()\n\nMethods\n-------\n\n    module.exports = Random =\n\nReturns a random angle, uniformly distributed, between 0 and τ.\n\n      angle: ->\n        rand() * τ\n\nA binomial distribution.\n\n      binomial: (n=1, p=0.5) ->\n        [0...n].map ->\n          if rand() < p\n            1\n          else\n            0\n        .reduce (a, b) ->\n          a + b\n        , 0\n\nReturns a random float between two numbers.\n\n      between: (min, max) ->\n        rand() * (max - min) + min\n\nReturns random integers from [0, n) if n is given.\nOtherwise returns random float between 0 and 1.\n\n      rand: rand\n\nReturns random float from [-n / 2, n / 2] if n is given.\nOtherwise returns random float between -0.5 and 0.5.\n\n      signed: (n=1) ->\n        (n * rand()) - (n / 2)\n",
                  "type": "blob"
                },
                "test/random.coffee": {
                  "path": "test/random.coffee",
                  "mode": "100644",
                  "content": "Random = require \"../random\"\n\nok = assert\nequals = assert.equal\ntest = it\n\ndescribe \"Random\", ->\n  \n  test \"methods\", ->\n    [\n      \"angle\"\n      \"binomial\"\n      \"between\"\n      \"rand\"\n      \"signed\"\n    ].forEach (name) ->\n      ok(Random[name], name)\n\n  it \"should have binomial\", ->\n    result = Random.binomial()\n\n    assert result is 1 or result is 0\n",
                  "type": "blob"
                }
              },
              "distribution": {
                "pixie": {
                  "path": "pixie",
                  "content": "module.exports = {\"version\":\"0.2.0\",\"entryPoint\":\"random\"};",
                  "type": "blob"
                },
                "random": {
                  "path": "random",
                  "content": "(function() {\n  var Random, U, rand, standardUniformDistribution, τ;\n\n  τ = 2 * Math.PI;\n\n  U = function(min, max) {\n    return function() {\n      return Math.random() * (max - min) + min;\n    };\n  };\n\n  standardUniformDistribution = U(0, 1);\n\n  rand = function(n) {\n    if (n) {\n      return Math.floor(n * standardUniformDistribution());\n    } else {\n      return standardUniformDistribution();\n    }\n  };\n\n  module.exports = Random = {\n    angle: function() {\n      return rand() * τ;\n    },\n    binomial: function(n, p) {\n      var _i, _results;\n      if (n == null) {\n        n = 1;\n      }\n      if (p == null) {\n        p = 0.5;\n      }\n      return (function() {\n        _results = [];\n        for (var _i = 0; 0 <= n ? _i < n : _i > n; 0 <= n ? _i++ : _i--){ _results.push(_i); }\n        return _results;\n      }).apply(this).map(function() {\n        if (rand() < p) {\n          return 1;\n        } else {\n          return 0;\n        }\n      }).reduce(function(a, b) {\n        return a + b;\n      }, 0);\n    },\n    between: function(min, max) {\n      return rand() * (max - min) + min;\n    },\n    rand: rand,\n    signed: function(n) {\n      if (n == null) {\n        n = 1;\n      }\n      return (n * rand()) - (n / 2);\n    }\n  };\n\n}).call(this);\n\n//# sourceURL=random.coffee",
                  "type": "blob"
                },
                "test/random": {
                  "path": "test/random",
                  "content": "(function() {\n  var Random, equals, ok, test;\n\n  Random = require(\"../random\");\n\n  ok = assert;\n\n  equals = assert.equal;\n\n  test = it;\n\n  describe(\"Random\", function() {\n    test(\"methods\", function() {\n      return [\"angle\", \"binomial\", \"between\", \"rand\", \"signed\"].forEach(function(name) {\n        return ok(Random[name], name);\n      });\n    });\n    return it(\"should have binomial\", function() {\n      var result;\n      result = Random.binomial();\n      return assert(result === 1 || result === 0);\n    });\n  });\n\n}).call(this);\n\n//# sourceURL=test/random.coffee",
                  "type": "blob"
                }
              },
              "progenitor": {
                "url": "http://strd6.github.io/editor/"
              },
              "version": "0.2.0",
              "entryPoint": "random",
              "repository": {
                "id": 13576812,
                "name": "random",
                "full_name": "distri/random",
                "owner": {
                  "login": "distri",
                  "id": 6005125,
                  "avatar_url": "https://identicons.github.com/f90c81ffc1498e260c820082f2e7ca5f.png",
                  "gravatar_id": null,
                  "url": "https://api.github.com/users/distri",
                  "html_url": "https://github.com/distri",
                  "followers_url": "https://api.github.com/users/distri/followers",
                  "following_url": "https://api.github.com/users/distri/following{/other_user}",
                  "gists_url": "https://api.github.com/users/distri/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/distri/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/distri/subscriptions",
                  "organizations_url": "https://api.github.com/users/distri/orgs",
                  "repos_url": "https://api.github.com/users/distri/repos",
                  "events_url": "https://api.github.com/users/distri/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/distri/received_events",
                  "type": "Organization",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/distri/random",
                "description": "Random generation.",
                "fork": false,
                "url": "https://api.github.com/repos/distri/random",
                "forks_url": "https://api.github.com/repos/distri/random/forks",
                "keys_url": "https://api.github.com/repos/distri/random/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/distri/random/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/distri/random/teams",
                "hooks_url": "https://api.github.com/repos/distri/random/hooks",
                "issue_events_url": "https://api.github.com/repos/distri/random/issues/events{/number}",
                "events_url": "https://api.github.com/repos/distri/random/events",
                "assignees_url": "https://api.github.com/repos/distri/random/assignees{/user}",
                "branches_url": "https://api.github.com/repos/distri/random/branches{/branch}",
                "tags_url": "https://api.github.com/repos/distri/random/tags",
                "blobs_url": "https://api.github.com/repos/distri/random/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/distri/random/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/distri/random/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/distri/random/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/distri/random/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/distri/random/languages",
                "stargazers_url": "https://api.github.com/repos/distri/random/stargazers",
                "contributors_url": "https://api.github.com/repos/distri/random/contributors",
                "subscribers_url": "https://api.github.com/repos/distri/random/subscribers",
                "subscription_url": "https://api.github.com/repos/distri/random/subscription",
                "commits_url": "https://api.github.com/repos/distri/random/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/distri/random/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/distri/random/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/distri/random/issues/comments/{number}",
                "contents_url": "https://api.github.com/repos/distri/random/contents/{+path}",
                "compare_url": "https://api.github.com/repos/distri/random/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/distri/random/merges",
                "archive_url": "https://api.github.com/repos/distri/random/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/distri/random/downloads",
                "issues_url": "https://api.github.com/repos/distri/random/issues{/number}",
                "pulls_url": "https://api.github.com/repos/distri/random/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/distri/random/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/distri/random/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/distri/random/labels{/name}",
                "releases_url": "https://api.github.com/repos/distri/random/releases{/id}",
                "created_at": "2013-10-15T00:28:31Z",
                "updated_at": "2013-12-06T23:31:24Z",
                "pushed_at": "2013-10-15T01:01:00Z",
                "git_url": "git://github.com/distri/random.git",
                "ssh_url": "git@github.com:distri/random.git",
                "clone_url": "https://github.com/distri/random.git",
                "svn_url": "https://github.com/distri/random",
                "homepage": null,
                "size": 292,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": "CoffeeScript",
                "has_issues": true,
                "has_downloads": true,
                "has_wiki": true,
                "forks_count": 0,
                "mirror_url": null,
                "open_issues_count": 0,
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "master_branch": "master",
                "permissions": {
                  "admin": true,
                  "push": true,
                  "pull": true
                },
                "organization": {
                  "login": "distri",
                  "id": 6005125,
                  "avatar_url": "https://identicons.github.com/f90c81ffc1498e260c820082f2e7ca5f.png",
                  "gravatar_id": null,
                  "url": "https://api.github.com/users/distri",
                  "html_url": "https://github.com/distri",
                  "followers_url": "https://api.github.com/users/distri/followers",
                  "following_url": "https://api.github.com/users/distri/following{/other_user}",
                  "gists_url": "https://api.github.com/users/distri/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/distri/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/distri/subscriptions",
                  "organizations_url": "https://api.github.com/users/distri/orgs",
                  "repos_url": "https://api.github.com/users/distri/repos",
                  "events_url": "https://api.github.com/users/distri/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/distri/received_events",
                  "type": "Organization",
                  "site_admin": false
                },
                "network_count": 0,
                "subscribers_count": 1,
                "branch": "v0.2.0",
                "defaultBranch": "master"
              },
              "dependencies": {}
            },
            "size": {
              "source": {
                "LICENSE": {
                  "path": "LICENSE",
                  "content": "The MIT License (MIT)\n\nCopyright (c) 2014 \n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
                  "mode": "100644",
                  "type": "blob"
                },
                "README.md": {
                  "path": "README.md",
                  "content": "size\n====\n\n2d extent\n",
                  "mode": "100644",
                  "type": "blob"
                },
                "main.coffee.md": {
                  "path": "main.coffee.md",
                  "content": "Size\n====\n\nA simple 2d extent.\n\n    Size = (width, height) ->\n      if Array.isArray(width)\n        [width, height] = width\n      else if typeof width is \"object\"\n        {width, height} = width\n\n      width: width\n      height: height\n      __proto__: Size.prototype\n\n    Size.prototype =\n      copy: ->\n        Size(this)\n\n      scale: (scalar) ->\n        Size(@width * scalar, @height * scalar)\n\n      toString: ->\n        \"Size(#{@width}, #{@height})\"\n\n      max: (otherSize) ->\n        Size(\n          Math.max(@width, otherSize.width)\n          Math.max(@height, otherSize.height)\n        )\n\n      each: (iterator) ->\n        [0...@height].forEach (y) =>\n          [0...@width].forEach (x) ->\n            iterator(x, y)\n\n      inverse: ->\n        Size(1/@width, 1/@height)\n\n    module.exports = Size\n",
                  "mode": "100644",
                  "type": "blob"
                },
                "pixie.cson": {
                  "path": "pixie.cson",
                  "content": "version: \"0.1.4\"\n",
                  "mode": "100644",
                  "type": "blob"
                },
                "test/test.coffee": {
                  "path": "test/test.coffee",
                  "content": "Size = require \"../main\"\n\ndescribe \"Size\", ->\n  it \"should have a width and height\", ->\n    size = Size(10, 10)\n\n    assert.equal size.width, 10\n    assert.equal size.height, 10\n\n  it \"should be createable from an array\", ->\n    size = Size [5, 4]\n\n    assert.equal size.width, 5\n    assert.equal size.height, 4\n\n  it \"should be createable from an object\", ->\n    size = Size\n      width: 6\n      height: 7\n\n    assert.equal size.width, 6\n    assert.equal size.height, 7\n\n  it \"should iterate\", ->\n    size = Size(4, 5)\n    total = 0\n\n    size.each (x, y) ->\n      total += 1\n\n    assert.equal total, 20\n\n  it \"should have no iterations when empty\", ->\n    size = Size(0, 0)\n    total = 0\n\n    size.each (x, y) ->\n      total += 1\n\n    assert.equal total, 0\n",
                  "mode": "100644",
                  "type": "blob"
                }
              },
              "distribution": {
                "main": {
                  "path": "main",
                  "content": "(function() {\n  var Size;\n\n  Size = function(width, height) {\n    var _ref, _ref1;\n    if (Array.isArray(width)) {\n      _ref = width, width = _ref[0], height = _ref[1];\n    } else if (typeof width === \"object\") {\n      _ref1 = width, width = _ref1.width, height = _ref1.height;\n    }\n    return {\n      width: width,\n      height: height,\n      __proto__: Size.prototype\n    };\n  };\n\n  Size.prototype = {\n    copy: function() {\n      return Size(this);\n    },\n    scale: function(scalar) {\n      return Size(this.width * scalar, this.height * scalar);\n    },\n    toString: function() {\n      return \"Size(\" + this.width + \", \" + this.height + \")\";\n    },\n    max: function(otherSize) {\n      return Size(Math.max(this.width, otherSize.width), Math.max(this.height, otherSize.height));\n    },\n    each: function(iterator) {\n      var _i, _ref, _results;\n      return (function() {\n        _results = [];\n        for (var _i = 0, _ref = this.height; 0 <= _ref ? _i < _ref : _i > _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }\n        return _results;\n      }).apply(this).forEach((function(_this) {\n        return function(y) {\n          var _i, _ref, _results;\n          return (function() {\n            _results = [];\n            for (var _i = 0, _ref = _this.width; 0 <= _ref ? _i < _ref : _i > _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }\n            return _results;\n          }).apply(this).forEach(function(x) {\n            return iterator(x, y);\n          });\n        };\n      })(this));\n    },\n    inverse: function() {\n      return Size(1 / this.width, 1 / this.height);\n    }\n  };\n\n  module.exports = Size;\n\n}).call(this);\n",
                  "type": "blob"
                },
                "pixie": {
                  "path": "pixie",
                  "content": "module.exports = {\"version\":\"0.1.4\"};",
                  "type": "blob"
                },
                "test/test": {
                  "path": "test/test",
                  "content": "(function() {\n  var Size;\n\n  Size = require(\"../main\");\n\n  describe(\"Size\", function() {\n    it(\"should have a width and height\", function() {\n      var size;\n      size = Size(10, 10);\n      assert.equal(size.width, 10);\n      return assert.equal(size.height, 10);\n    });\n    it(\"should be createable from an array\", function() {\n      var size;\n      size = Size([5, 4]);\n      assert.equal(size.width, 5);\n      return assert.equal(size.height, 4);\n    });\n    it(\"should be createable from an object\", function() {\n      var size;\n      size = Size({\n        width: 6,\n        height: 7\n      });\n      assert.equal(size.width, 6);\n      return assert.equal(size.height, 7);\n    });\n    it(\"should iterate\", function() {\n      var size, total;\n      size = Size(4, 5);\n      total = 0;\n      size.each(function(x, y) {\n        return total += 1;\n      });\n      return assert.equal(total, 20);\n    });\n    return it(\"should have no iterations when empty\", function() {\n      var size, total;\n      size = Size(0, 0);\n      total = 0;\n      size.each(function(x, y) {\n        return total += 1;\n      });\n      return assert.equal(total, 0);\n    });\n  });\n\n}).call(this);\n",
                  "type": "blob"
                }
              },
              "progenitor": {
                "url": "http://www.danielx.net/editor/"
              },
              "version": "0.1.4",
              "entryPoint": "main",
              "repository": {
                "branch": "v0.1.4",
                "default_branch": "master",
                "full_name": "distri/size",
                "homepage": null,
                "description": "2d extent",
                "html_url": "https://github.com/distri/size",
                "url": "https://api.github.com/repos/distri/size",
                "publishBranch": "gh-pages"
              },
              "dependencies": {}
            }
          }
        },
        "model": {
          "source": {
            "LICENSE": {
              "path": "LICENSE",
              "content": "The MIT License (MIT)\n\nCopyright (c) 2014 Daniel X Moore\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
              "mode": "100644",
              "type": "blob"
            },
            "main.coffee.md": {
              "path": "main.coffee.md",
              "content": "Model\n=====\n\nThe `Model` module provides helper methods to compose nested data models.\n\nModels uses [Observable](/observable/docs) to keep the internal data in sync.\n\n    Core = require \"core\"\n    Observable = require \"observable\"\n\n    module.exports = (I={}, self=Core(I)) ->\n\n      self.extend\n\nObserve any number of attributes as simple observables. For each attribute name passed in we expose a public getter/setter method and listen to changes when the value is set.\n\n        attrObservable: (names...) ->\n          names.forEach (name) ->\n            self[name] = Observable(I[name])\n\n            self[name].observe (newValue) ->\n              I[name] = newValue\n\n          return self\n\nObserve an attribute as a model. Treats the attribute given as an Observable\nmodel instance exposting a getter/setter method of the same name. The Model\nconstructor must be passed in explicitly.\n\n        attrModel: (name, Model) ->\n          model = Model(I[name])\n\n          self[name] = Observable(model)\n\n          self[name].observe (newValue) ->\n            I[name] = newValue.I\n\n          return self\n\nObserve an attribute as a list of sub-models. This is the same as `attrModel`\nexcept the attribute is expected to be an array of models rather than a single one.\n\n        attrModels: (name, Model) ->\n          models = (I[name] or []).map (x) ->\n            Model(x)\n\n          self[name] = Observable(models)\n\n          self[name].observe (newValue) ->\n            I[name] = newValue.map (instance) ->\n              instance.I\n\n          return self\n\nThe JSON representation is kept up to date via the observable properites and resides in `I`.\n\n        toJSON: ->\n          I\n\nReturn our public object.\n\n      return self\n",
              "mode": "100644",
              "type": "blob"
            },
            "pixie.cson": {
              "path": "pixie.cson",
              "content": "version: \"0.1.3\"\ndependencies:\n  core: \"distri/core:v0.6.0\"\n  observable: \"distri/observable:v0.3.1\"\n",
              "mode": "100644",
              "type": "blob"
            },
            "test/model.coffee": {
              "path": "test/model.coffee",
              "content": "Model = require \"../main\"\n\ndescribe 'Model', ->\n  # Association Testing model\n  Person = (I) ->\n    person = Model(I)\n\n    person.attrAccessor(\n      'firstName'\n      'lastName'\n      'suffix'\n    )\n\n    person.fullName = ->\n      \"#{@firstName()} #{@lastName()} #{@suffix()}\"\n\n    return person\n\n  describe \"#attrObservable\", ->\n    it 'should allow for observing of attributes', ->\n      model = Model\n        name: \"Duder\"\n\n      model.attrObservable \"name\"\n\n      model.name(\"Dudeman\")\n\n      assert.equal model.name(), \"Dudeman\"\n\n    it 'should bind properties to observable attributes', ->\n      model = Model\n        name: \"Duder\"\n\n      model.attrObservable \"name\"\n\n      model.name(\"Dudeman\")\n\n      assert.equal model.name(), \"Dudeman\"\n      assert.equal model.name(), model.I.name\n\n  describe \"#attrModel\", ->\n    it \"should be a model instance\", ->\n      model = Model\n        person:\n          firstName: \"Duder\"\n          lastName: \"Mannington\"\n          suffix: \"Jr.\"\n\n      model.attrModel(\"person\", Person)\n\n      assert.equal model.person().fullName(), \"Duder Mannington Jr.\"\n\n    it \"should allow setting the associated model\", ->\n      model = Model\n        person:\n          firstName: \"Duder\"\n          lastName: \"Mannington\"\n          suffix: \"Jr.\"\n\n      model.attrModel(\"person\", Person)\n\n      otherPerson = Person\n        firstName: \"Mr.\"\n        lastName: \"Man\"\n\n      model.person(otherPerson)\n\n      assert.equal model.person().firstName(), \"Mr.\"\n\n    it \"shouldn't update the instance properties after it's been replaced\", ->\n      model = Model\n        person:\n          firstName: \"Duder\"\n          lastName: \"Mannington\"\n          suffix: \"Jr.\"\n\n      model.attrModel(\"person\", Person)\n\n      duder = model.person()\n\n      otherPerson = Person\n        firstName: \"Mr.\"\n        lastName: \"Man\"\n\n      model.person(otherPerson)\n\n      duder.firstName(\"Joe\")\n\n      assert.equal duder.I.firstName, \"Joe\"\n      assert.equal model.I.person.firstName, \"Mr.\"\n\n  describe \"#attrModels\", ->\n    it \"should have an array of model instances\", ->\n      model = Model\n        people: [{\n          firstName: \"Duder\"\n          lastName: \"Mannington\"\n          suffix: \"Jr.\"\n        }, {\n          firstName: \"Mr.\"\n          lastName: \"Mannington\"\n          suffix: \"Sr.\"\n        }]\n\n      model.attrModels(\"people\", Person)\n\n      assert.equal model.people()[0].fullName(), \"Duder Mannington Jr.\"\n\n    it \"should track pushes\", ->\n      model = Model\n        people: [{\n          firstName: \"Duder\"\n          lastName: \"Mannington\"\n          suffix: \"Jr.\"\n        }, {\n          firstName: \"Mr.\"\n          lastName: \"Mannington\"\n          suffix: \"Sr.\"\n        }]\n\n      model.attrModels(\"people\", Person)\n\n      model.people.push Person\n        firstName: \"JoJo\"\n        lastName: \"Loco\"\n\n      assert.equal model.people().length, 3\n      assert.equal model.I.people.length, 3\n\n    it \"should track pops\", ->\n      model = Model\n        people: [{\n          firstName: \"Duder\"\n          lastName: \"Mannington\"\n          suffix: \"Jr.\"\n        }, {\n          firstName: \"Mr.\"\n          lastName: \"Mannington\"\n          suffix: \"Sr.\"\n        }]\n\n      model.attrModels(\"people\", Person)\n\n      model.people.pop()\n\n      assert.equal model.people().length, 1\n      assert.equal model.I.people.length, 1\n\n  describe \"#toJSON\", ->\n    it \"should return an object appropriate for JSON serialization\", ->\n      model = Model\n        test: true\n\n      assert model.toJSON().test\n\n  describe \"#observeAll\", ->\n    it \"should observe all attributes of a simple model\"\n    ->  # TODO\n      model = Model\n        test: true\n        yolo: \"4life\"\n\n      model.observeAll()\n\n      assert model.test()\n      assert.equal model.yolo(), \"4life\"\n\n    it \"should camel case underscored names\"\n",
              "mode": "100644",
              "type": "blob"
            }
          },
          "distribution": {
            "main": {
              "path": "main",
              "content": "(function() {\n  var Core, Observable,\n    __slice = [].slice;\n\n  Core = require(\"core\");\n\n  Observable = require(\"observable\");\n\n  module.exports = function(I, self) {\n    if (I == null) {\n      I = {};\n    }\n    if (self == null) {\n      self = Core(I);\n    }\n    self.extend({\n      attrObservable: function() {\n        var names;\n        names = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        names.forEach(function(name) {\n          self[name] = Observable(I[name]);\n          return self[name].observe(function(newValue) {\n            return I[name] = newValue;\n          });\n        });\n        return self;\n      },\n      attrModel: function(name, Model) {\n        var model;\n        model = Model(I[name]);\n        self[name] = Observable(model);\n        self[name].observe(function(newValue) {\n          return I[name] = newValue.I;\n        });\n        return self;\n      },\n      attrModels: function(name, Model) {\n        var models;\n        models = (I[name] || []).map(function(x) {\n          return Model(x);\n        });\n        self[name] = Observable(models);\n        self[name].observe(function(newValue) {\n          return I[name] = newValue.map(function(instance) {\n            return instance.I;\n          });\n        });\n        return self;\n      },\n      toJSON: function() {\n        return I;\n      }\n    });\n    return self;\n  };\n\n}).call(this);\n",
              "type": "blob"
            },
            "pixie": {
              "path": "pixie",
              "content": "module.exports = {\"version\":\"0.1.3\",\"dependencies\":{\"core\":\"distri/core:v0.6.0\",\"observable\":\"distri/observable:v0.3.1\"}};",
              "type": "blob"
            },
            "test/model": {
              "path": "test/model",
              "content": "(function() {\n  var Model;\n\n  Model = require(\"../main\");\n\n  describe('Model', function() {\n    var Person;\n    Person = function(I) {\n      var person;\n      person = Model(I);\n      person.attrAccessor('firstName', 'lastName', 'suffix');\n      person.fullName = function() {\n        return \"\" + (this.firstName()) + \" \" + (this.lastName()) + \" \" + (this.suffix());\n      };\n      return person;\n    };\n    describe(\"#attrObservable\", function() {\n      it('should allow for observing of attributes', function() {\n        var model;\n        model = Model({\n          name: \"Duder\"\n        });\n        model.attrObservable(\"name\");\n        model.name(\"Dudeman\");\n        return assert.equal(model.name(), \"Dudeman\");\n      });\n      return it('should bind properties to observable attributes', function() {\n        var model;\n        model = Model({\n          name: \"Duder\"\n        });\n        model.attrObservable(\"name\");\n        model.name(\"Dudeman\");\n        assert.equal(model.name(), \"Dudeman\");\n        return assert.equal(model.name(), model.I.name);\n      });\n    });\n    describe(\"#attrModel\", function() {\n      it(\"should be a model instance\", function() {\n        var model;\n        model = Model({\n          person: {\n            firstName: \"Duder\",\n            lastName: \"Mannington\",\n            suffix: \"Jr.\"\n          }\n        });\n        model.attrModel(\"person\", Person);\n        return assert.equal(model.person().fullName(), \"Duder Mannington Jr.\");\n      });\n      it(\"should allow setting the associated model\", function() {\n        var model, otherPerson;\n        model = Model({\n          person: {\n            firstName: \"Duder\",\n            lastName: \"Mannington\",\n            suffix: \"Jr.\"\n          }\n        });\n        model.attrModel(\"person\", Person);\n        otherPerson = Person({\n          firstName: \"Mr.\",\n          lastName: \"Man\"\n        });\n        model.person(otherPerson);\n        return assert.equal(model.person().firstName(), \"Mr.\");\n      });\n      return it(\"shouldn't update the instance properties after it's been replaced\", function() {\n        var duder, model, otherPerson;\n        model = Model({\n          person: {\n            firstName: \"Duder\",\n            lastName: \"Mannington\",\n            suffix: \"Jr.\"\n          }\n        });\n        model.attrModel(\"person\", Person);\n        duder = model.person();\n        otherPerson = Person({\n          firstName: \"Mr.\",\n          lastName: \"Man\"\n        });\n        model.person(otherPerson);\n        duder.firstName(\"Joe\");\n        assert.equal(duder.I.firstName, \"Joe\");\n        return assert.equal(model.I.person.firstName, \"Mr.\");\n      });\n    });\n    describe(\"#attrModels\", function() {\n      it(\"should have an array of model instances\", function() {\n        var model;\n        model = Model({\n          people: [\n            {\n              firstName: \"Duder\",\n              lastName: \"Mannington\",\n              suffix: \"Jr.\"\n            }, {\n              firstName: \"Mr.\",\n              lastName: \"Mannington\",\n              suffix: \"Sr.\"\n            }\n          ]\n        });\n        model.attrModels(\"people\", Person);\n        return assert.equal(model.people()[0].fullName(), \"Duder Mannington Jr.\");\n      });\n      it(\"should track pushes\", function() {\n        var model;\n        model = Model({\n          people: [\n            {\n              firstName: \"Duder\",\n              lastName: \"Mannington\",\n              suffix: \"Jr.\"\n            }, {\n              firstName: \"Mr.\",\n              lastName: \"Mannington\",\n              suffix: \"Sr.\"\n            }\n          ]\n        });\n        model.attrModels(\"people\", Person);\n        model.people.push(Person({\n          firstName: \"JoJo\",\n          lastName: \"Loco\"\n        }));\n        assert.equal(model.people().length, 3);\n        return assert.equal(model.I.people.length, 3);\n      });\n      return it(\"should track pops\", function() {\n        var model;\n        model = Model({\n          people: [\n            {\n              firstName: \"Duder\",\n              lastName: \"Mannington\",\n              suffix: \"Jr.\"\n            }, {\n              firstName: \"Mr.\",\n              lastName: \"Mannington\",\n              suffix: \"Sr.\"\n            }\n          ]\n        });\n        model.attrModels(\"people\", Person);\n        model.people.pop();\n        assert.equal(model.people().length, 1);\n        return assert.equal(model.I.people.length, 1);\n      });\n    });\n    describe(\"#toJSON\", function() {\n      return it(\"should return an object appropriate for JSON serialization\", function() {\n        var model;\n        model = Model({\n          test: true\n        });\n        return assert(model.toJSON().test);\n      });\n    });\n    return describe(\"#observeAll\", function() {\n      it(\"should observe all attributes of a simple model\");\n      (function() {\n        var model;\n        model = Model({\n          test: true,\n          yolo: \"4life\"\n        });\n        model.observeAll();\n        assert(model.test());\n        return assert.equal(model.yolo(), \"4life\");\n      });\n      return it(\"should camel case underscored names\");\n    });\n  });\n\n}).call(this);\n",
              "type": "blob"
            }
          },
          "progenitor": {
            "url": "http://www.danielx.net/editor/"
          },
          "version": "0.1.3",
          "entryPoint": "main",
          "repository": {
            "branch": "v0.1.3",
            "default_branch": "master",
            "full_name": "distri/model",
            "homepage": null,
            "description": "",
            "html_url": "https://github.com/distri/model",
            "url": "https://api.github.com/repos/distri/model",
            "publishBranch": "gh-pages"
          },
          "dependencies": {
            "core": {
              "source": {
                "LICENSE": {
                  "path": "LICENSE",
                  "mode": "100644",
                  "content": "The MIT License (MIT)\n\nCopyright (c) 2013 Daniel X Moore\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
                  "type": "blob"
                },
                "README.md": {
                  "path": "README.md",
                  "mode": "100644",
                  "content": "core\n====\n\nAn object extension system.\n",
                  "type": "blob"
                },
                "core.coffee.md": {
                  "path": "core.coffee.md",
                  "mode": "100644",
                  "content": "Core\n====\n\nThe Core module is used to add extended functionality to objects without\nextending `Object.prototype` directly.\n\n    Core = (I={}, self={}) ->\n      extend self,\n\nExternal access to instance variables. Use of this property should be avoided\nin general, but can come in handy from time to time.\n\n>     #! example\n>     I =\n>       r: 255\n>       g: 0\n>       b: 100\n>\n>     myObject = Core(I)\n>\n>     [myObject.I.r, myObject.I.g, myObject.I.b]\n\n        I: I\n\nGenerates a public jQuery style getter / setter method for each `String` argument.\n\n>     #! example\n>     myObject = Core\n>       r: 255\n>       g: 0\n>       b: 100\n>\n>     myObject.attrAccessor \"r\", \"g\", \"b\"\n>\n>     myObject.r(254)\n\n        attrAccessor: (attrNames...) ->\n          attrNames.forEach (attrName) ->\n            self[attrName] = (newValue) ->\n              if arguments.length > 0\n                I[attrName] = newValue\n\n                return self\n              else\n                I[attrName]\n\n          return self\n\nGenerates a public jQuery style getter method for each String argument.\n\n>     #! example\n>     myObject = Core\n>       r: 255\n>       g: 0\n>       b: 100\n>\n>     myObject.attrReader \"r\", \"g\", \"b\"\n>\n>     [myObject.r(), myObject.g(), myObject.b()]\n\n        attrReader: (attrNames...) ->\n          attrNames.forEach (attrName) ->\n            self[attrName] = ->\n              I[attrName]\n\n          return self\n\nExtends this object with methods from the passed in object. A shortcut for Object.extend(self, methods)\n\n>     I =\n>       x: 30\n>       y: 40\n>       maxSpeed: 5\n>\n>     # we are using extend to give player\n>     # additional methods that Core doesn't have\n>     player = Core(I).extend\n>       increaseSpeed: ->\n>         I.maxSpeed += 1\n>\n>     player.increaseSpeed()\n\n        extend: (objects...) ->\n          extend self, objects...\n\nIncludes a module in this object. A module is a constructor that takes two parameters, `I` and `self`\n\n>     myObject = Core()\n>     myObject.include(Bindable)\n\n>     # now you can bind handlers to functions\n>     myObject.bind \"someEvent\", ->\n>       alert(\"wow. that was easy.\")\n\n        include: (modules...) ->\n          for Module in modules\n            Module(I, self)\n\n          return self\n\n      return self\n\nHelpers\n-------\n\nExtend an object with the properties of other objects.\n\n    extend = (target, sources...) ->\n      for source in sources\n        for name of source\n          target[name] = source[name]\n\n      return target\n\nExport\n\n    module.exports = Core\n",
                  "type": "blob"
                },
                "pixie.cson": {
                  "path": "pixie.cson",
                  "mode": "100644",
                  "content": "entryPoint: \"core\"\nversion: \"0.6.0\"\n",
                  "type": "blob"
                },
                "test/core.coffee": {
                  "path": "test/core.coffee",
                  "mode": "100644",
                  "content": "Core = require \"../core\"\n\nok = assert\nequals = assert.equal\ntest = it\n\ndescribe \"Core\", ->\n\n  test \"#extend\", ->\n    o = Core()\n  \n    o.extend\n      test: \"jawsome\"\n  \n    equals o.test, \"jawsome\"\n  \n  test \"#attrAccessor\", ->\n    o = Core\n      test: \"my_val\"\n  \n    o.attrAccessor(\"test\")\n  \n    equals o.test(), \"my_val\"\n    equals o.test(\"new_val\"), o\n    equals o.test(), \"new_val\"\n  \n  test \"#attrReader\", ->\n    o = Core\n      test: \"my_val\"\n  \n    o.attrReader(\"test\")\n  \n    equals o.test(), \"my_val\"\n    equals o.test(\"new_val\"), \"my_val\"\n    equals o.test(), \"my_val\"\n  \n  test \"#include\", ->\n    o = Core\n      test: \"my_val\"\n  \n    M = (I, self) ->\n      self.attrReader \"test\"\n  \n      self.extend\n        test2: \"cool\"\n  \n    ret = o.include M\n  \n    equals ret, o, \"Should return self\"\n  \n    equals o.test(), \"my_val\"\n    equals o.test2, \"cool\"\n  \n  test \"#include multiple\", ->\n    o = Core\n      test: \"my_val\"\n  \n    M = (I, self) ->\n      self.attrReader \"test\"\n  \n      self.extend\n        test2: \"cool\"\n  \n    M2 = (I, self) ->\n      self.extend\n        test2: \"coolio\"\n  \n    o.include M, M2\n  \n    equals o.test2, \"coolio\"\n",
                  "type": "blob"
                }
              },
              "distribution": {
                "core": {
                  "path": "core",
                  "content": "(function() {\n  var Core, extend,\n    __slice = [].slice;\n\n  Core = function(I, self) {\n    if (I == null) {\n      I = {};\n    }\n    if (self == null) {\n      self = {};\n    }\n    extend(self, {\n      I: I,\n      attrAccessor: function() {\n        var attrNames;\n        attrNames = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        attrNames.forEach(function(attrName) {\n          return self[attrName] = function(newValue) {\n            if (arguments.length > 0) {\n              I[attrName] = newValue;\n              return self;\n            } else {\n              return I[attrName];\n            }\n          };\n        });\n        return self;\n      },\n      attrReader: function() {\n        var attrNames;\n        attrNames = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        attrNames.forEach(function(attrName) {\n          return self[attrName] = function() {\n            return I[attrName];\n          };\n        });\n        return self;\n      },\n      extend: function() {\n        var objects;\n        objects = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return extend.apply(null, [self].concat(__slice.call(objects)));\n      },\n      include: function() {\n        var Module, modules, _i, _len;\n        modules = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        for (_i = 0, _len = modules.length; _i < _len; _i++) {\n          Module = modules[_i];\n          Module(I, self);\n        }\n        return self;\n      }\n    });\n    return self;\n  };\n\n  extend = function() {\n    var name, source, sources, target, _i, _len;\n    target = arguments[0], sources = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    for (_i = 0, _len = sources.length; _i < _len; _i++) {\n      source = sources[_i];\n      for (name in source) {\n        target[name] = source[name];\n      }\n    }\n    return target;\n  };\n\n  module.exports = Core;\n\n}).call(this);\n\n//# sourceURL=core.coffee",
                  "type": "blob"
                },
                "pixie": {
                  "path": "pixie",
                  "content": "module.exports = {\"entryPoint\":\"core\",\"version\":\"0.6.0\"};",
                  "type": "blob"
                },
                "test/core": {
                  "path": "test/core",
                  "content": "(function() {\n  var Core, equals, ok, test;\n\n  Core = require(\"../core\");\n\n  ok = assert;\n\n  equals = assert.equal;\n\n  test = it;\n\n  describe(\"Core\", function() {\n    test(\"#extend\", function() {\n      var o;\n      o = Core();\n      o.extend({\n        test: \"jawsome\"\n      });\n      return equals(o.test, \"jawsome\");\n    });\n    test(\"#attrAccessor\", function() {\n      var o;\n      o = Core({\n        test: \"my_val\"\n      });\n      o.attrAccessor(\"test\");\n      equals(o.test(), \"my_val\");\n      equals(o.test(\"new_val\"), o);\n      return equals(o.test(), \"new_val\");\n    });\n    test(\"#attrReader\", function() {\n      var o;\n      o = Core({\n        test: \"my_val\"\n      });\n      o.attrReader(\"test\");\n      equals(o.test(), \"my_val\");\n      equals(o.test(\"new_val\"), \"my_val\");\n      return equals(o.test(), \"my_val\");\n    });\n    test(\"#include\", function() {\n      var M, o, ret;\n      o = Core({\n        test: \"my_val\"\n      });\n      M = function(I, self) {\n        self.attrReader(\"test\");\n        return self.extend({\n          test2: \"cool\"\n        });\n      };\n      ret = o.include(M);\n      equals(ret, o, \"Should return self\");\n      equals(o.test(), \"my_val\");\n      return equals(o.test2, \"cool\");\n    });\n    return test(\"#include multiple\", function() {\n      var M, M2, o;\n      o = Core({\n        test: \"my_val\"\n      });\n      M = function(I, self) {\n        self.attrReader(\"test\");\n        return self.extend({\n          test2: \"cool\"\n        });\n      };\n      M2 = function(I, self) {\n        return self.extend({\n          test2: \"coolio\"\n        });\n      };\n      o.include(M, M2);\n      return equals(o.test2, \"coolio\");\n    });\n  });\n\n}).call(this);\n\n//# sourceURL=test/core.coffee",
                  "type": "blob"
                }
              },
              "progenitor": {
                "url": "http://strd6.github.io/editor/"
              },
              "version": "0.6.0",
              "entryPoint": "core",
              "repository": {
                "id": 13567517,
                "name": "core",
                "full_name": "distri/core",
                "owner": {
                  "login": "distri",
                  "id": 6005125,
                  "avatar_url": "https://identicons.github.com/f90c81ffc1498e260c820082f2e7ca5f.png",
                  "gravatar_id": null,
                  "url": "https://api.github.com/users/distri",
                  "html_url": "https://github.com/distri",
                  "followers_url": "https://api.github.com/users/distri/followers",
                  "following_url": "https://api.github.com/users/distri/following{/other_user}",
                  "gists_url": "https://api.github.com/users/distri/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/distri/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/distri/subscriptions",
                  "organizations_url": "https://api.github.com/users/distri/orgs",
                  "repos_url": "https://api.github.com/users/distri/repos",
                  "events_url": "https://api.github.com/users/distri/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/distri/received_events",
                  "type": "Organization",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/distri/core",
                "description": "An object extension system.",
                "fork": false,
                "url": "https://api.github.com/repos/distri/core",
                "forks_url": "https://api.github.com/repos/distri/core/forks",
                "keys_url": "https://api.github.com/repos/distri/core/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/distri/core/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/distri/core/teams",
                "hooks_url": "https://api.github.com/repos/distri/core/hooks",
                "issue_events_url": "https://api.github.com/repos/distri/core/issues/events{/number}",
                "events_url": "https://api.github.com/repos/distri/core/events",
                "assignees_url": "https://api.github.com/repos/distri/core/assignees{/user}",
                "branches_url": "https://api.github.com/repos/distri/core/branches{/branch}",
                "tags_url": "https://api.github.com/repos/distri/core/tags",
                "blobs_url": "https://api.github.com/repos/distri/core/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/distri/core/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/distri/core/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/distri/core/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/distri/core/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/distri/core/languages",
                "stargazers_url": "https://api.github.com/repos/distri/core/stargazers",
                "contributors_url": "https://api.github.com/repos/distri/core/contributors",
                "subscribers_url": "https://api.github.com/repos/distri/core/subscribers",
                "subscription_url": "https://api.github.com/repos/distri/core/subscription",
                "commits_url": "https://api.github.com/repos/distri/core/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/distri/core/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/distri/core/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/distri/core/issues/comments/{number}",
                "contents_url": "https://api.github.com/repos/distri/core/contents/{+path}",
                "compare_url": "https://api.github.com/repos/distri/core/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/distri/core/merges",
                "archive_url": "https://api.github.com/repos/distri/core/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/distri/core/downloads",
                "issues_url": "https://api.github.com/repos/distri/core/issues{/number}",
                "pulls_url": "https://api.github.com/repos/distri/core/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/distri/core/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/distri/core/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/distri/core/labels{/name}",
                "releases_url": "https://api.github.com/repos/distri/core/releases{/id}",
                "created_at": "2013-10-14T17:04:33Z",
                "updated_at": "2013-12-24T00:49:21Z",
                "pushed_at": "2013-10-14T23:49:11Z",
                "git_url": "git://github.com/distri/core.git",
                "ssh_url": "git@github.com:distri/core.git",
                "clone_url": "https://github.com/distri/core.git",
                "svn_url": "https://github.com/distri/core",
                "homepage": null,
                "size": 592,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": "CoffeeScript",
                "has_issues": true,
                "has_downloads": true,
                "has_wiki": true,
                "forks_count": 0,
                "mirror_url": null,
                "open_issues_count": 0,
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "master_branch": "master",
                "permissions": {
                  "admin": true,
                  "push": true,
                  "pull": true
                },
                "organization": {
                  "login": "distri",
                  "id": 6005125,
                  "avatar_url": "https://identicons.github.com/f90c81ffc1498e260c820082f2e7ca5f.png",
                  "gravatar_id": null,
                  "url": "https://api.github.com/users/distri",
                  "html_url": "https://github.com/distri",
                  "followers_url": "https://api.github.com/users/distri/followers",
                  "following_url": "https://api.github.com/users/distri/following{/other_user}",
                  "gists_url": "https://api.github.com/users/distri/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/distri/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/distri/subscriptions",
                  "organizations_url": "https://api.github.com/users/distri/orgs",
                  "repos_url": "https://api.github.com/users/distri/repos",
                  "events_url": "https://api.github.com/users/distri/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/distri/received_events",
                  "type": "Organization",
                  "site_admin": false
                },
                "network_count": 0,
                "subscribers_count": 1,
                "branch": "v0.6.0",
                "defaultBranch": "master"
              },
              "dependencies": {}
            },
            "observable": {
              "source": {
                "LICENSE": {
                  "path": "LICENSE",
                  "content": "The MIT License (MIT)\n\nCopyright (c) 2014 distri\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
                  "mode": "100644",
                  "type": "blob"
                },
                "README.md": {
                  "path": "README.md",
                  "content": "[![Build Status](https://travis-ci.org/distri/observable.svg?branch=npm)](https://travis-ci.org/distri/observable)\n\nObservable\n==========\n\nInstallation\n------------\n\nNode\n\n    npm install o_0\n\nUsage\n-----\n\n    Observable = require \"o_0\"\n\nGet notified when the value changes.\n\n    observable = Observable 5\n\n    observable() # 5\n\n    observable.observe (newValue) ->\n      console.log newValue\n\n    observable 10 # logs 10 to console\n\nArrays\n------\n\nProxy array methods.\n\n    observable = Observable [1, 2, 3]\n\n    observable.forEach (value) ->\n      # 1, 2, 3\n\nFunctions\n---------\n\nAutomagically compute dependencies for observable functions.\n\n    firstName = Observable \"Duder\"\n    lastName = Observable \"Man\"\n\n    o = Observable ->\n      \"#{firstName()} #{lastName()}\"\n\n    o.observe (newValue) ->\n      assert.equal newValue, \"Duder Bro\"\n\n    lastName \"Bro\"\n",
                  "mode": "100644",
                  "type": "blob"
                },
                "main.coffee.md": {
                  "path": "main.coffee.md",
                  "content": "Observable\n==========\n\n`Observable` allows for observing arrays, functions, and objects.\n\nFunction dependencies are automagically observed.\n\nStandard array methods are proxied through to the underlying array.\n\n    Observable = (value, context) ->\n\nReturn the object if it is already an observable object.\n\n      return value if typeof value?.observe is \"function\"\n\nMaintain a set of listeners to observe changes and provide a helper to notify each observer.\n\n      listeners = []\n\n      notify = (newValue) ->\n        copy(listeners).forEach (listener) ->\n          listener(newValue)\n\nOur observable function is stored as a reference to `self`.\n\nIf `value` is a function compute dependencies and listen to observables that it depends on.\n\n      if typeof value is 'function'\n        fn = value\n\nOur return function is a function that holds only a cached value which is updated\nwhen it's dependencies change.\n\nThe `magicDependency` call is so other functions can depend on this computed function the\nsame way we depend on other types of observables.\n\n        self = ->\n          # Automagic dependency observation\n          magicDependency(self)\n\n          return value\n\n        self.each = (args...) ->\n          magicDependency(self)\n\n          splat(value).forEach(args...)\n\n        changed = ->\n          value = computeDependencies(self, fn, changed, context)\n          notify(value)\n\n        value = computeDependencies(self, fn, changed, context)\n\n      else\n\nWhen called with zero arguments it is treated as a getter. When called with one argument it is treated as a setter.\n\nChanges to the value will trigger notifications.\n\nThe value is always returned.\n\n        self = (newValue) ->\n          if arguments.length > 0\n            if value != newValue\n              value = newValue\n\n              notify(newValue)\n          else\n            # Automagic dependency observation\n            magicDependency(self)\n\n          return value\n\nThis `each` iterator is similar to [the Maybe monad](http://en.wikipedia.org/wiki/Monad_&#40;functional_programming&#41;#The_Maybe_monad) in that our observable may contain a single value or nothing at all.\n\n      self.each = (args...) ->\n        magicDependency(self)\n\n        if value?\n          [value].forEach(args...)\n\nIf the value is an array then proxy array methods and add notifications to mutation events.\n\n      if Array.isArray(value)\n        [\n          \"concat\"\n          \"every\"\n          \"filter\"\n          \"forEach\"\n          \"indexOf\"\n          \"join\"\n          \"lastIndexOf\"\n          \"map\"\n          \"reduce\"\n          \"reduceRight\"\n          \"slice\"\n          \"some\"\n        ].forEach (method) ->\n          self[method] = (args...) ->\n            magicDependency(self)\n            value[method](args...)\n\n        [\n          \"pop\"\n          \"push\"\n          \"reverse\"\n          \"shift\"\n          \"splice\"\n          \"sort\"\n          \"unshift\"\n        ].forEach (method) ->\n          self[method] = (args...) ->\n            notifyReturning value[method](args...)\n\n        notifyReturning = (returnValue) ->\n          notify(value)\n\n          return returnValue\n\nAdd some extra helpful methods to array observables.\n\n        extend self,\n          each: (args...) ->\n            self.forEach(args...)\n\n            return self\n\nRemove an element from the array and notify observers of changes.\n\n          remove: (object) ->\n            index = value.indexOf(object)\n\n            if index >= 0\n              notifyReturning value.splice(index, 1)[0]\n\n          get: (index) ->\n            magicDependency(self)\n            value[index]\n\n          first: ->\n            magicDependency(self)\n            value[0]\n\n          last: ->\n            magicDependency(self)\n            value[value.length-1]\n\n          size: ->\n            magicDependency(self)\n            value.length\n\n      extend self,\n        listeners: listeners\n\n        observe: (listener) ->\n          listeners.push listener\n\n        stopObserving: (fn) ->\n          remove listeners, fn\n\n        toggle: ->\n          self !value\n\n        increment: (n) ->\n          self value + n\n\n        decrement: (n) ->\n          self value - n\n\n        toString: ->\n          \"Observable(#{value})\"\n\n      return self\n\n    Observable.concat = (args...) ->\n      args = Observable(args)\n\n      o = Observable ->\n        flatten args.map(splat)\n\n      o.push = args.push\n\n      return o\n\nExport `Observable`\n\n    module.exports = Observable\n\nAppendix\n--------\n\nThe extend method adds one objects properties to another.\n\n    extend = (target, sources...) ->\n      for source in sources\n        for name of source\n          target[name] = source[name]\n\n      return target\n\nSuper hax for computing dependencies. This needs to be a shared global so that\ndifferent bundled versions of observable libraries can interoperate.\n\n    global.OBSERVABLE_ROOT_HACK = []\n\n    autoDeps = ->\n      last(global.OBSERVABLE_ROOT_HACK)\n\n    magicDependency = (self) ->\n      if observerStack = autoDeps()\n        observerStack.push self\n\n    withBase = (self, update, fn) ->\n      global.OBSERVABLE_ROOT_HACK.push(deps = [])\n\n      try\n        value = fn()\n        self._deps?.forEach (observable) ->\n          observable.stopObserving update\n\n        self._deps = deps\n\n        deps.forEach (observable) ->\n          observable.observe update\n      finally\n        global.OBSERVABLE_ROOT_HACK.pop()\n\n      return value\n\nAutomagically compute dependencies.\n\n    computeDependencies = (self, fn, update, context) ->\n      withBase self, update, ->\n        fn.call(context)\n\nRemove a value from an array.\n\n    remove = (array, value) ->\n      index = array.indexOf(value)\n\n      if index >= 0\n        array.splice(index, 1)[0]\n\n    copy = (array) ->\n      array.concat([])\n\n    get = (arg) ->\n      if typeof arg is \"function\"\n        arg()\n      else\n        arg\n\n    splat = (item) ->\n      results = []\n\n      if typeof item.forEach is \"function\"\n        item.forEach (i) ->\n          results.push i\n      else\n        result = get item\n\n        results.push result if result?\n\n      results\n\n    last = (array) ->\n      array[array.length - 1]\n\n    flatten = (array) ->\n      array.reduce (a, b) ->\n        a.concat(b)\n      , []\n",
                  "mode": "100644",
                  "type": "blob"
                },
                "pixie.cson": {
                  "path": "pixie.cson",
                  "content": "version: \"0.3.1\"\n",
                  "mode": "100644",
                  "type": "blob"
                },
                "test/observable.coffee": {
                  "path": "test/observable.coffee",
                  "content": "global.Observable = require \"../main\"\n\ndescribe 'Observable', ->\n  it 'should create an observable for an object', ->\n    n = 5\n\n    observable = Observable(n)\n\n    assert.equal(observable(), n)\n\n  it 'should fire events when setting', ->\n    string = \"yolo\"\n\n    observable = Observable(string)\n    observable.observe (newValue) ->\n      assert.equal newValue, \"4life\"\n\n    observable(\"4life\")\n\n  it 'should be idempotent', ->\n    o = Observable(5)\n\n    assert.equal o, Observable(o)\n\n  describe \"#each\", ->\n    it \"should be invoked once if there is an observable\", ->\n      o = Observable(5)\n      called = 0\n\n      o.each (value) ->\n        called += 1\n        assert.equal value, 5\n\n      assert.equal called, 1\n\n    it \"should not be invoked if observable is null\", ->\n      o = Observable(null)\n      called = 0\n\n      o.each (value) ->\n        called += 1\n\n      assert.equal called, 0\n\n  it \"should allow for stopping observation\", ->\n    observable = Observable(\"string\")\n\n    called = 0\n    fn = (newValue) ->\n      called += 1\n      assert.equal newValue, \"4life\"\n\n    observable.observe fn\n\n    observable(\"4life\")\n\n    observable.stopObserving fn\n\n    observable(\"wat\")\n\n    assert.equal called, 1\n\n  it \"should increment\", ->\n    observable = Observable 1\n\n    observable.increment(5)\n\n    assert.equal observable(), 6\n\n  it \"should decremnet\", ->\n    observable = Observable 1\n\n    observable.decrement 5\n\n    assert.equal observable(), -4\n\n  it \"should toggle\", ->\n    observable = Observable false\n\n    observable.toggle()\n    assert.equal observable(), true\n\n    observable.toggle()\n    assert.equal observable(), false\n\n  it \"should trigger when toggling\", (done) ->\n    observable = Observable true\n    observable.observe (v) ->\n      assert.equal v, false\n      done()\n\n    observable.toggle()\n\ndescribe \"Observable Array\", ->\n  it \"should proxy array methods\", ->\n    o = Observable [5]\n\n    o.map (n) ->\n      assert.equal n, 5\n\n  it \"should notify on mutation methods\", (done) ->\n    o = Observable []\n\n    o.observe (newValue) ->\n      assert.equal newValue[0], 1\n\n    o.push 1\n\n    done()\n\n  it \"should have an each method\", ->\n    o = Observable []\n\n    assert o.each\n\n  it \"#get\", ->\n    o = Observable [0, 1, 2, 3]\n\n    assert.equal o.get(2), 2\n\n  it \"#first\", ->\n    o = Observable [0, 1, 2, 3]\n\n    assert.equal o.first(), 0\n\n  it \"#last\", ->\n    o = Observable [0, 1, 2, 3]\n\n    assert.equal o.last(), 3\n\n  it \"#remove\", (done) ->\n    o = Observable [0, 1, 2, 3]\n\n    o.observe (newValue) ->\n      assert.equal newValue.length, 3\n      setTimeout ->\n        done()\n      , 0\n\n    assert.equal o.remove(2), 2\n\n  # TODO: This looks like it might be impossible\n  it \"should proxy the length property\"\n\ndescribe \"Observable functions\", ->\n  it \"should compute dependencies\", (done) ->\n    firstName = Observable \"Duder\"\n    lastName = Observable \"Man\"\n\n    o = Observable ->\n      \"#{firstName()} #{lastName()}\"\n\n    o.observe (newValue) ->\n      assert.equal newValue, \"Duder Bro\"\n\n      done()\n\n    lastName \"Bro\"\n\n  it \"should compute array#get as a dependency\", ->\n    observableArray = Observable [0, 1, 2]\n\n    observableFn = Observable ->\n      observableArray.get(0)\n\n    assert.equal observableFn(), 0\n\n    observableArray([5])\n\n    assert.equal observableFn(), 5\n\n  it \"should compute array#first as a dependency\", ->\n    observableArray = Observable [0, 1, 2]\n\n    observableFn = Observable ->\n      observableArray.first() + 1\n\n    assert.equal observableFn(), 1\n\n    observableArray([5])\n\n    assert.equal observableFn(), 6\n\n  it \"should compute array#last as a dependency\", ->\n    observableArray = Observable [0, 1, 2]\n\n    observableFn = Observable ->\n      observableArray.last()\n\n    assert.equal observableFn(), 2\n\n    observableArray.pop()\n\n    assert.equal observableFn(), 1\n\n    observableArray([5])\n\n    assert.equal observableFn(), 5\n\n  it \"should compute array#size as a dependency\", ->\n    observableArray = Observable [0, 1, 2]\n\n    observableFn = Observable ->\n      observableArray.size() * 2\n\n    assert.equal observableFn(), 6\n\n    observableArray.pop()\n    assert.equal observableFn(), 4\n    observableArray.shift()\n    assert.equal observableFn(), 2\n\n  it \"should allow double nesting\", (done) ->\n    bottom = Observable \"rad\"\n    middle = Observable ->\n      bottom()\n    top = Observable ->\n      middle()\n\n    top.observe (newValue) ->\n      assert.equal newValue, \"wat\"\n      assert.equal top(), newValue\n      assert.equal middle(), newValue\n\n      done()\n\n    bottom(\"wat\")\n\n  it \"should work with dynamic dependencies\", ->\n    observableArray = Observable []\n\n    dynamicObservable = Observable ->\n      observableArray.filter (item) ->\n        item.age() > 3\n\n    assert.equal dynamicObservable().length, 0\n\n    observableArray.push\n      age: Observable 1\n\n    observableArray()[0].age 5\n    assert.equal dynamicObservable().length, 1\n\n  it \"should work with context\", ->\n    model =\n      a: Observable \"Hello\"\n      b: Observable \"there\"\n\n    model.c = Observable ->\n      \"#{@a()} #{@b()}\"\n    , model\n\n    assert.equal model.c(), \"Hello there\"\n\n    model.b \"world\"\n\n    assert.equal model.c(), \"Hello world\"\n\n  it \"should be ok even if the function throws an exception\", ->\n    assert.throws ->\n      t = Observable ->\n        throw \"wat\"\n\n    # TODO: Should be able to find a test case that is affected by this rather that\n    # checking it directly\n    assert.equal global.OBSERVABLE_ROOT_HACK.length, 0\n\n  it \"should have an each method\", ->\n    o = Observable ->\n\n    assert o.each\n\n  it \"should not invoke when returning undefined\", ->\n    o = Observable ->\n\n    o.each ->\n      assert false\n\n  it \"should invoke when returning any defined value\", (done) ->\n    o = Observable -> 5\n\n    o.each (n) ->\n      assert.equal n, 5\n      done()\n\n  it \"should work on an array dependency\", ->\n    oA = Observable [1, 2, 3]\n\n    o = Observable ->\n      oA()[0]\n\n    last = Observable ->\n      oA()[oA().length-1]\n\n    assert.equal o(), 1\n\n    oA.unshift 0\n\n    assert.equal o(), 0\n\n    oA.push 4\n\n    assert.equal last(), 4, \"Last should be 4\"\n\n  it \"should work with multiple dependencies\", ->\n    letter = Observable \"A\"\n    checked = ->\n      l = letter()\n      @name().indexOf(l) is 0\n\n    first = {name: Observable(\"Andrew\")}\n    first.checked = Observable checked, first\n\n    second = {name: Observable(\"Benjamin\")}\n    second.checked = Observable checked, second\n\n    assert.equal first.checked(), true\n    assert.equal second.checked(), false\n\n    assert.equal letter.listeners.length, 2\n\n    letter \"B\"\n\n    assert.equal first.checked(), false\n    assert.equal second.checked(), true\n\n  it \"should work with nested observable construction\", ->\n    gen = Observable ->\n      Observable \"Duder\"\n\n    o = gen()\n\n    assert.equal o(), \"Duder\"\n\n    o(\"wat\")\n\n    assert.equal o(), \"wat\"\n\n  describe \"Scoping\", ->\n    it \"should be scoped to optional context\", (done) ->\n      model =\n        firstName: Observable \"Duder\"\n        lastName: Observable \"Man\"\n\n      model.name = Observable ->\n        \"#{@firstName()} #{@lastName()}\"\n      , model\n\n      model.name.observe (newValue) ->\n        assert.equal newValue, \"Duder Bro\"\n\n        done()\n\n      model.lastName \"Bro\"\n\n  describe \"concat\", ->\n    it \"should return an observable array that changes based on changes in inputs\", ->\n      numbers = Observable [1, 2, 3]\n      letters = Observable [\"a\", \"b\", \"c\"]\n      item = Observable({})\n      nullable = Observable null\n\n      observableArray = Observable.concat numbers, \"literal\", letters, item, nullable\n\n      assert.equal observableArray().length, 3 + 1 + 3 + 1\n\n      assert.equal observableArray()[0], 1\n      assert.equal observableArray()[3], \"literal\"\n      assert.equal observableArray()[4], \"a\"\n      assert.equal observableArray()[7], item()\n\n      numbers.push 4\n\n      assert.equal observableArray().length, 9\n\n      nullable \"cool\"\n\n      assert.equal observableArray().length, 10\n\n    it \"should work with observable functions that return arrays\", ->\n      item = Observable(\"wat\")\n\n      computedArray = Observable ->\n        [item()]\n\n      observableArray = Observable.concat computedArray, computedArray\n\n      assert.equal observableArray().length, 2\n\n      assert.equal observableArray()[1], \"wat\"\n\n      item \"yolo\"\n\n      assert.equal observableArray()[1], \"yolo\"\n\n    it \"should have a push method\", ->\n      observableArray = Observable.concat()\n\n      observable = Observable \"hey\"\n\n      observableArray.push observable\n\n      assert.equal observableArray()[0], \"hey\"\n\n      observable \"wat\"\n\n      assert.equal observableArray()[0], \"wat\"\n\n      observableArray.push \"cool\"\n      observableArray.push \"radical\"\n\n      assert.equal observableArray().length, 3\n\n    it \"should be observable\", (done) ->\n      observableArray = Observable.concat()\n\n      observableArray.observe (items) ->\n        assert.equal items.length, 3\n        done()\n\n      observableArray.push [\"A\", \"B\", \"C\"]\n\n    it \"should have an each method\", ->\n      observableArray = Observable.concat([\"A\", \"B\", \"C\"])\n\n      n = 0\n      observableArray.each () ->\n        n += 1\n\n      assert.equal n, 3\n",
                  "mode": "100644",
                  "type": "blob"
                }
              },
              "distribution": {
                "main": {
                  "path": "main",
                  "content": "(function() {\n  var Observable, autoDeps, computeDependencies, copy, extend, flatten, get, last, magicDependency, remove, splat, withBase,\n    __slice = [].slice;\n\n  Observable = function(value, context) {\n    var changed, fn, listeners, notify, notifyReturning, self;\n    if (typeof (value != null ? value.observe : void 0) === \"function\") {\n      return value;\n    }\n    listeners = [];\n    notify = function(newValue) {\n      return copy(listeners).forEach(function(listener) {\n        return listener(newValue);\n      });\n    };\n    if (typeof value === 'function') {\n      fn = value;\n      self = function() {\n        magicDependency(self);\n        return value;\n      };\n      self.each = function() {\n        var args, _ref;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        magicDependency(self);\n        return (_ref = splat(value)).forEach.apply(_ref, args);\n      };\n      changed = function() {\n        value = computeDependencies(self, fn, changed, context);\n        return notify(value);\n      };\n      value = computeDependencies(self, fn, changed, context);\n    } else {\n      self = function(newValue) {\n        if (arguments.length > 0) {\n          if (value !== newValue) {\n            value = newValue;\n            notify(newValue);\n          }\n        } else {\n          magicDependency(self);\n        }\n        return value;\n      };\n    }\n    self.each = function() {\n      var args, _ref;\n      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      magicDependency(self);\n      if (value != null) {\n        return (_ref = [value]).forEach.apply(_ref, args);\n      }\n    };\n    if (Array.isArray(value)) {\n      [\"concat\", \"every\", \"filter\", \"forEach\", \"indexOf\", \"join\", \"lastIndexOf\", \"map\", \"reduce\", \"reduceRight\", \"slice\", \"some\"].forEach(function(method) {\n        return self[method] = function() {\n          var args;\n          args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n          magicDependency(self);\n          return value[method].apply(value, args);\n        };\n      });\n      [\"pop\", \"push\", \"reverse\", \"shift\", \"splice\", \"sort\", \"unshift\"].forEach(function(method) {\n        return self[method] = function() {\n          var args;\n          args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n          return notifyReturning(value[method].apply(value, args));\n        };\n      });\n      notifyReturning = function(returnValue) {\n        notify(value);\n        return returnValue;\n      };\n      extend(self, {\n        each: function() {\n          var args;\n          args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n          self.forEach.apply(self, args);\n          return self;\n        },\n        remove: function(object) {\n          var index;\n          index = value.indexOf(object);\n          if (index >= 0) {\n            return notifyReturning(value.splice(index, 1)[0]);\n          }\n        },\n        get: function(index) {\n          magicDependency(self);\n          return value[index];\n        },\n        first: function() {\n          magicDependency(self);\n          return value[0];\n        },\n        last: function() {\n          magicDependency(self);\n          return value[value.length - 1];\n        },\n        size: function() {\n          magicDependency(self);\n          return value.length;\n        }\n      });\n    }\n    extend(self, {\n      listeners: listeners,\n      observe: function(listener) {\n        return listeners.push(listener);\n      },\n      stopObserving: function(fn) {\n        return remove(listeners, fn);\n      },\n      toggle: function() {\n        return self(!value);\n      },\n      increment: function(n) {\n        return self(value + n);\n      },\n      decrement: function(n) {\n        return self(value - n);\n      },\n      toString: function() {\n        return \"Observable(\" + value + \")\";\n      }\n    });\n    return self;\n  };\n\n  Observable.concat = function() {\n    var args, o;\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    args = Observable(args);\n    o = Observable(function() {\n      return flatten(args.map(splat));\n    });\n    o.push = args.push;\n    return o;\n  };\n\n  module.exports = Observable;\n\n  extend = function() {\n    var name, source, sources, target, _i, _len;\n    target = arguments[0], sources = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    for (_i = 0, _len = sources.length; _i < _len; _i++) {\n      source = sources[_i];\n      for (name in source) {\n        target[name] = source[name];\n      }\n    }\n    return target;\n  };\n\n  global.OBSERVABLE_ROOT_HACK = [];\n\n  autoDeps = function() {\n    return last(global.OBSERVABLE_ROOT_HACK);\n  };\n\n  magicDependency = function(self) {\n    var observerStack;\n    if (observerStack = autoDeps()) {\n      return observerStack.push(self);\n    }\n  };\n\n  withBase = function(self, update, fn) {\n    var deps, value, _ref;\n    global.OBSERVABLE_ROOT_HACK.push(deps = []);\n    try {\n      value = fn();\n      if ((_ref = self._deps) != null) {\n        _ref.forEach(function(observable) {\n          return observable.stopObserving(update);\n        });\n      }\n      self._deps = deps;\n      deps.forEach(function(observable) {\n        return observable.observe(update);\n      });\n    } finally {\n      global.OBSERVABLE_ROOT_HACK.pop();\n    }\n    return value;\n  };\n\n  computeDependencies = function(self, fn, update, context) {\n    return withBase(self, update, function() {\n      return fn.call(context);\n    });\n  };\n\n  remove = function(array, value) {\n    var index;\n    index = array.indexOf(value);\n    if (index >= 0) {\n      return array.splice(index, 1)[0];\n    }\n  };\n\n  copy = function(array) {\n    return array.concat([]);\n  };\n\n  get = function(arg) {\n    if (typeof arg === \"function\") {\n      return arg();\n    } else {\n      return arg;\n    }\n  };\n\n  splat = function(item) {\n    var result, results;\n    results = [];\n    if (typeof item.forEach === \"function\") {\n      item.forEach(function(i) {\n        return results.push(i);\n      });\n    } else {\n      result = get(item);\n      if (result != null) {\n        results.push(result);\n      }\n    }\n    return results;\n  };\n\n  last = function(array) {\n    return array[array.length - 1];\n  };\n\n  flatten = function(array) {\n    return array.reduce(function(a, b) {\n      return a.concat(b);\n    }, []);\n  };\n\n}).call(this);\n",
                  "type": "blob"
                },
                "pixie": {
                  "path": "pixie",
                  "content": "module.exports = {\"version\":\"0.3.1\"};",
                  "type": "blob"
                },
                "test/observable": {
                  "path": "test/observable",
                  "content": "(function() {\n  global.Observable = require(\"../main\");\n\n  describe('Observable', function() {\n    it('should create an observable for an object', function() {\n      var n, observable;\n      n = 5;\n      observable = Observable(n);\n      return assert.equal(observable(), n);\n    });\n    it('should fire events when setting', function() {\n      var observable, string;\n      string = \"yolo\";\n      observable = Observable(string);\n      observable.observe(function(newValue) {\n        return assert.equal(newValue, \"4life\");\n      });\n      return observable(\"4life\");\n    });\n    it('should be idempotent', function() {\n      var o;\n      o = Observable(5);\n      return assert.equal(o, Observable(o));\n    });\n    describe(\"#each\", function() {\n      it(\"should be invoked once if there is an observable\", function() {\n        var called, o;\n        o = Observable(5);\n        called = 0;\n        o.each(function(value) {\n          called += 1;\n          return assert.equal(value, 5);\n        });\n        return assert.equal(called, 1);\n      });\n      return it(\"should not be invoked if observable is null\", function() {\n        var called, o;\n        o = Observable(null);\n        called = 0;\n        o.each(function(value) {\n          return called += 1;\n        });\n        return assert.equal(called, 0);\n      });\n    });\n    it(\"should allow for stopping observation\", function() {\n      var called, fn, observable;\n      observable = Observable(\"string\");\n      called = 0;\n      fn = function(newValue) {\n        called += 1;\n        return assert.equal(newValue, \"4life\");\n      };\n      observable.observe(fn);\n      observable(\"4life\");\n      observable.stopObserving(fn);\n      observable(\"wat\");\n      return assert.equal(called, 1);\n    });\n    it(\"should increment\", function() {\n      var observable;\n      observable = Observable(1);\n      observable.increment(5);\n      return assert.equal(observable(), 6);\n    });\n    it(\"should decremnet\", function() {\n      var observable;\n      observable = Observable(1);\n      observable.decrement(5);\n      return assert.equal(observable(), -4);\n    });\n    it(\"should toggle\", function() {\n      var observable;\n      observable = Observable(false);\n      observable.toggle();\n      assert.equal(observable(), true);\n      observable.toggle();\n      return assert.equal(observable(), false);\n    });\n    return it(\"should trigger when toggling\", function(done) {\n      var observable;\n      observable = Observable(true);\n      observable.observe(function(v) {\n        assert.equal(v, false);\n        return done();\n      });\n      return observable.toggle();\n    });\n  });\n\n  describe(\"Observable Array\", function() {\n    it(\"should proxy array methods\", function() {\n      var o;\n      o = Observable([5]);\n      return o.map(function(n) {\n        return assert.equal(n, 5);\n      });\n    });\n    it(\"should notify on mutation methods\", function(done) {\n      var o;\n      o = Observable([]);\n      o.observe(function(newValue) {\n        return assert.equal(newValue[0], 1);\n      });\n      o.push(1);\n      return done();\n    });\n    it(\"should have an each method\", function() {\n      var o;\n      o = Observable([]);\n      return assert(o.each);\n    });\n    it(\"#get\", function() {\n      var o;\n      o = Observable([0, 1, 2, 3]);\n      return assert.equal(o.get(2), 2);\n    });\n    it(\"#first\", function() {\n      var o;\n      o = Observable([0, 1, 2, 3]);\n      return assert.equal(o.first(), 0);\n    });\n    it(\"#last\", function() {\n      var o;\n      o = Observable([0, 1, 2, 3]);\n      return assert.equal(o.last(), 3);\n    });\n    it(\"#remove\", function(done) {\n      var o;\n      o = Observable([0, 1, 2, 3]);\n      o.observe(function(newValue) {\n        assert.equal(newValue.length, 3);\n        return setTimeout(function() {\n          return done();\n        }, 0);\n      });\n      return assert.equal(o.remove(2), 2);\n    });\n    return it(\"should proxy the length property\");\n  });\n\n  describe(\"Observable functions\", function() {\n    it(\"should compute dependencies\", function(done) {\n      var firstName, lastName, o;\n      firstName = Observable(\"Duder\");\n      lastName = Observable(\"Man\");\n      o = Observable(function() {\n        return \"\" + (firstName()) + \" \" + (lastName());\n      });\n      o.observe(function(newValue) {\n        assert.equal(newValue, \"Duder Bro\");\n        return done();\n      });\n      return lastName(\"Bro\");\n    });\n    it(\"should compute array#get as a dependency\", function() {\n      var observableArray, observableFn;\n      observableArray = Observable([0, 1, 2]);\n      observableFn = Observable(function() {\n        return observableArray.get(0);\n      });\n      assert.equal(observableFn(), 0);\n      observableArray([5]);\n      return assert.equal(observableFn(), 5);\n    });\n    it(\"should compute array#first as a dependency\", function() {\n      var observableArray, observableFn;\n      observableArray = Observable([0, 1, 2]);\n      observableFn = Observable(function() {\n        return observableArray.first() + 1;\n      });\n      assert.equal(observableFn(), 1);\n      observableArray([5]);\n      return assert.equal(observableFn(), 6);\n    });\n    it(\"should compute array#last as a dependency\", function() {\n      var observableArray, observableFn;\n      observableArray = Observable([0, 1, 2]);\n      observableFn = Observable(function() {\n        return observableArray.last();\n      });\n      assert.equal(observableFn(), 2);\n      observableArray.pop();\n      assert.equal(observableFn(), 1);\n      observableArray([5]);\n      return assert.equal(observableFn(), 5);\n    });\n    it(\"should compute array#size as a dependency\", function() {\n      var observableArray, observableFn;\n      observableArray = Observable([0, 1, 2]);\n      observableFn = Observable(function() {\n        return observableArray.size() * 2;\n      });\n      assert.equal(observableFn(), 6);\n      observableArray.pop();\n      assert.equal(observableFn(), 4);\n      observableArray.shift();\n      return assert.equal(observableFn(), 2);\n    });\n    it(\"should allow double nesting\", function(done) {\n      var bottom, middle, top;\n      bottom = Observable(\"rad\");\n      middle = Observable(function() {\n        return bottom();\n      });\n      top = Observable(function() {\n        return middle();\n      });\n      top.observe(function(newValue) {\n        assert.equal(newValue, \"wat\");\n        assert.equal(top(), newValue);\n        assert.equal(middle(), newValue);\n        return done();\n      });\n      return bottom(\"wat\");\n    });\n    it(\"should work with dynamic dependencies\", function() {\n      var dynamicObservable, observableArray;\n      observableArray = Observable([]);\n      dynamicObservable = Observable(function() {\n        return observableArray.filter(function(item) {\n          return item.age() > 3;\n        });\n      });\n      assert.equal(dynamicObservable().length, 0);\n      observableArray.push({\n        age: Observable(1)\n      });\n      observableArray()[0].age(5);\n      return assert.equal(dynamicObservable().length, 1);\n    });\n    it(\"should work with context\", function() {\n      var model;\n      model = {\n        a: Observable(\"Hello\"),\n        b: Observable(\"there\")\n      };\n      model.c = Observable(function() {\n        return \"\" + (this.a()) + \" \" + (this.b());\n      }, model);\n      assert.equal(model.c(), \"Hello there\");\n      model.b(\"world\");\n      return assert.equal(model.c(), \"Hello world\");\n    });\n    it(\"should be ok even if the function throws an exception\", function() {\n      assert.throws(function() {\n        var t;\n        return t = Observable(function() {\n          throw \"wat\";\n        });\n      });\n      return assert.equal(global.OBSERVABLE_ROOT_HACK.length, 0);\n    });\n    it(\"should have an each method\", function() {\n      var o;\n      o = Observable(function() {});\n      return assert(o.each);\n    });\n    it(\"should not invoke when returning undefined\", function() {\n      var o;\n      o = Observable(function() {});\n      return o.each(function() {\n        return assert(false);\n      });\n    });\n    it(\"should invoke when returning any defined value\", function(done) {\n      var o;\n      o = Observable(function() {\n        return 5;\n      });\n      return o.each(function(n) {\n        assert.equal(n, 5);\n        return done();\n      });\n    });\n    it(\"should work on an array dependency\", function() {\n      var last, o, oA;\n      oA = Observable([1, 2, 3]);\n      o = Observable(function() {\n        return oA()[0];\n      });\n      last = Observable(function() {\n        return oA()[oA().length - 1];\n      });\n      assert.equal(o(), 1);\n      oA.unshift(0);\n      assert.equal(o(), 0);\n      oA.push(4);\n      return assert.equal(last(), 4, \"Last should be 4\");\n    });\n    it(\"should work with multiple dependencies\", function() {\n      var checked, first, letter, second;\n      letter = Observable(\"A\");\n      checked = function() {\n        var l;\n        l = letter();\n        return this.name().indexOf(l) === 0;\n      };\n      first = {\n        name: Observable(\"Andrew\")\n      };\n      first.checked = Observable(checked, first);\n      second = {\n        name: Observable(\"Benjamin\")\n      };\n      second.checked = Observable(checked, second);\n      assert.equal(first.checked(), true);\n      assert.equal(second.checked(), false);\n      assert.equal(letter.listeners.length, 2);\n      letter(\"B\");\n      assert.equal(first.checked(), false);\n      return assert.equal(second.checked(), true);\n    });\n    it(\"should work with nested observable construction\", function() {\n      var gen, o;\n      gen = Observable(function() {\n        return Observable(\"Duder\");\n      });\n      o = gen();\n      assert.equal(o(), \"Duder\");\n      o(\"wat\");\n      return assert.equal(o(), \"wat\");\n    });\n    describe(\"Scoping\", function() {\n      return it(\"should be scoped to optional context\", function(done) {\n        var model;\n        model = {\n          firstName: Observable(\"Duder\"),\n          lastName: Observable(\"Man\")\n        };\n        model.name = Observable(function() {\n          return \"\" + (this.firstName()) + \" \" + (this.lastName());\n        }, model);\n        model.name.observe(function(newValue) {\n          assert.equal(newValue, \"Duder Bro\");\n          return done();\n        });\n        return model.lastName(\"Bro\");\n      });\n    });\n    return describe(\"concat\", function() {\n      it(\"should return an observable array that changes based on changes in inputs\", function() {\n        var item, letters, nullable, numbers, observableArray;\n        numbers = Observable([1, 2, 3]);\n        letters = Observable([\"a\", \"b\", \"c\"]);\n        item = Observable({});\n        nullable = Observable(null);\n        observableArray = Observable.concat(numbers, \"literal\", letters, item, nullable);\n        assert.equal(observableArray().length, 3 + 1 + 3 + 1);\n        assert.equal(observableArray()[0], 1);\n        assert.equal(observableArray()[3], \"literal\");\n        assert.equal(observableArray()[4], \"a\");\n        assert.equal(observableArray()[7], item());\n        numbers.push(4);\n        assert.equal(observableArray().length, 9);\n        nullable(\"cool\");\n        return assert.equal(observableArray().length, 10);\n      });\n      it(\"should work with observable functions that return arrays\", function() {\n        var computedArray, item, observableArray;\n        item = Observable(\"wat\");\n        computedArray = Observable(function() {\n          return [item()];\n        });\n        observableArray = Observable.concat(computedArray, computedArray);\n        assert.equal(observableArray().length, 2);\n        assert.equal(observableArray()[1], \"wat\");\n        item(\"yolo\");\n        return assert.equal(observableArray()[1], \"yolo\");\n      });\n      it(\"should have a push method\", function() {\n        var observable, observableArray;\n        observableArray = Observable.concat();\n        observable = Observable(\"hey\");\n        observableArray.push(observable);\n        assert.equal(observableArray()[0], \"hey\");\n        observable(\"wat\");\n        assert.equal(observableArray()[0], \"wat\");\n        observableArray.push(\"cool\");\n        observableArray.push(\"radical\");\n        return assert.equal(observableArray().length, 3);\n      });\n      it(\"should be observable\", function(done) {\n        var observableArray;\n        observableArray = Observable.concat();\n        observableArray.observe(function(items) {\n          assert.equal(items.length, 3);\n          return done();\n        });\n        return observableArray.push([\"A\", \"B\", \"C\"]);\n      });\n      return it(\"should have an each method\", function() {\n        var n, observableArray;\n        observableArray = Observable.concat([\"A\", \"B\", \"C\"]);\n        n = 0;\n        observableArray.each(function() {\n          return n += 1;\n        });\n        return assert.equal(n, 3);\n      });\n    });\n  });\n\n}).call(this);\n",
                  "type": "blob"
                }
              },
              "progenitor": {
                "url": "http://www.danielx.net/editor/"
              },
              "version": "0.3.1",
              "entryPoint": "main",
              "repository": {
                "branch": "v0.3.1",
                "default_branch": "master",
                "full_name": "distri/observable",
                "homepage": "http://observable.us",
                "description": "",
                "html_url": "https://github.com/distri/observable",
                "url": "https://api.github.com/repos/distri/observable",
                "publishBranch": "gh-pages"
              },
              "dependencies": {}
            }
          }
        },
        "observable": {
          "source": {
            "LICENSE": {
              "path": "LICENSE",
              "content": "The MIT License (MIT)\n\nCopyright (c) 2014 distri\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
              "mode": "100644",
              "type": "blob"
            },
            "README.md": {
              "path": "README.md",
              "content": "[![Build Status](https://travis-ci.org/distri/observable.svg?branch=npm)](https://travis-ci.org/distri/observable)\n\nObservable\n==========\n\nInstallation\n------------\n\nNode\n\n    npm install o_0\n\nUsage\n-----\n\n    Observable = require \"o_0\"\n\nGet notified when the value changes.\n\n    observable = Observable 5\n\n    observable() # 5\n\n    observable.observe (newValue) ->\n      console.log newValue\n\n    observable 10 # logs 10 to console\n\nArrays\n------\n\nProxy array methods.\n\n    observable = Observable [1, 2, 3]\n\n    observable.forEach (value) ->\n      # 1, 2, 3\n\nFunctions\n---------\n\nAutomagically compute dependencies for observable functions.\n\n    firstName = Observable \"Duder\"\n    lastName = Observable \"Man\"\n\n    o = Observable ->\n      \"#{firstName()} #{lastName()}\"\n\n    o.observe (newValue) ->\n      assert.equal newValue, \"Duder Bro\"\n\n    lastName \"Bro\"\n",
              "mode": "100644",
              "type": "blob"
            },
            "main.coffee.md": {
              "path": "main.coffee.md",
              "content": "Observable\n==========\n\n`Observable` allows for observing arrays, functions, and objects.\n\nFunction dependencies are automagically observed.\n\nStandard array methods are proxied through to the underlying array.\n\n    Observable = (value, context) ->\n\nReturn the object if it is already an observable object.\n\n      return value if typeof value?.observe is \"function\"\n\nMaintain a set of listeners to observe changes and provide a helper to notify each observer.\n\n      listeners = []\n\n      notify = (newValue) ->\n        copy(listeners).forEach (listener) ->\n          listener(newValue)\n\nOur observable function is stored as a reference to `self`.\n\nIf `value` is a function compute dependencies and listen to observables that it depends on.\n\n      if typeof value is 'function'\n        fn = value\n\nOur return function is a function that holds only a cached value which is updated\nwhen it's dependencies change.\n\nThe `magicDependency` call is so other functions can depend on this computed function the\nsame way we depend on other types of observables.\n\n        self = ->\n          # Automagic dependency observation\n          magicDependency(self)\n\n          return value\n\n        self.each = (args...) ->\n          magicDependency(self)\n\n          splat(value).forEach(args...)\n\n        changed = ->\n          value = computeDependencies(self, fn, changed, context)\n          notify(value)\n\n        value = computeDependencies(self, fn, changed, context)\n\n      else\n\nWhen called with zero arguments it is treated as a getter. When called with one argument it is treated as a setter.\n\nChanges to the value will trigger notifications.\n\nThe value is always returned.\n\n        self = (newValue) ->\n          if arguments.length > 0\n            if value != newValue\n              value = newValue\n\n              notify(newValue)\n          else\n            # Automagic dependency observation\n            magicDependency(self)\n\n          return value\n\nThis `each` iterator is similar to [the Maybe monad](http://en.wikipedia.org/wiki/Monad_&#40;functional_programming&#41;#The_Maybe_monad) in that our observable may contain a single value or nothing at all.\n\n      self.each = (args...) ->\n        magicDependency(self)\n\n        if value?\n          [value].forEach(args...)\n\nIf the value is an array then proxy array methods and add notifications to mutation events.\n\n      if Array.isArray(value)\n        [\n          \"concat\"\n          \"every\"\n          \"filter\"\n          \"forEach\"\n          \"indexOf\"\n          \"join\"\n          \"lastIndexOf\"\n          \"map\"\n          \"reduce\"\n          \"reduceRight\"\n          \"slice\"\n          \"some\"\n        ].forEach (method) ->\n          self[method] = (args...) ->\n            magicDependency(self)\n            value[method](args...)\n\n        [\n          \"pop\"\n          \"push\"\n          \"reverse\"\n          \"shift\"\n          \"splice\"\n          \"sort\"\n          \"unshift\"\n        ].forEach (method) ->\n          self[method] = (args...) ->\n            notifyReturning value[method](args...)\n\n        notifyReturning = (returnValue) ->\n          notify(value)\n\n          return returnValue\n\nAdd some extra helpful methods to array observables.\n\n        extend self,\n          each: (args...) ->\n            self.forEach(args...)\n\n            return self\n\nRemove an element from the array and notify observers of changes.\n\n          remove: (object) ->\n            index = value.indexOf(object)\n\n            if index >= 0\n              notifyReturning value.splice(index, 1)[0]\n\n          get: (index) ->\n            magicDependency(self)\n            value[index]\n\n          first: ->\n            magicDependency(self)\n            value[0]\n\n          last: ->\n            magicDependency(self)\n            value[value.length-1]\n\n          size: ->\n            magicDependency(self)\n            value.length\n\n      extend self,\n        listeners: listeners\n\n        observe: (listener) ->\n          listeners.push listener\n\n        stopObserving: (fn) ->\n          remove listeners, fn\n\n        toggle: ->\n          self !value\n\n        increment: (n) ->\n          self value + n\n\n        decrement: (n) ->\n          self value - n\n\n        toString: ->\n          \"Observable(#{value})\"\n\n      return self\n\n    Observable.concat = (args...) ->\n      args = Observable(args)\n\n      o = Observable ->\n        flatten args.map(splat)\n\n      o.push = args.push\n\n      return o\n\nExport `Observable`\n\n    module.exports = Observable\n\nAppendix\n--------\n\nThe extend method adds one objects properties to another.\n\n    extend = (target, sources...) ->\n      for source in sources\n        for name of source\n          target[name] = source[name]\n\n      return target\n\nSuper hax for computing dependencies. This needs to be a shared global so that\ndifferent bundled versions of observable libraries can interoperate.\n\n    global.OBSERVABLE_ROOT_HACK = []\n\n    autoDeps = ->\n      last(global.OBSERVABLE_ROOT_HACK)\n\n    magicDependency = (self) ->\n      if observerStack = autoDeps()\n        observerStack.push self\n\n    withBase = (self, update, fn) ->\n      global.OBSERVABLE_ROOT_HACK.push(deps = [])\n\n      try\n        value = fn()\n        self._deps?.forEach (observable) ->\n          observable.stopObserving update\n\n        self._deps = deps\n\n        deps.forEach (observable) ->\n          observable.observe update\n      finally\n        global.OBSERVABLE_ROOT_HACK.pop()\n\n      return value\n\nAutomagically compute dependencies.\n\n    computeDependencies = (self, fn, update, context) ->\n      withBase self, update, ->\n        fn.call(context)\n\nRemove a value from an array.\n\n    remove = (array, value) ->\n      index = array.indexOf(value)\n\n      if index >= 0\n        array.splice(index, 1)[0]\n\n    copy = (array) ->\n      array.concat([])\n\n    get = (arg) ->\n      if typeof arg is \"function\"\n        arg()\n      else\n        arg\n\n    splat = (item) ->\n      results = []\n\n      if typeof item.forEach is \"function\"\n        item.forEach (i) ->\n          results.push i\n      else\n        result = get item\n\n        results.push result if result?\n\n      results\n\n    last = (array) ->\n      array[array.length - 1]\n\n    flatten = (array) ->\n      array.reduce (a, b) ->\n        a.concat(b)\n      , []\n",
              "mode": "100644",
              "type": "blob"
            },
            "pixie.cson": {
              "path": "pixie.cson",
              "content": "version: \"0.3.1\"\n",
              "mode": "100644",
              "type": "blob"
            },
            "test/observable.coffee": {
              "path": "test/observable.coffee",
              "content": "global.Observable = require \"../main\"\n\ndescribe 'Observable', ->\n  it 'should create an observable for an object', ->\n    n = 5\n\n    observable = Observable(n)\n\n    assert.equal(observable(), n)\n\n  it 'should fire events when setting', ->\n    string = \"yolo\"\n\n    observable = Observable(string)\n    observable.observe (newValue) ->\n      assert.equal newValue, \"4life\"\n\n    observable(\"4life\")\n\n  it 'should be idempotent', ->\n    o = Observable(5)\n\n    assert.equal o, Observable(o)\n\n  describe \"#each\", ->\n    it \"should be invoked once if there is an observable\", ->\n      o = Observable(5)\n      called = 0\n\n      o.each (value) ->\n        called += 1\n        assert.equal value, 5\n\n      assert.equal called, 1\n\n    it \"should not be invoked if observable is null\", ->\n      o = Observable(null)\n      called = 0\n\n      o.each (value) ->\n        called += 1\n\n      assert.equal called, 0\n\n  it \"should allow for stopping observation\", ->\n    observable = Observable(\"string\")\n\n    called = 0\n    fn = (newValue) ->\n      called += 1\n      assert.equal newValue, \"4life\"\n\n    observable.observe fn\n\n    observable(\"4life\")\n\n    observable.stopObserving fn\n\n    observable(\"wat\")\n\n    assert.equal called, 1\n\n  it \"should increment\", ->\n    observable = Observable 1\n\n    observable.increment(5)\n\n    assert.equal observable(), 6\n\n  it \"should decremnet\", ->\n    observable = Observable 1\n\n    observable.decrement 5\n\n    assert.equal observable(), -4\n\n  it \"should toggle\", ->\n    observable = Observable false\n\n    observable.toggle()\n    assert.equal observable(), true\n\n    observable.toggle()\n    assert.equal observable(), false\n\n  it \"should trigger when toggling\", (done) ->\n    observable = Observable true\n    observable.observe (v) ->\n      assert.equal v, false\n      done()\n\n    observable.toggle()\n\ndescribe \"Observable Array\", ->\n  it \"should proxy array methods\", ->\n    o = Observable [5]\n\n    o.map (n) ->\n      assert.equal n, 5\n\n  it \"should notify on mutation methods\", (done) ->\n    o = Observable []\n\n    o.observe (newValue) ->\n      assert.equal newValue[0], 1\n\n    o.push 1\n\n    done()\n\n  it \"should have an each method\", ->\n    o = Observable []\n\n    assert o.each\n\n  it \"#get\", ->\n    o = Observable [0, 1, 2, 3]\n\n    assert.equal o.get(2), 2\n\n  it \"#first\", ->\n    o = Observable [0, 1, 2, 3]\n\n    assert.equal o.first(), 0\n\n  it \"#last\", ->\n    o = Observable [0, 1, 2, 3]\n\n    assert.equal o.last(), 3\n\n  it \"#remove\", (done) ->\n    o = Observable [0, 1, 2, 3]\n\n    o.observe (newValue) ->\n      assert.equal newValue.length, 3\n      setTimeout ->\n        done()\n      , 0\n\n    assert.equal o.remove(2), 2\n\n  # TODO: This looks like it might be impossible\n  it \"should proxy the length property\"\n\ndescribe \"Observable functions\", ->\n  it \"should compute dependencies\", (done) ->\n    firstName = Observable \"Duder\"\n    lastName = Observable \"Man\"\n\n    o = Observable ->\n      \"#{firstName()} #{lastName()}\"\n\n    o.observe (newValue) ->\n      assert.equal newValue, \"Duder Bro\"\n\n      done()\n\n    lastName \"Bro\"\n\n  it \"should compute array#get as a dependency\", ->\n    observableArray = Observable [0, 1, 2]\n\n    observableFn = Observable ->\n      observableArray.get(0)\n\n    assert.equal observableFn(), 0\n\n    observableArray([5])\n\n    assert.equal observableFn(), 5\n\n  it \"should compute array#first as a dependency\", ->\n    observableArray = Observable [0, 1, 2]\n\n    observableFn = Observable ->\n      observableArray.first() + 1\n\n    assert.equal observableFn(), 1\n\n    observableArray([5])\n\n    assert.equal observableFn(), 6\n\n  it \"should compute array#last as a dependency\", ->\n    observableArray = Observable [0, 1, 2]\n\n    observableFn = Observable ->\n      observableArray.last()\n\n    assert.equal observableFn(), 2\n\n    observableArray.pop()\n\n    assert.equal observableFn(), 1\n\n    observableArray([5])\n\n    assert.equal observableFn(), 5\n\n  it \"should compute array#size as a dependency\", ->\n    observableArray = Observable [0, 1, 2]\n\n    observableFn = Observable ->\n      observableArray.size() * 2\n\n    assert.equal observableFn(), 6\n\n    observableArray.pop()\n    assert.equal observableFn(), 4\n    observableArray.shift()\n    assert.equal observableFn(), 2\n\n  it \"should allow double nesting\", (done) ->\n    bottom = Observable \"rad\"\n    middle = Observable ->\n      bottom()\n    top = Observable ->\n      middle()\n\n    top.observe (newValue) ->\n      assert.equal newValue, \"wat\"\n      assert.equal top(), newValue\n      assert.equal middle(), newValue\n\n      done()\n\n    bottom(\"wat\")\n\n  it \"should work with dynamic dependencies\", ->\n    observableArray = Observable []\n\n    dynamicObservable = Observable ->\n      observableArray.filter (item) ->\n        item.age() > 3\n\n    assert.equal dynamicObservable().length, 0\n\n    observableArray.push\n      age: Observable 1\n\n    observableArray()[0].age 5\n    assert.equal dynamicObservable().length, 1\n\n  it \"should work with context\", ->\n    model =\n      a: Observable \"Hello\"\n      b: Observable \"there\"\n\n    model.c = Observable ->\n      \"#{@a()} #{@b()}\"\n    , model\n\n    assert.equal model.c(), \"Hello there\"\n\n    model.b \"world\"\n\n    assert.equal model.c(), \"Hello world\"\n\n  it \"should be ok even if the function throws an exception\", ->\n    assert.throws ->\n      t = Observable ->\n        throw \"wat\"\n\n    # TODO: Should be able to find a test case that is affected by this rather that\n    # checking it directly\n    assert.equal global.OBSERVABLE_ROOT_HACK.length, 0\n\n  it \"should have an each method\", ->\n    o = Observable ->\n\n    assert o.each\n\n  it \"should not invoke when returning undefined\", ->\n    o = Observable ->\n\n    o.each ->\n      assert false\n\n  it \"should invoke when returning any defined value\", (done) ->\n    o = Observable -> 5\n\n    o.each (n) ->\n      assert.equal n, 5\n      done()\n\n  it \"should work on an array dependency\", ->\n    oA = Observable [1, 2, 3]\n\n    o = Observable ->\n      oA()[0]\n\n    last = Observable ->\n      oA()[oA().length-1]\n\n    assert.equal o(), 1\n\n    oA.unshift 0\n\n    assert.equal o(), 0\n\n    oA.push 4\n\n    assert.equal last(), 4, \"Last should be 4\"\n\n  it \"should work with multiple dependencies\", ->\n    letter = Observable \"A\"\n    checked = ->\n      l = letter()\n      @name().indexOf(l) is 0\n\n    first = {name: Observable(\"Andrew\")}\n    first.checked = Observable checked, first\n\n    second = {name: Observable(\"Benjamin\")}\n    second.checked = Observable checked, second\n\n    assert.equal first.checked(), true\n    assert.equal second.checked(), false\n\n    assert.equal letter.listeners.length, 2\n\n    letter \"B\"\n\n    assert.equal first.checked(), false\n    assert.equal second.checked(), true\n\n  it \"should work with nested observable construction\", ->\n    gen = Observable ->\n      Observable \"Duder\"\n\n    o = gen()\n\n    assert.equal o(), \"Duder\"\n\n    o(\"wat\")\n\n    assert.equal o(), \"wat\"\n\n  describe \"Scoping\", ->\n    it \"should be scoped to optional context\", (done) ->\n      model =\n        firstName: Observable \"Duder\"\n        lastName: Observable \"Man\"\n\n      model.name = Observable ->\n        \"#{@firstName()} #{@lastName()}\"\n      , model\n\n      model.name.observe (newValue) ->\n        assert.equal newValue, \"Duder Bro\"\n\n        done()\n\n      model.lastName \"Bro\"\n\n  describe \"concat\", ->\n    it \"should return an observable array that changes based on changes in inputs\", ->\n      numbers = Observable [1, 2, 3]\n      letters = Observable [\"a\", \"b\", \"c\"]\n      item = Observable({})\n      nullable = Observable null\n\n      observableArray = Observable.concat numbers, \"literal\", letters, item, nullable\n\n      assert.equal observableArray().length, 3 + 1 + 3 + 1\n\n      assert.equal observableArray()[0], 1\n      assert.equal observableArray()[3], \"literal\"\n      assert.equal observableArray()[4], \"a\"\n      assert.equal observableArray()[7], item()\n\n      numbers.push 4\n\n      assert.equal observableArray().length, 9\n\n      nullable \"cool\"\n\n      assert.equal observableArray().length, 10\n\n    it \"should work with observable functions that return arrays\", ->\n      item = Observable(\"wat\")\n\n      computedArray = Observable ->\n        [item()]\n\n      observableArray = Observable.concat computedArray, computedArray\n\n      assert.equal observableArray().length, 2\n\n      assert.equal observableArray()[1], \"wat\"\n\n      item \"yolo\"\n\n      assert.equal observableArray()[1], \"yolo\"\n\n    it \"should have a push method\", ->\n      observableArray = Observable.concat()\n\n      observable = Observable \"hey\"\n\n      observableArray.push observable\n\n      assert.equal observableArray()[0], \"hey\"\n\n      observable \"wat\"\n\n      assert.equal observableArray()[0], \"wat\"\n\n      observableArray.push \"cool\"\n      observableArray.push \"radical\"\n\n      assert.equal observableArray().length, 3\n\n    it \"should be observable\", (done) ->\n      observableArray = Observable.concat()\n\n      observableArray.observe (items) ->\n        assert.equal items.length, 3\n        done()\n\n      observableArray.push [\"A\", \"B\", \"C\"]\n\n    it \"should have an each method\", ->\n      observableArray = Observable.concat([\"A\", \"B\", \"C\"])\n\n      n = 0\n      observableArray.each () ->\n        n += 1\n\n      assert.equal n, 3\n",
              "mode": "100644",
              "type": "blob"
            }
          },
          "distribution": {
            "main": {
              "path": "main",
              "content": "(function() {\n  var Observable, autoDeps, computeDependencies, copy, extend, flatten, get, last, magicDependency, remove, splat, withBase,\n    __slice = [].slice;\n\n  Observable = function(value, context) {\n    var changed, fn, listeners, notify, notifyReturning, self;\n    if (typeof (value != null ? value.observe : void 0) === \"function\") {\n      return value;\n    }\n    listeners = [];\n    notify = function(newValue) {\n      return copy(listeners).forEach(function(listener) {\n        return listener(newValue);\n      });\n    };\n    if (typeof value === 'function') {\n      fn = value;\n      self = function() {\n        magicDependency(self);\n        return value;\n      };\n      self.each = function() {\n        var args, _ref;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        magicDependency(self);\n        return (_ref = splat(value)).forEach.apply(_ref, args);\n      };\n      changed = function() {\n        value = computeDependencies(self, fn, changed, context);\n        return notify(value);\n      };\n      value = computeDependencies(self, fn, changed, context);\n    } else {\n      self = function(newValue) {\n        if (arguments.length > 0) {\n          if (value !== newValue) {\n            value = newValue;\n            notify(newValue);\n          }\n        } else {\n          magicDependency(self);\n        }\n        return value;\n      };\n    }\n    self.each = function() {\n      var args, _ref;\n      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      magicDependency(self);\n      if (value != null) {\n        return (_ref = [value]).forEach.apply(_ref, args);\n      }\n    };\n    if (Array.isArray(value)) {\n      [\"concat\", \"every\", \"filter\", \"forEach\", \"indexOf\", \"join\", \"lastIndexOf\", \"map\", \"reduce\", \"reduceRight\", \"slice\", \"some\"].forEach(function(method) {\n        return self[method] = function() {\n          var args;\n          args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n          magicDependency(self);\n          return value[method].apply(value, args);\n        };\n      });\n      [\"pop\", \"push\", \"reverse\", \"shift\", \"splice\", \"sort\", \"unshift\"].forEach(function(method) {\n        return self[method] = function() {\n          var args;\n          args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n          return notifyReturning(value[method].apply(value, args));\n        };\n      });\n      notifyReturning = function(returnValue) {\n        notify(value);\n        return returnValue;\n      };\n      extend(self, {\n        each: function() {\n          var args;\n          args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n          self.forEach.apply(self, args);\n          return self;\n        },\n        remove: function(object) {\n          var index;\n          index = value.indexOf(object);\n          if (index >= 0) {\n            return notifyReturning(value.splice(index, 1)[0]);\n          }\n        },\n        get: function(index) {\n          magicDependency(self);\n          return value[index];\n        },\n        first: function() {\n          magicDependency(self);\n          return value[0];\n        },\n        last: function() {\n          magicDependency(self);\n          return value[value.length - 1];\n        },\n        size: function() {\n          magicDependency(self);\n          return value.length;\n        }\n      });\n    }\n    extend(self, {\n      listeners: listeners,\n      observe: function(listener) {\n        return listeners.push(listener);\n      },\n      stopObserving: function(fn) {\n        return remove(listeners, fn);\n      },\n      toggle: function() {\n        return self(!value);\n      },\n      increment: function(n) {\n        return self(value + n);\n      },\n      decrement: function(n) {\n        return self(value - n);\n      },\n      toString: function() {\n        return \"Observable(\" + value + \")\";\n      }\n    });\n    return self;\n  };\n\n  Observable.concat = function() {\n    var args, o;\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    args = Observable(args);\n    o = Observable(function() {\n      return flatten(args.map(splat));\n    });\n    o.push = args.push;\n    return o;\n  };\n\n  module.exports = Observable;\n\n  extend = function() {\n    var name, source, sources, target, _i, _len;\n    target = arguments[0], sources = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    for (_i = 0, _len = sources.length; _i < _len; _i++) {\n      source = sources[_i];\n      for (name in source) {\n        target[name] = source[name];\n      }\n    }\n    return target;\n  };\n\n  global.OBSERVABLE_ROOT_HACK = [];\n\n  autoDeps = function() {\n    return last(global.OBSERVABLE_ROOT_HACK);\n  };\n\n  magicDependency = function(self) {\n    var observerStack;\n    if (observerStack = autoDeps()) {\n      return observerStack.push(self);\n    }\n  };\n\n  withBase = function(self, update, fn) {\n    var deps, value, _ref;\n    global.OBSERVABLE_ROOT_HACK.push(deps = []);\n    try {\n      value = fn();\n      if ((_ref = self._deps) != null) {\n        _ref.forEach(function(observable) {\n          return observable.stopObserving(update);\n        });\n      }\n      self._deps = deps;\n      deps.forEach(function(observable) {\n        return observable.observe(update);\n      });\n    } finally {\n      global.OBSERVABLE_ROOT_HACK.pop();\n    }\n    return value;\n  };\n\n  computeDependencies = function(self, fn, update, context) {\n    return withBase(self, update, function() {\n      return fn.call(context);\n    });\n  };\n\n  remove = function(array, value) {\n    var index;\n    index = array.indexOf(value);\n    if (index >= 0) {\n      return array.splice(index, 1)[0];\n    }\n  };\n\n  copy = function(array) {\n    return array.concat([]);\n  };\n\n  get = function(arg) {\n    if (typeof arg === \"function\") {\n      return arg();\n    } else {\n      return arg;\n    }\n  };\n\n  splat = function(item) {\n    var result, results;\n    results = [];\n    if (typeof item.forEach === \"function\") {\n      item.forEach(function(i) {\n        return results.push(i);\n      });\n    } else {\n      result = get(item);\n      if (result != null) {\n        results.push(result);\n      }\n    }\n    return results;\n  };\n\n  last = function(array) {\n    return array[array.length - 1];\n  };\n\n  flatten = function(array) {\n    return array.reduce(function(a, b) {\n      return a.concat(b);\n    }, []);\n  };\n\n}).call(this);\n",
              "type": "blob"
            },
            "pixie": {
              "path": "pixie",
              "content": "module.exports = {\"version\":\"0.3.1\"};",
              "type": "blob"
            },
            "test/observable": {
              "path": "test/observable",
              "content": "(function() {\n  global.Observable = require(\"../main\");\n\n  describe('Observable', function() {\n    it('should create an observable for an object', function() {\n      var n, observable;\n      n = 5;\n      observable = Observable(n);\n      return assert.equal(observable(), n);\n    });\n    it('should fire events when setting', function() {\n      var observable, string;\n      string = \"yolo\";\n      observable = Observable(string);\n      observable.observe(function(newValue) {\n        return assert.equal(newValue, \"4life\");\n      });\n      return observable(\"4life\");\n    });\n    it('should be idempotent', function() {\n      var o;\n      o = Observable(5);\n      return assert.equal(o, Observable(o));\n    });\n    describe(\"#each\", function() {\n      it(\"should be invoked once if there is an observable\", function() {\n        var called, o;\n        o = Observable(5);\n        called = 0;\n        o.each(function(value) {\n          called += 1;\n          return assert.equal(value, 5);\n        });\n        return assert.equal(called, 1);\n      });\n      return it(\"should not be invoked if observable is null\", function() {\n        var called, o;\n        o = Observable(null);\n        called = 0;\n        o.each(function(value) {\n          return called += 1;\n        });\n        return assert.equal(called, 0);\n      });\n    });\n    it(\"should allow for stopping observation\", function() {\n      var called, fn, observable;\n      observable = Observable(\"string\");\n      called = 0;\n      fn = function(newValue) {\n        called += 1;\n        return assert.equal(newValue, \"4life\");\n      };\n      observable.observe(fn);\n      observable(\"4life\");\n      observable.stopObserving(fn);\n      observable(\"wat\");\n      return assert.equal(called, 1);\n    });\n    it(\"should increment\", function() {\n      var observable;\n      observable = Observable(1);\n      observable.increment(5);\n      return assert.equal(observable(), 6);\n    });\n    it(\"should decremnet\", function() {\n      var observable;\n      observable = Observable(1);\n      observable.decrement(5);\n      return assert.equal(observable(), -4);\n    });\n    it(\"should toggle\", function() {\n      var observable;\n      observable = Observable(false);\n      observable.toggle();\n      assert.equal(observable(), true);\n      observable.toggle();\n      return assert.equal(observable(), false);\n    });\n    return it(\"should trigger when toggling\", function(done) {\n      var observable;\n      observable = Observable(true);\n      observable.observe(function(v) {\n        assert.equal(v, false);\n        return done();\n      });\n      return observable.toggle();\n    });\n  });\n\n  describe(\"Observable Array\", function() {\n    it(\"should proxy array methods\", function() {\n      var o;\n      o = Observable([5]);\n      return o.map(function(n) {\n        return assert.equal(n, 5);\n      });\n    });\n    it(\"should notify on mutation methods\", function(done) {\n      var o;\n      o = Observable([]);\n      o.observe(function(newValue) {\n        return assert.equal(newValue[0], 1);\n      });\n      o.push(1);\n      return done();\n    });\n    it(\"should have an each method\", function() {\n      var o;\n      o = Observable([]);\n      return assert(o.each);\n    });\n    it(\"#get\", function() {\n      var o;\n      o = Observable([0, 1, 2, 3]);\n      return assert.equal(o.get(2), 2);\n    });\n    it(\"#first\", function() {\n      var o;\n      o = Observable([0, 1, 2, 3]);\n      return assert.equal(o.first(), 0);\n    });\n    it(\"#last\", function() {\n      var o;\n      o = Observable([0, 1, 2, 3]);\n      return assert.equal(o.last(), 3);\n    });\n    it(\"#remove\", function(done) {\n      var o;\n      o = Observable([0, 1, 2, 3]);\n      o.observe(function(newValue) {\n        assert.equal(newValue.length, 3);\n        return setTimeout(function() {\n          return done();\n        }, 0);\n      });\n      return assert.equal(o.remove(2), 2);\n    });\n    return it(\"should proxy the length property\");\n  });\n\n  describe(\"Observable functions\", function() {\n    it(\"should compute dependencies\", function(done) {\n      var firstName, lastName, o;\n      firstName = Observable(\"Duder\");\n      lastName = Observable(\"Man\");\n      o = Observable(function() {\n        return \"\" + (firstName()) + \" \" + (lastName());\n      });\n      o.observe(function(newValue) {\n        assert.equal(newValue, \"Duder Bro\");\n        return done();\n      });\n      return lastName(\"Bro\");\n    });\n    it(\"should compute array#get as a dependency\", function() {\n      var observableArray, observableFn;\n      observableArray = Observable([0, 1, 2]);\n      observableFn = Observable(function() {\n        return observableArray.get(0);\n      });\n      assert.equal(observableFn(), 0);\n      observableArray([5]);\n      return assert.equal(observableFn(), 5);\n    });\n    it(\"should compute array#first as a dependency\", function() {\n      var observableArray, observableFn;\n      observableArray = Observable([0, 1, 2]);\n      observableFn = Observable(function() {\n        return observableArray.first() + 1;\n      });\n      assert.equal(observableFn(), 1);\n      observableArray([5]);\n      return assert.equal(observableFn(), 6);\n    });\n    it(\"should compute array#last as a dependency\", function() {\n      var observableArray, observableFn;\n      observableArray = Observable([0, 1, 2]);\n      observableFn = Observable(function() {\n        return observableArray.last();\n      });\n      assert.equal(observableFn(), 2);\n      observableArray.pop();\n      assert.equal(observableFn(), 1);\n      observableArray([5]);\n      return assert.equal(observableFn(), 5);\n    });\n    it(\"should compute array#size as a dependency\", function() {\n      var observableArray, observableFn;\n      observableArray = Observable([0, 1, 2]);\n      observableFn = Observable(function() {\n        return observableArray.size() * 2;\n      });\n      assert.equal(observableFn(), 6);\n      observableArray.pop();\n      assert.equal(observableFn(), 4);\n      observableArray.shift();\n      return assert.equal(observableFn(), 2);\n    });\n    it(\"should allow double nesting\", function(done) {\n      var bottom, middle, top;\n      bottom = Observable(\"rad\");\n      middle = Observable(function() {\n        return bottom();\n      });\n      top = Observable(function() {\n        return middle();\n      });\n      top.observe(function(newValue) {\n        assert.equal(newValue, \"wat\");\n        assert.equal(top(), newValue);\n        assert.equal(middle(), newValue);\n        return done();\n      });\n      return bottom(\"wat\");\n    });\n    it(\"should work with dynamic dependencies\", function() {\n      var dynamicObservable, observableArray;\n      observableArray = Observable([]);\n      dynamicObservable = Observable(function() {\n        return observableArray.filter(function(item) {\n          return item.age() > 3;\n        });\n      });\n      assert.equal(dynamicObservable().length, 0);\n      observableArray.push({\n        age: Observable(1)\n      });\n      observableArray()[0].age(5);\n      return assert.equal(dynamicObservable().length, 1);\n    });\n    it(\"should work with context\", function() {\n      var model;\n      model = {\n        a: Observable(\"Hello\"),\n        b: Observable(\"there\")\n      };\n      model.c = Observable(function() {\n        return \"\" + (this.a()) + \" \" + (this.b());\n      }, model);\n      assert.equal(model.c(), \"Hello there\");\n      model.b(\"world\");\n      return assert.equal(model.c(), \"Hello world\");\n    });\n    it(\"should be ok even if the function throws an exception\", function() {\n      assert.throws(function() {\n        var t;\n        return t = Observable(function() {\n          throw \"wat\";\n        });\n      });\n      return assert.equal(global.OBSERVABLE_ROOT_HACK.length, 0);\n    });\n    it(\"should have an each method\", function() {\n      var o;\n      o = Observable(function() {});\n      return assert(o.each);\n    });\n    it(\"should not invoke when returning undefined\", function() {\n      var o;\n      o = Observable(function() {});\n      return o.each(function() {\n        return assert(false);\n      });\n    });\n    it(\"should invoke when returning any defined value\", function(done) {\n      var o;\n      o = Observable(function() {\n        return 5;\n      });\n      return o.each(function(n) {\n        assert.equal(n, 5);\n        return done();\n      });\n    });\n    it(\"should work on an array dependency\", function() {\n      var last, o, oA;\n      oA = Observable([1, 2, 3]);\n      o = Observable(function() {\n        return oA()[0];\n      });\n      last = Observable(function() {\n        return oA()[oA().length - 1];\n      });\n      assert.equal(o(), 1);\n      oA.unshift(0);\n      assert.equal(o(), 0);\n      oA.push(4);\n      return assert.equal(last(), 4, \"Last should be 4\");\n    });\n    it(\"should work with multiple dependencies\", function() {\n      var checked, first, letter, second;\n      letter = Observable(\"A\");\n      checked = function() {\n        var l;\n        l = letter();\n        return this.name().indexOf(l) === 0;\n      };\n      first = {\n        name: Observable(\"Andrew\")\n      };\n      first.checked = Observable(checked, first);\n      second = {\n        name: Observable(\"Benjamin\")\n      };\n      second.checked = Observable(checked, second);\n      assert.equal(first.checked(), true);\n      assert.equal(second.checked(), false);\n      assert.equal(letter.listeners.length, 2);\n      letter(\"B\");\n      assert.equal(first.checked(), false);\n      return assert.equal(second.checked(), true);\n    });\n    it(\"should work with nested observable construction\", function() {\n      var gen, o;\n      gen = Observable(function() {\n        return Observable(\"Duder\");\n      });\n      o = gen();\n      assert.equal(o(), \"Duder\");\n      o(\"wat\");\n      return assert.equal(o(), \"wat\");\n    });\n    describe(\"Scoping\", function() {\n      return it(\"should be scoped to optional context\", function(done) {\n        var model;\n        model = {\n          firstName: Observable(\"Duder\"),\n          lastName: Observable(\"Man\")\n        };\n        model.name = Observable(function() {\n          return \"\" + (this.firstName()) + \" \" + (this.lastName());\n        }, model);\n        model.name.observe(function(newValue) {\n          assert.equal(newValue, \"Duder Bro\");\n          return done();\n        });\n        return model.lastName(\"Bro\");\n      });\n    });\n    return describe(\"concat\", function() {\n      it(\"should return an observable array that changes based on changes in inputs\", function() {\n        var item, letters, nullable, numbers, observableArray;\n        numbers = Observable([1, 2, 3]);\n        letters = Observable([\"a\", \"b\", \"c\"]);\n        item = Observable({});\n        nullable = Observable(null);\n        observableArray = Observable.concat(numbers, \"literal\", letters, item, nullable);\n        assert.equal(observableArray().length, 3 + 1 + 3 + 1);\n        assert.equal(observableArray()[0], 1);\n        assert.equal(observableArray()[3], \"literal\");\n        assert.equal(observableArray()[4], \"a\");\n        assert.equal(observableArray()[7], item());\n        numbers.push(4);\n        assert.equal(observableArray().length, 9);\n        nullable(\"cool\");\n        return assert.equal(observableArray().length, 10);\n      });\n      it(\"should work with observable functions that return arrays\", function() {\n        var computedArray, item, observableArray;\n        item = Observable(\"wat\");\n        computedArray = Observable(function() {\n          return [item()];\n        });\n        observableArray = Observable.concat(computedArray, computedArray);\n        assert.equal(observableArray().length, 2);\n        assert.equal(observableArray()[1], \"wat\");\n        item(\"yolo\");\n        return assert.equal(observableArray()[1], \"yolo\");\n      });\n      it(\"should have a push method\", function() {\n        var observable, observableArray;\n        observableArray = Observable.concat();\n        observable = Observable(\"hey\");\n        observableArray.push(observable);\n        assert.equal(observableArray()[0], \"hey\");\n        observable(\"wat\");\n        assert.equal(observableArray()[0], \"wat\");\n        observableArray.push(\"cool\");\n        observableArray.push(\"radical\");\n        return assert.equal(observableArray().length, 3);\n      });\n      it(\"should be observable\", function(done) {\n        var observableArray;\n        observableArray = Observable.concat();\n        observableArray.observe(function(items) {\n          assert.equal(items.length, 3);\n          return done();\n        });\n        return observableArray.push([\"A\", \"B\", \"C\"]);\n      });\n      return it(\"should have an each method\", function() {\n        var n, observableArray;\n        observableArray = Observable.concat([\"A\", \"B\", \"C\"]);\n        n = 0;\n        observableArray.each(function() {\n          return n += 1;\n        });\n        return assert.equal(n, 3);\n      });\n    });\n  });\n\n}).call(this);\n",
              "type": "blob"
            }
          },
          "progenitor": {
            "url": "http://www.danielx.net/editor/"
          },
          "version": "0.3.1",
          "entryPoint": "main",
          "repository": {
            "branch": "v0.3.1",
            "default_branch": "master",
            "full_name": "distri/observable",
            "homepage": "http://observable.us",
            "description": "",
            "html_url": "https://github.com/distri/observable",
            "url": "https://api.github.com/repos/distri/observable",
            "publishBranch": "gh-pages"
          },
          "dependencies": {}
        },
        "q": {
          "source": {
            "README.md": {
              "path": "README.md",
              "content": "q\n=\n\nPackaging q for distri\n",
              "mode": "100644",
              "type": "blob"
            },
            "main.js": {
              "path": "main.js",
              "content": "/*!\n *\n * Copyright 2009-2012 Kris Kowal under the terms of the MIT\n * license found at http://github.com/kriskowal/q/raw/master/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n(function(a){if(typeof bootstrap===\"function\"){bootstrap(\"promise\",a)}else{if(typeof exports===\"object\"){module.exports=a()}else{if(typeof define===\"function\"&&define.amd){define(a)}else{if(typeof ses!==\"undefined\"){if(!ses.ok()){return}else{ses.makeQ=a}}else{Q=a()}}}}})(function(){var E=false;try{throw new Error()}catch(ah){E=!!ah.stack}var u=W();var j;var ad=function(){};var ai=(function(){var ap={task:void 0,next:null};var ao=ap;var ar=false;var al=void 0;var an=false;function e(){while(ap.next){ap=ap.next;var at=ap.task;ap.task=void 0;var au=ap.domain;if(au){ap.domain=void 0;au.enter()}try{at()}catch(av){if(an){if(au){au.exit()}setTimeout(e,0);if(au){au.enter()}throw av}else{setTimeout(function(){throw av},0)}}if(au){au.exit()}}ar=false}ai=function(at){ao=ao.next={task:at,domain:an&&process.domain,next:null};if(!ar){ar=true;al()}};if(typeof process!==\"undefined\"&&process.nextTick){an=true;al=function(){process.nextTick(e)}}else{if(typeof setImmediate===\"function\"){if(typeof window!==\"undefined\"){al=setImmediate.bind(window,e)}else{al=function(){setImmediate(e)}}}else{if(typeof MessageChannel!==\"undefined\"){var aq=new MessageChannel();aq.port1.onmessage=function(){al=am;aq.port1.onmessage=e;e()};var am=function(){aq.port2.postMessage(0)};al=function(){setTimeout(e,0);am()}}else{al=function(){setTimeout(e,0)}}}}return ai})();var a=Function.call;function p(e){return function(){return a.apply(e,arguments)}}var ab=p(Array.prototype.slice);var c=p(Array.prototype.reduce||function(an,am){var e=0,al=this.length;if(arguments.length===1){do{if(e in this){am=this[e++];break}if(++e>=al){throw new TypeError()}}while(1)}for(;e<al;e++){if(e in this){am=an(am,this[e],e)}}return am});var R=p(Array.prototype.indexOf||function(al){for(var e=0;e<this.length;e++){if(this[e]===al){return e}}return -1});var b=p(Array.prototype.map||function(an,al){var e=this;var am=[];c(e,function(aq,ap,ao){am.push(an.call(al,ap,ao,e))},void 0);return am});var H=Object.create||function(al){function e(){}e.prototype=al;return new e()};var A=p(Object.prototype.hasOwnProperty);var G=Object.keys||function(e){var am=[];for(var al in e){if(A(e,al)){am.push(al)}}return am};var ak=p(Object.prototype.toString);function V(e){return e===Object(e)}function w(e){return(ak(e)===\"[object StopIteration]\"||e instanceof I)}var I;if(typeof ReturnValue!==\"undefined\"){I=ReturnValue}else{I=function(e){this.value=e}}var Y=\"From previous event:\";function m(e,ao){if(E&&ao.stack&&typeof e===\"object\"&&e!==null&&e.stack&&e.stack.indexOf(Y)===-1){var am=[];for(var an=ao;!!an;an=an.source){if(an.stack){am.unshift(an.stack)}}am.unshift(e.stack);var al=am.join(\"\\n\"+Y+\"\\n\");e.stack=K(al)}}function K(an){var al=an.split(\"\\n\");var ao=[];for(var am=0;am<al.length;++am){var e=al[am];if(!g(e)&&!Z(e)&&e){ao.push(e)}}return ao.join(\"\\n\")}function Z(e){return e.indexOf(\"(module.js:\")!==-1||e.indexOf(\"(node.js:\")!==-1}function af(e){var an=/at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(e);if(an){return[an[1],Number(an[2])]}var am=/at ([^ ]+):(\\d+):(?:\\d+)$/.exec(e);if(am){return[am[1],Number(am[2])]}var al=/.*@(.+):(\\d+)$/.exec(e);if(al){return[al[1],Number(al[2])]}}function g(al){var am=af(al);if(!am){return false}var an=am[0];var e=am[1];return an===j&&e>=u&&e<=s}function W(){if(!E){return}try{throw new Error()}catch(ao){var al=ao.stack.split(\"\\n\");var am=al[0].indexOf(\"@\")>0?al[1]:al[2];var an=af(am);if(!an){return}j=an[0];return an[1]}}function C(am,e,al){return function(){if(typeof console!==\"undefined\"&&typeof console.warn===\"function\"){console.warn(e+\" is deprecated, use \"+al+\" instead.\",new Error(\"\").stack)}return am.apply(am,arguments)}}function l(e){if(y(e)){return e}if(M(e)){return L(e)}else{return z(e)}}l.resolve=l;l.nextTick=ai;l.longStackSupport=false;l.defer=h;function h(){var an=[],ap=[],ao;var al=H(h.prototype);var ar=H(N.prototype);ar.promiseDispatch=function(au,av,at){var e=ab(arguments);if(an){an.push(e);if(av===\"when\"&&at[1]){ap.push(at[1])}}else{ai(function(){ao.promiseDispatch.apply(ao,e)})}};ar.valueOf=function(){if(an){return ar}var e=J(ao);if(y(e)){ao=e}return e};ar.inspect=function(){if(!ao){return{state:\"pending\"}}return ao.inspect()};if(l.longStackSupport&&E){try{throw new Error()}catch(aq){ar.stack=aq.stack.substring(aq.stack.indexOf(\"\\n\")+1)}}function am(e){ao=e;ar.source=e;c(an,function(au,at){ai(function(){e.promiseDispatch.apply(e,at)})},void 0);an=void 0;ap=void 0}al.promise=ar;al.resolve=function(e){if(ao){return}am(l(e))};al.fulfill=function(e){if(ao){return}am(z(e))};al.reject=function(e){if(ao){return}am(D(e))};al.notify=function(e){if(ao){return}c(ap,function(au,at){ai(function(){at(e)})},void 0)};return al}h.prototype.makeNodeResolver=function(){var e=this;return function(al,am){if(al){e.reject(al)}else{if(arguments.length>2){e.resolve(ab(arguments,1))}else{e.resolve(am)}}}};l.Promise=T;l.promise=T;function T(am){if(typeof am!==\"function\"){throw new TypeError(\"resolver must be a function.\")}var e=h();try{am(e.resolve,e.reject,e.notify)}catch(al){e.reject(al)}return e.promise}T.race=n;T.all=x;T.reject=D;T.resolve=l;l.passByCopy=function(e){return e};N.prototype.passByCopy=function(){return this};l.join=function(e,al){return l(e).join(al)};N.prototype.join=function(e){return l([this,e]).spread(function(al,am){if(al===am){return al}else{throw new Error(\"Can't join: not the same: \"+al+\" \"+am)}})};l.race=n;function n(e){return T(function(ao,an){for(var am=0,al=e.length;am<al;am++){l(e[am]).then(ao,an)}})}N.prototype.race=function(){return this.then(l.race)};l.makePromise=N;function N(al,ao,an){if(ao===void 0){ao=function(ap){return D(new Error(\"Promise does not support operation: \"+ap))}}if(an===void 0){an=function(){return{state:\"unknown\"}}}var am=H(N.prototype);am.promiseDispatch=function(at,au,aq){var ap;try{if(al[au]){ap=al[au].apply(am,aq)}else{ap=ao.call(am,au,aq)}}catch(ar){ap=D(ar)}if(at){at(ap)}};am.inspect=an;if(an){var e=an();if(e.state===\"rejected\"){am.exception=e.reason}am.valueOf=function(){var ap=an();if(ap.state===\"pending\"||ap.state===\"rejected\"){return am}return ap.value}}return am}N.prototype.toString=function(){return\"[object Promise]\"};N.prototype.then=function(ao,ap,al){var aq=this;var ar=h();var am=false;function an(av){try{return typeof ao===\"function\"?ao(av):av}catch(au){return D(au)}}function at(au){if(typeof ap===\"function\"){m(au,aq);try{return ap(au)}catch(av){return D(av)}}return D(au)}function e(au){return typeof al===\"function\"?al(au):au}ai(function(){aq.promiseDispatch(function(au){if(am){return}am=true;ar.resolve(an(au))},\"when\",[function(au){if(am){return}am=true;ar.resolve(at(au))}])});aq.promiseDispatch(void 0,\"when\",[void 0,function(au){var aw;var ax=false;try{aw=e(au)}catch(av){ax=true;if(l.onerror){l.onerror(av)}else{throw av}}if(!ax){ar.notify(aw)}}]);return ar.promise};l.when=O;function O(am,e,al,an){return l(am).then(e,al,an)}N.prototype.thenResolve=function(e){return this.then(function(){return e})};l.thenResolve=function(al,e){return l(al).thenResolve(e)};N.prototype.thenReject=function(e){return this.then(function(){throw e})};l.thenReject=function(al,e){return l(al).thenReject(e)};l.nearer=J;function J(al){if(y(al)){var e=al.inspect();if(e.state===\"fulfilled\"){return e.value}}return al}l.isPromise=y;function y(e){return V(e)&&typeof e.promiseDispatch===\"function\"&&typeof e.inspect===\"function\"}l.isPromiseAlike=M;function M(e){return V(e)&&typeof e.then===\"function\"}l.isPending=ac;function ac(e){return y(e)&&e.inspect().state===\"pending\"}N.prototype.isPending=function(){return this.inspect().state===\"pending\"};l.isFulfilled=P;function P(e){return !y(e)||e.inspect().state===\"fulfilled\"}N.prototype.isFulfilled=function(){return this.inspect().state===\"fulfilled\"};l.isRejected=U;function U(e){return y(e)&&e.inspect().state===\"rejected\"}N.prototype.isRejected=function(){return this.inspect().state===\"rejected\"};var aa=[];var aj=[];var o=true;function ag(){aa.length=0;aj.length=0;if(!o){o=true}}function B(al,e){if(!o){return}aj.push(al);if(e&&typeof e.stack!==\"undefined\"){aa.push(e.stack)}else{aa.push(\"(no stack) \"+e)}}function k(al){if(!o){return}var e=R(aj,al);if(e!==-1){aj.splice(e,1);aa.splice(e,1)}}l.resetUnhandledRejections=ag;l.getUnhandledReasons=function(){return aa.slice()};l.stopUnhandledRejectionTracking=function(){ag();o=false};ag();l.reject=D;function D(al){var e=N({when:function(ao){if(ao){k(this)}return ao?ao(al):this}},function an(){return this},function am(){return{state:\"rejected\",reason:al}});B(e,al);return e}l.fulfill=z;function z(e){return N({when:function(){return e},get:function(am){return e[am]},set:function(am,an){e[am]=an},\"delete\":function(am){delete e[am]},post:function(an,am){if(an===null||an===void 0){return e.apply(void 0,am)}else{return e[an].apply(e,am)}},apply:function(an,am){return e.apply(an,am)},keys:function(){return G(e)}},void 0,function al(){return{state:\"fulfilled\",value:e}})}function L(al){var e=h();ai(function(){try{al.then(e.resolve,e.reject,e.notify)}catch(am){e.reject(am)}});return e.promise}l.master=v;function v(e){return N({isDef:function(){}},function al(an,am){return X(e,an,am)},function(){return l(e).inspect()})}l.spread=f;function f(am,e,al){return l(am).spread(e,al)}N.prototype.spread=function(e,al){return this.all().then(function(am){return e.apply(void 0,am)},al)};l.async=S;function S(e){return function(){function am(at,aq){var ap;if(typeof StopIteration===\"undefined\"){try{ap=an[at](aq)}catch(ar){return D(ar)}if(ap.done){return ap.value}else{return O(ap.value,ao,al)}}else{try{ap=an[at](aq)}catch(ar){if(w(ar)){return ar.value}else{return D(ar)}}return O(ap,ao,al)}}var an=e.apply(this,arguments);var ao=am.bind(am,\"next\");var al=am.bind(am,\"throw\");return ao()}}l.spawn=r;function r(e){l.done(l.async(e)())}l[\"return\"]=i;function i(e){throw new I(e)}l.promised=q;function q(e){return function(){return f([this,x(arguments)],function(al,am){return e.apply(al,am)})}}l.dispatch=X;function X(al,am,e){return l(al).dispatch(am,e)}N.prototype.dispatch=function(an,am){var al=this;var e=h();ai(function(){al.promiseDispatch(e.resolve,an,am)});return e.promise};l.get=function(e,al){return l(e).dispatch(\"get\",[al])};N.prototype.get=function(e){return this.dispatch(\"get\",[e])};l.set=function(e,al,am){return l(e).dispatch(\"set\",[al,am])};N.prototype.set=function(e,al){return this.dispatch(\"set\",[e,al])};l.del=l[\"delete\"]=function(e,al){return l(e).dispatch(\"delete\",[al])};N.prototype.del=N.prototype[\"delete\"]=function(e){return this.dispatch(\"delete\",[e])};l.mapply=l.post=function(am,al,e){return l(am).dispatch(\"post\",[al,e])};N.prototype.mapply=N.prototype.post=function(al,e){return this.dispatch(\"post\",[al,e])};l.send=l.mcall=l.invoke=function(al,e){return l(al).dispatch(\"post\",[e,ab(arguments,2)])};N.prototype.send=N.prototype.mcall=N.prototype.invoke=function(e){return this.dispatch(\"post\",[e,ab(arguments,1)])};l.fapply=function(al,e){return l(al).dispatch(\"apply\",[void 0,e])};N.prototype.fapply=function(e){return this.dispatch(\"apply\",[void 0,e])};l[\"try\"]=l.fcall=function(e){return l(e).dispatch(\"apply\",[void 0,ab(arguments,1)])};N.prototype.fcall=function(){return this.dispatch(\"apply\",[void 0,ab(arguments)])};l.fbind=function(al){var an=l(al);var e=ab(arguments,1);return function am(){return an.dispatch(\"apply\",[this,e.concat(ab(arguments))])}};N.prototype.fbind=function(){var am=this;var e=ab(arguments);return function al(){return am.dispatch(\"apply\",[this,e.concat(ab(arguments))])}};l.keys=function(e){return l(e).dispatch(\"keys\",[])};N.prototype.keys=function(){return this.dispatch(\"keys\",[])};l.all=x;function x(e){return O(e,function(an){var am=0;var al=h();c(an,function(ar,aq,ap){var ao;if(y(aq)&&(ao=aq.inspect()).state===\"fulfilled\"){an[ap]=ao.value}else{++am;O(aq,function(at){an[ap]=at;if(--am===0){al.resolve(an)}},al.reject,function(at){al.notify({index:ap,value:at})})}},void 0);if(am===0){al.resolve(an)}return al.promise})}N.prototype.all=function(){return x(this)};l.allResolved=C(d,\"allResolved\",\"allSettled\");function d(e){return O(e,function(al){al=b(al,l);return O(x(b(al,function(am){return O(am,ad,ad)})),function(){return al})})}N.prototype.allResolved=function(){return d(this)};l.allSettled=t;function t(e){return l(e).allSettled()}N.prototype.allSettled=function(){return this.then(function(e){return x(b(e,function(am){am=l(am);function al(){return am.inspect()}return am.then(al,al)}))})};l.fail=l[\"catch\"]=function(e,al){return l(e).then(void 0,al)};N.prototype.fail=N.prototype[\"catch\"]=function(e){return this.then(void 0,e)};l.progress=F;function F(e,al){return l(e).then(void 0,void 0,al)}N.prototype.progress=function(e){return this.then(void 0,void 0,e)};l.fin=l[\"finally\"]=function(e,al){return l(e)[\"finally\"](al)};N.prototype.fin=N.prototype[\"finally\"]=function(e){e=l(e);return this.then(function(al){return e.fcall().then(function(){return al})},function(al){return e.fcall().then(function(){throw al})})};l.done=function(am,e,an,al){return l(am).done(e,an,al)};N.prototype.done=function(e,an,am){var al=function(ap){ai(function(){m(ap,ao);if(l.onerror){l.onerror(ap)}else{throw ap}})};var ao=e||an||am?this.then(e,an,am):this;if(typeof process===\"object\"&&process&&process.domain){al=process.domain.bind(al)}ao.then(void 0,al)};l.timeout=function(al,e,am){return l(al).timeout(e,am)};N.prototype.timeout=function(al,am){var e=h();var an=setTimeout(function(){e.reject(new Error(am||\"Timed out after \"+al+\" ms\"))},al);this.then(function(ao){clearTimeout(an);e.resolve(ao)},function(ao){clearTimeout(an);e.reject(ao)},e.notify);return e.promise};l.delay=function(e,al){if(al===void 0){al=e;e=void 0}return l(e).delay(al)};N.prototype.delay=function(e){return this.then(function(am){var al=h();setTimeout(function(){al.resolve(am)},e);return al.promise})};l.nfapply=function(al,e){return l(al).nfapply(e)};N.prototype.nfapply=function(al){var e=h();var am=ab(al);am.push(e.makeNodeResolver());this.fapply(am).fail(e.reject);return e.promise};l.nfcall=function(al){var e=ab(arguments,1);return l(al).nfapply(e)};N.prototype.nfcall=function(){var al=ab(arguments);var e=h();al.push(e.makeNodeResolver());this.fapply(al).fail(e.reject);return e.promise};l.nfbind=l.denodeify=function(al){var e=ab(arguments,1);return function(){var an=e.concat(ab(arguments));var am=h();an.push(am.makeNodeResolver());l(al).fapply(an).fail(am.reject);return am.promise}};N.prototype.nfbind=N.prototype.denodeify=function(){var e=ab(arguments);e.unshift(this);return l.denodeify.apply(void 0,e)};l.nbind=function(am,e){var al=ab(arguments,2);return function(){var ap=al.concat(ab(arguments));var an=h();ap.push(an.makeNodeResolver());function ao(){return am.apply(e,arguments)}l(ao).fapply(ap).fail(an.reject);return an.promise}};N.prototype.nbind=function(){var e=ab(arguments,0);e.unshift(this);return l.nbind.apply(void 0,e)};l.nmapply=l.npost=function(am,al,e){return l(am).npost(al,e)};N.prototype.nmapply=N.prototype.npost=function(am,al){var an=ab(al||[]);var e=h();an.push(e.makeNodeResolver());this.dispatch(\"post\",[am,an]).fail(e.reject);return e.promise};l.nsend=l.nmcall=l.ninvoke=function(am,al){var an=ab(arguments,2);var e=h();an.push(e.makeNodeResolver());l(am).dispatch(\"post\",[al,an]).fail(e.reject);return e.promise};N.prototype.nsend=N.prototype.nmcall=N.prototype.ninvoke=function(al){var am=ab(arguments,1);var e=h();am.push(e.makeNodeResolver());this.dispatch(\"post\",[al,am]).fail(e.reject);return e.promise};l.nodeify=ae;function ae(al,e){return l(al).nodeify(e)}N.prototype.nodeify=function(e){if(e){this.then(function(al){ai(function(){e(null,al)})},function(al){ai(function(){e(al)})})}else{return this}};var s=W();return l});\n",
              "mode": "100644"
            },
            "pixie.cson": {
              "path": "pixie.cson",
              "content": "version: \"1.0.1\"\n",
              "mode": "100644"
            },
            "test/test.coffee": {
              "path": "test/test.coffee",
              "content": "Q = require \"../main\"\n\ndescribe \"q\", ->\n  it \"should be a promise library\", (done) ->\n\n    Q(\"wat\").then (value) ->\n      assert.equal value, \"wat\"\n      done()\n    .done()\n",
              "mode": "100644"
            }
          },
          "distribution": {
            "main": {
              "path": "main",
              "content": "/*!\n *\n * Copyright 2009-2012 Kris Kowal under the terms of the MIT\n * license found at http://github.com/kriskowal/q/raw/master/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n(function(a){if(typeof bootstrap===\"function\"){bootstrap(\"promise\",a)}else{if(typeof exports===\"object\"){module.exports=a()}else{if(typeof define===\"function\"&&define.amd){define(a)}else{if(typeof ses!==\"undefined\"){if(!ses.ok()){return}else{ses.makeQ=a}}else{Q=a()}}}}})(function(){var E=false;try{throw new Error()}catch(ah){E=!!ah.stack}var u=W();var j;var ad=function(){};var ai=(function(){var ap={task:void 0,next:null};var ao=ap;var ar=false;var al=void 0;var an=false;function e(){while(ap.next){ap=ap.next;var at=ap.task;ap.task=void 0;var au=ap.domain;if(au){ap.domain=void 0;au.enter()}try{at()}catch(av){if(an){if(au){au.exit()}setTimeout(e,0);if(au){au.enter()}throw av}else{setTimeout(function(){throw av},0)}}if(au){au.exit()}}ar=false}ai=function(at){ao=ao.next={task:at,domain:an&&process.domain,next:null};if(!ar){ar=true;al()}};if(typeof process!==\"undefined\"&&process.nextTick){an=true;al=function(){process.nextTick(e)}}else{if(typeof setImmediate===\"function\"){if(typeof window!==\"undefined\"){al=setImmediate.bind(window,e)}else{al=function(){setImmediate(e)}}}else{if(typeof MessageChannel!==\"undefined\"){var aq=new MessageChannel();aq.port1.onmessage=function(){al=am;aq.port1.onmessage=e;e()};var am=function(){aq.port2.postMessage(0)};al=function(){setTimeout(e,0);am()}}else{al=function(){setTimeout(e,0)}}}}return ai})();var a=Function.call;function p(e){return function(){return a.apply(e,arguments)}}var ab=p(Array.prototype.slice);var c=p(Array.prototype.reduce||function(an,am){var e=0,al=this.length;if(arguments.length===1){do{if(e in this){am=this[e++];break}if(++e>=al){throw new TypeError()}}while(1)}for(;e<al;e++){if(e in this){am=an(am,this[e],e)}}return am});var R=p(Array.prototype.indexOf||function(al){for(var e=0;e<this.length;e++){if(this[e]===al){return e}}return -1});var b=p(Array.prototype.map||function(an,al){var e=this;var am=[];c(e,function(aq,ap,ao){am.push(an.call(al,ap,ao,e))},void 0);return am});var H=Object.create||function(al){function e(){}e.prototype=al;return new e()};var A=p(Object.prototype.hasOwnProperty);var G=Object.keys||function(e){var am=[];for(var al in e){if(A(e,al)){am.push(al)}}return am};var ak=p(Object.prototype.toString);function V(e){return e===Object(e)}function w(e){return(ak(e)===\"[object StopIteration]\"||e instanceof I)}var I;if(typeof ReturnValue!==\"undefined\"){I=ReturnValue}else{I=function(e){this.value=e}}var Y=\"From previous event:\";function m(e,ao){if(E&&ao.stack&&typeof e===\"object\"&&e!==null&&e.stack&&e.stack.indexOf(Y)===-1){var am=[];for(var an=ao;!!an;an=an.source){if(an.stack){am.unshift(an.stack)}}am.unshift(e.stack);var al=am.join(\"\\n\"+Y+\"\\n\");e.stack=K(al)}}function K(an){var al=an.split(\"\\n\");var ao=[];for(var am=0;am<al.length;++am){var e=al[am];if(!g(e)&&!Z(e)&&e){ao.push(e)}}return ao.join(\"\\n\")}function Z(e){return e.indexOf(\"(module.js:\")!==-1||e.indexOf(\"(node.js:\")!==-1}function af(e){var an=/at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(e);if(an){return[an[1],Number(an[2])]}var am=/at ([^ ]+):(\\d+):(?:\\d+)$/.exec(e);if(am){return[am[1],Number(am[2])]}var al=/.*@(.+):(\\d+)$/.exec(e);if(al){return[al[1],Number(al[2])]}}function g(al){var am=af(al);if(!am){return false}var an=am[0];var e=am[1];return an===j&&e>=u&&e<=s}function W(){if(!E){return}try{throw new Error()}catch(ao){var al=ao.stack.split(\"\\n\");var am=al[0].indexOf(\"@\")>0?al[1]:al[2];var an=af(am);if(!an){return}j=an[0];return an[1]}}function C(am,e,al){return function(){if(typeof console!==\"undefined\"&&typeof console.warn===\"function\"){console.warn(e+\" is deprecated, use \"+al+\" instead.\",new Error(\"\").stack)}return am.apply(am,arguments)}}function l(e){if(y(e)){return e}if(M(e)){return L(e)}else{return z(e)}}l.resolve=l;l.nextTick=ai;l.longStackSupport=false;l.defer=h;function h(){var an=[],ap=[],ao;var al=H(h.prototype);var ar=H(N.prototype);ar.promiseDispatch=function(au,av,at){var e=ab(arguments);if(an){an.push(e);if(av===\"when\"&&at[1]){ap.push(at[1])}}else{ai(function(){ao.promiseDispatch.apply(ao,e)})}};ar.valueOf=function(){if(an){return ar}var e=J(ao);if(y(e)){ao=e}return e};ar.inspect=function(){if(!ao){return{state:\"pending\"}}return ao.inspect()};if(l.longStackSupport&&E){try{throw new Error()}catch(aq){ar.stack=aq.stack.substring(aq.stack.indexOf(\"\\n\")+1)}}function am(e){ao=e;ar.source=e;c(an,function(au,at){ai(function(){e.promiseDispatch.apply(e,at)})},void 0);an=void 0;ap=void 0}al.promise=ar;al.resolve=function(e){if(ao){return}am(l(e))};al.fulfill=function(e){if(ao){return}am(z(e))};al.reject=function(e){if(ao){return}am(D(e))};al.notify=function(e){if(ao){return}c(ap,function(au,at){ai(function(){at(e)})},void 0)};return al}h.prototype.makeNodeResolver=function(){var e=this;return function(al,am){if(al){e.reject(al)}else{if(arguments.length>2){e.resolve(ab(arguments,1))}else{e.resolve(am)}}}};l.Promise=T;l.promise=T;function T(am){if(typeof am!==\"function\"){throw new TypeError(\"resolver must be a function.\")}var e=h();try{am(e.resolve,e.reject,e.notify)}catch(al){e.reject(al)}return e.promise}T.race=n;T.all=x;T.reject=D;T.resolve=l;l.passByCopy=function(e){return e};N.prototype.passByCopy=function(){return this};l.join=function(e,al){return l(e).join(al)};N.prototype.join=function(e){return l([this,e]).spread(function(al,am){if(al===am){return al}else{throw new Error(\"Can't join: not the same: \"+al+\" \"+am)}})};l.race=n;function n(e){return T(function(ao,an){for(var am=0,al=e.length;am<al;am++){l(e[am]).then(ao,an)}})}N.prototype.race=function(){return this.then(l.race)};l.makePromise=N;function N(al,ao,an){if(ao===void 0){ao=function(ap){return D(new Error(\"Promise does not support operation: \"+ap))}}if(an===void 0){an=function(){return{state:\"unknown\"}}}var am=H(N.prototype);am.promiseDispatch=function(at,au,aq){var ap;try{if(al[au]){ap=al[au].apply(am,aq)}else{ap=ao.call(am,au,aq)}}catch(ar){ap=D(ar)}if(at){at(ap)}};am.inspect=an;if(an){var e=an();if(e.state===\"rejected\"){am.exception=e.reason}am.valueOf=function(){var ap=an();if(ap.state===\"pending\"||ap.state===\"rejected\"){return am}return ap.value}}return am}N.prototype.toString=function(){return\"[object Promise]\"};N.prototype.then=function(ao,ap,al){var aq=this;var ar=h();var am=false;function an(av){try{return typeof ao===\"function\"?ao(av):av}catch(au){return D(au)}}function at(au){if(typeof ap===\"function\"){m(au,aq);try{return ap(au)}catch(av){return D(av)}}return D(au)}function e(au){return typeof al===\"function\"?al(au):au}ai(function(){aq.promiseDispatch(function(au){if(am){return}am=true;ar.resolve(an(au))},\"when\",[function(au){if(am){return}am=true;ar.resolve(at(au))}])});aq.promiseDispatch(void 0,\"when\",[void 0,function(au){var aw;var ax=false;try{aw=e(au)}catch(av){ax=true;if(l.onerror){l.onerror(av)}else{throw av}}if(!ax){ar.notify(aw)}}]);return ar.promise};l.when=O;function O(am,e,al,an){return l(am).then(e,al,an)}N.prototype.thenResolve=function(e){return this.then(function(){return e})};l.thenResolve=function(al,e){return l(al).thenResolve(e)};N.prototype.thenReject=function(e){return this.then(function(){throw e})};l.thenReject=function(al,e){return l(al).thenReject(e)};l.nearer=J;function J(al){if(y(al)){var e=al.inspect();if(e.state===\"fulfilled\"){return e.value}}return al}l.isPromise=y;function y(e){return V(e)&&typeof e.promiseDispatch===\"function\"&&typeof e.inspect===\"function\"}l.isPromiseAlike=M;function M(e){return V(e)&&typeof e.then===\"function\"}l.isPending=ac;function ac(e){return y(e)&&e.inspect().state===\"pending\"}N.prototype.isPending=function(){return this.inspect().state===\"pending\"};l.isFulfilled=P;function P(e){return !y(e)||e.inspect().state===\"fulfilled\"}N.prototype.isFulfilled=function(){return this.inspect().state===\"fulfilled\"};l.isRejected=U;function U(e){return y(e)&&e.inspect().state===\"rejected\"}N.prototype.isRejected=function(){return this.inspect().state===\"rejected\"};var aa=[];var aj=[];var o=true;function ag(){aa.length=0;aj.length=0;if(!o){o=true}}function B(al,e){if(!o){return}aj.push(al);if(e&&typeof e.stack!==\"undefined\"){aa.push(e.stack)}else{aa.push(\"(no stack) \"+e)}}function k(al){if(!o){return}var e=R(aj,al);if(e!==-1){aj.splice(e,1);aa.splice(e,1)}}l.resetUnhandledRejections=ag;l.getUnhandledReasons=function(){return aa.slice()};l.stopUnhandledRejectionTracking=function(){ag();o=false};ag();l.reject=D;function D(al){var e=N({when:function(ao){if(ao){k(this)}return ao?ao(al):this}},function an(){return this},function am(){return{state:\"rejected\",reason:al}});B(e,al);return e}l.fulfill=z;function z(e){return N({when:function(){return e},get:function(am){return e[am]},set:function(am,an){e[am]=an},\"delete\":function(am){delete e[am]},post:function(an,am){if(an===null||an===void 0){return e.apply(void 0,am)}else{return e[an].apply(e,am)}},apply:function(an,am){return e.apply(an,am)},keys:function(){return G(e)}},void 0,function al(){return{state:\"fulfilled\",value:e}})}function L(al){var e=h();ai(function(){try{al.then(e.resolve,e.reject,e.notify)}catch(am){e.reject(am)}});return e.promise}l.master=v;function v(e){return N({isDef:function(){}},function al(an,am){return X(e,an,am)},function(){return l(e).inspect()})}l.spread=f;function f(am,e,al){return l(am).spread(e,al)}N.prototype.spread=function(e,al){return this.all().then(function(am){return e.apply(void 0,am)},al)};l.async=S;function S(e){return function(){function am(at,aq){var ap;if(typeof StopIteration===\"undefined\"){try{ap=an[at](aq)}catch(ar){return D(ar)}if(ap.done){return ap.value}else{return O(ap.value,ao,al)}}else{try{ap=an[at](aq)}catch(ar){if(w(ar)){return ar.value}else{return D(ar)}}return O(ap,ao,al)}}var an=e.apply(this,arguments);var ao=am.bind(am,\"next\");var al=am.bind(am,\"throw\");return ao()}}l.spawn=r;function r(e){l.done(l.async(e)())}l[\"return\"]=i;function i(e){throw new I(e)}l.promised=q;function q(e){return function(){return f([this,x(arguments)],function(al,am){return e.apply(al,am)})}}l.dispatch=X;function X(al,am,e){return l(al).dispatch(am,e)}N.prototype.dispatch=function(an,am){var al=this;var e=h();ai(function(){al.promiseDispatch(e.resolve,an,am)});return e.promise};l.get=function(e,al){return l(e).dispatch(\"get\",[al])};N.prototype.get=function(e){return this.dispatch(\"get\",[e])};l.set=function(e,al,am){return l(e).dispatch(\"set\",[al,am])};N.prototype.set=function(e,al){return this.dispatch(\"set\",[e,al])};l.del=l[\"delete\"]=function(e,al){return l(e).dispatch(\"delete\",[al])};N.prototype.del=N.prototype[\"delete\"]=function(e){return this.dispatch(\"delete\",[e])};l.mapply=l.post=function(am,al,e){return l(am).dispatch(\"post\",[al,e])};N.prototype.mapply=N.prototype.post=function(al,e){return this.dispatch(\"post\",[al,e])};l.send=l.mcall=l.invoke=function(al,e){return l(al).dispatch(\"post\",[e,ab(arguments,2)])};N.prototype.send=N.prototype.mcall=N.prototype.invoke=function(e){return this.dispatch(\"post\",[e,ab(arguments,1)])};l.fapply=function(al,e){return l(al).dispatch(\"apply\",[void 0,e])};N.prototype.fapply=function(e){return this.dispatch(\"apply\",[void 0,e])};l[\"try\"]=l.fcall=function(e){return l(e).dispatch(\"apply\",[void 0,ab(arguments,1)])};N.prototype.fcall=function(){return this.dispatch(\"apply\",[void 0,ab(arguments)])};l.fbind=function(al){var an=l(al);var e=ab(arguments,1);return function am(){return an.dispatch(\"apply\",[this,e.concat(ab(arguments))])}};N.prototype.fbind=function(){var am=this;var e=ab(arguments);return function al(){return am.dispatch(\"apply\",[this,e.concat(ab(arguments))])}};l.keys=function(e){return l(e).dispatch(\"keys\",[])};N.prototype.keys=function(){return this.dispatch(\"keys\",[])};l.all=x;function x(e){return O(e,function(an){var am=0;var al=h();c(an,function(ar,aq,ap){var ao;if(y(aq)&&(ao=aq.inspect()).state===\"fulfilled\"){an[ap]=ao.value}else{++am;O(aq,function(at){an[ap]=at;if(--am===0){al.resolve(an)}},al.reject,function(at){al.notify({index:ap,value:at})})}},void 0);if(am===0){al.resolve(an)}return al.promise})}N.prototype.all=function(){return x(this)};l.allResolved=C(d,\"allResolved\",\"allSettled\");function d(e){return O(e,function(al){al=b(al,l);return O(x(b(al,function(am){return O(am,ad,ad)})),function(){return al})})}N.prototype.allResolved=function(){return d(this)};l.allSettled=t;function t(e){return l(e).allSettled()}N.prototype.allSettled=function(){return this.then(function(e){return x(b(e,function(am){am=l(am);function al(){return am.inspect()}return am.then(al,al)}))})};l.fail=l[\"catch\"]=function(e,al){return l(e).then(void 0,al)};N.prototype.fail=N.prototype[\"catch\"]=function(e){return this.then(void 0,e)};l.progress=F;function F(e,al){return l(e).then(void 0,void 0,al)}N.prototype.progress=function(e){return this.then(void 0,void 0,e)};l.fin=l[\"finally\"]=function(e,al){return l(e)[\"finally\"](al)};N.prototype.fin=N.prototype[\"finally\"]=function(e){e=l(e);return this.then(function(al){return e.fcall().then(function(){return al})},function(al){return e.fcall().then(function(){throw al})})};l.done=function(am,e,an,al){return l(am).done(e,an,al)};N.prototype.done=function(e,an,am){var al=function(ap){ai(function(){m(ap,ao);if(l.onerror){l.onerror(ap)}else{throw ap}})};var ao=e||an||am?this.then(e,an,am):this;if(typeof process===\"object\"&&process&&process.domain){al=process.domain.bind(al)}ao.then(void 0,al)};l.timeout=function(al,e,am){return l(al).timeout(e,am)};N.prototype.timeout=function(al,am){var e=h();var an=setTimeout(function(){e.reject(new Error(am||\"Timed out after \"+al+\" ms\"))},al);this.then(function(ao){clearTimeout(an);e.resolve(ao)},function(ao){clearTimeout(an);e.reject(ao)},e.notify);return e.promise};l.delay=function(e,al){if(al===void 0){al=e;e=void 0}return l(e).delay(al)};N.prototype.delay=function(e){return this.then(function(am){var al=h();setTimeout(function(){al.resolve(am)},e);return al.promise})};l.nfapply=function(al,e){return l(al).nfapply(e)};N.prototype.nfapply=function(al){var e=h();var am=ab(al);am.push(e.makeNodeResolver());this.fapply(am).fail(e.reject);return e.promise};l.nfcall=function(al){var e=ab(arguments,1);return l(al).nfapply(e)};N.prototype.nfcall=function(){var al=ab(arguments);var e=h();al.push(e.makeNodeResolver());this.fapply(al).fail(e.reject);return e.promise};l.nfbind=l.denodeify=function(al){var e=ab(arguments,1);return function(){var an=e.concat(ab(arguments));var am=h();an.push(am.makeNodeResolver());l(al).fapply(an).fail(am.reject);return am.promise}};N.prototype.nfbind=N.prototype.denodeify=function(){var e=ab(arguments);e.unshift(this);return l.denodeify.apply(void 0,e)};l.nbind=function(am,e){var al=ab(arguments,2);return function(){var ap=al.concat(ab(arguments));var an=h();ap.push(an.makeNodeResolver());function ao(){return am.apply(e,arguments)}l(ao).fapply(ap).fail(an.reject);return an.promise}};N.prototype.nbind=function(){var e=ab(arguments,0);e.unshift(this);return l.nbind.apply(void 0,e)};l.nmapply=l.npost=function(am,al,e){return l(am).npost(al,e)};N.prototype.nmapply=N.prototype.npost=function(am,al){var an=ab(al||[]);var e=h();an.push(e.makeNodeResolver());this.dispatch(\"post\",[am,an]).fail(e.reject);return e.promise};l.nsend=l.nmcall=l.ninvoke=function(am,al){var an=ab(arguments,2);var e=h();an.push(e.makeNodeResolver());l(am).dispatch(\"post\",[al,an]).fail(e.reject);return e.promise};N.prototype.nsend=N.prototype.nmcall=N.prototype.ninvoke=function(al){var am=ab(arguments,1);var e=h();am.push(e.makeNodeResolver());this.dispatch(\"post\",[al,am]).fail(e.reject);return e.promise};l.nodeify=ae;function ae(al,e){return l(al).nodeify(e)}N.prototype.nodeify=function(e){if(e){this.then(function(al){ai(function(){e(null,al)})},function(al){ai(function(){e(al)})})}else{return this}};var s=W();return l});\n",
              "type": "blob"
            },
            "pixie": {
              "path": "pixie",
              "content": "module.exports = {\"version\":\"1.0.1\"};",
              "type": "blob"
            },
            "test/test": {
              "path": "test/test",
              "content": "(function() {\n  var Q;\n\n  Q = require(\"../main\");\n\n  describe(\"q\", function() {\n    return it(\"should be a promise library\", function(done) {\n      return Q(\"wat\").then(function(value) {\n        assert.equal(value, \"wat\");\n        return done();\n      }).done();\n    });\n  });\n\n}).call(this);\n",
              "type": "blob"
            }
          },
          "progenitor": {
            "url": "http://www.danielx.net/editor/"
          },
          "version": "1.0.1",
          "entryPoint": "main",
          "repository": {
            "branch": "v1.0.1",
            "default_branch": "master",
            "full_name": "distri/q",
            "homepage": null,
            "description": "Packaging q for distri",
            "html_url": "https://github.com/distri/q",
            "url": "https://api.github.com/repos/distri/q",
            "publishBranch": "gh-pages"
          },
          "dependencies": {}
        },
        "util": {
          "source": {
            "LICENSE": {
              "path": "LICENSE",
              "mode": "100644",
              "content": "The MIT License (MIT)\n\nCopyright (c) 2014 \n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
              "type": "blob"
            },
            "README.md": {
              "path": "README.md",
              "mode": "100644",
              "content": "util\n====\n\nSmall utility methods for JS\n",
              "type": "blob"
            },
            "main.coffee.md": {
              "path": "main.coffee.md",
              "mode": "100644",
              "content": "Util\n====\n\n    module.exports =\n      approach: (current, target, amount) ->\n        (target - current).clamp(-amount, amount) + current\n\nApply a stylesheet idempotently.\n\n      applyStylesheet: (style, id=\"primary\") ->\n        styleNode = document.createElement(\"style\")\n        styleNode.innerHTML = style\n        styleNode.id = id\n\n        if previousStyleNode = document.head.querySelector(\"style##{id}\")\n          previousStyleNode.parentNode.removeChild(prevousStyleNode)\n\n        document.head.appendChild(styleNode)\n\n      defaults: (target, objects...) ->\n        for object in objects\n          for name of object\n            unless target.hasOwnProperty(name)\n              target[name] = object[name]\n\n        return target\n\n      extend: (target, sources...) ->\n        for source in sources\n          for name of source\n            target[name] = source[name]\n\n        return target\n",
              "type": "blob"
            },
            "pixie.cson": {
              "path": "pixie.cson",
              "mode": "100644",
              "content": "version: \"0.1.0\"\n",
              "type": "blob"
            }
          },
          "distribution": {
            "main": {
              "path": "main",
              "content": "(function() {\n  var __slice = [].slice;\n\n  module.exports = {\n    approach: function(current, target, amount) {\n      return (target - current).clamp(-amount, amount) + current;\n    },\n    applyStylesheet: function(style, id) {\n      var previousStyleNode, styleNode;\n      if (id == null) {\n        id = \"primary\";\n      }\n      styleNode = document.createElement(\"style\");\n      styleNode.innerHTML = style;\n      styleNode.id = id;\n      if (previousStyleNode = document.head.querySelector(\"style#\" + id)) {\n        previousStyleNode.parentNode.removeChild(prevousStyleNode);\n      }\n      return document.head.appendChild(styleNode);\n    },\n    defaults: function() {\n      var name, object, objects, target, _i, _len;\n      target = arguments[0], objects = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      for (_i = 0, _len = objects.length; _i < _len; _i++) {\n        object = objects[_i];\n        for (name in object) {\n          if (!target.hasOwnProperty(name)) {\n            target[name] = object[name];\n          }\n        }\n      }\n      return target;\n    },\n    extend: function() {\n      var name, source, sources, target, _i, _len;\n      target = arguments[0], sources = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      for (_i = 0, _len = sources.length; _i < _len; _i++) {\n        source = sources[_i];\n        for (name in source) {\n          target[name] = source[name];\n        }\n      }\n      return target;\n    }\n  };\n\n}).call(this);\n",
              "type": "blob"
            },
            "pixie": {
              "path": "pixie",
              "content": "module.exports = {\"version\":\"0.1.0\"};",
              "type": "blob"
            }
          },
          "progenitor": {
            "url": "http://strd6.github.io/editor/"
          },
          "version": "0.1.0",
          "entryPoint": "main",
          "repository": {
            "id": 18501018,
            "name": "util",
            "full_name": "distri/util",
            "owner": {
              "login": "distri",
              "id": 6005125,
              "avatar_url": "https://avatars.githubusercontent.com/u/6005125?",
              "gravatar_id": "192f3f168409e79c42107f081139d9f3",
              "url": "https://api.github.com/users/distri",
              "html_url": "https://github.com/distri",
              "followers_url": "https://api.github.com/users/distri/followers",
              "following_url": "https://api.github.com/users/distri/following{/other_user}",
              "gists_url": "https://api.github.com/users/distri/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/distri/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/distri/subscriptions",
              "organizations_url": "https://api.github.com/users/distri/orgs",
              "repos_url": "https://api.github.com/users/distri/repos",
              "events_url": "https://api.github.com/users/distri/events{/privacy}",
              "received_events_url": "https://api.github.com/users/distri/received_events",
              "type": "Organization",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/distri/util",
            "description": "Small utility methods for JS",
            "fork": false,
            "url": "https://api.github.com/repos/distri/util",
            "forks_url": "https://api.github.com/repos/distri/util/forks",
            "keys_url": "https://api.github.com/repos/distri/util/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/distri/util/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/distri/util/teams",
            "hooks_url": "https://api.github.com/repos/distri/util/hooks",
            "issue_events_url": "https://api.github.com/repos/distri/util/issues/events{/number}",
            "events_url": "https://api.github.com/repos/distri/util/events",
            "assignees_url": "https://api.github.com/repos/distri/util/assignees{/user}",
            "branches_url": "https://api.github.com/repos/distri/util/branches{/branch}",
            "tags_url": "https://api.github.com/repos/distri/util/tags",
            "blobs_url": "https://api.github.com/repos/distri/util/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/distri/util/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/distri/util/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/distri/util/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/distri/util/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/distri/util/languages",
            "stargazers_url": "https://api.github.com/repos/distri/util/stargazers",
            "contributors_url": "https://api.github.com/repos/distri/util/contributors",
            "subscribers_url": "https://api.github.com/repos/distri/util/subscribers",
            "subscription_url": "https://api.github.com/repos/distri/util/subscription",
            "commits_url": "https://api.github.com/repos/distri/util/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/distri/util/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/distri/util/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/distri/util/issues/comments/{number}",
            "contents_url": "https://api.github.com/repos/distri/util/contents/{+path}",
            "compare_url": "https://api.github.com/repos/distri/util/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/distri/util/merges",
            "archive_url": "https://api.github.com/repos/distri/util/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/distri/util/downloads",
            "issues_url": "https://api.github.com/repos/distri/util/issues{/number}",
            "pulls_url": "https://api.github.com/repos/distri/util/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/distri/util/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/distri/util/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/distri/util/labels{/name}",
            "releases_url": "https://api.github.com/repos/distri/util/releases{/id}",
            "created_at": "2014-04-06T22:42:56Z",
            "updated_at": "2014-04-06T22:42:56Z",
            "pushed_at": "2014-04-06T22:42:56Z",
            "git_url": "git://github.com/distri/util.git",
            "ssh_url": "git@github.com:distri/util.git",
            "clone_url": "https://github.com/distri/util.git",
            "svn_url": "https://github.com/distri/util",
            "homepage": null,
            "size": 0,
            "stargazers_count": 0,
            "watchers_count": 0,
            "language": null,
            "has_issues": true,
            "has_downloads": true,
            "has_wiki": true,
            "forks_count": 0,
            "mirror_url": null,
            "open_issues_count": 0,
            "forks": 0,
            "open_issues": 0,
            "watchers": 0,
            "default_branch": "master",
            "master_branch": "master",
            "permissions": {
              "admin": true,
              "push": true,
              "pull": true
            },
            "organization": {
              "login": "distri",
              "id": 6005125,
              "avatar_url": "https://avatars.githubusercontent.com/u/6005125?",
              "gravatar_id": "192f3f168409e79c42107f081139d9f3",
              "url": "https://api.github.com/users/distri",
              "html_url": "https://github.com/distri",
              "followers_url": "https://api.github.com/users/distri/followers",
              "following_url": "https://api.github.com/users/distri/following{/other_user}",
              "gists_url": "https://api.github.com/users/distri/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/distri/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/distri/subscriptions",
              "organizations_url": "https://api.github.com/users/distri/orgs",
              "repos_url": "https://api.github.com/users/distri/repos",
              "events_url": "https://api.github.com/users/distri/events{/privacy}",
              "received_events_url": "https://api.github.com/users/distri/received_events",
              "type": "Organization",
              "site_admin": false
            },
            "network_count": 0,
            "subscribers_count": 2,
            "branch": "v0.1.0",
            "publishBranch": "gh-pages"
          },
          "dependencies": {}
        }
      }
    },
    "s3-uploader": {
      "source": {
        "LICENSE": {
          "path": "LICENSE",
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014 \n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n",
          "mode": "100644",
          "type": "blob"
        },
        "README.md": {
          "path": "README.md",
          "content": "s3-uploader\n===========\n\nUpload to S3 directly from the client\n",
          "mode": "100644",
          "type": "blob"
        },
        "main.coffee.md": {
          "path": "main.coffee.md",
          "content": "S3 Uploader\n===========\n\nUpload data directly to S3 from the client.\n\nUsage\n-----\n\n>     uploader = S3.uploader(JSON.parse(localStorage.S3Policy))\n>     uploader.upload\n>       key: \"myfile.text\"\n>       blob: new Blob [\"radical\"]\n>       cacheControl: 60 # default 0\n\n\nThe uploader automatically prefixes the key with the namespace specified in the\npolicy.\n\nA promise is returned that is fulfilled with the url of the uploaded resource.\n\n>     .then (url) -> # \"https://s3.amazonaws.com/trinket/18894/myfile.txt\"\n\nThe promise is rejected with an error if the upload fails.\n\nA progress event is fired with the percentage of the upload that has completed.\n\nThe policy is a JSON object with the following keys:\n\n- `accessKey`\n- `policy`\n- `signature`\n\nSince these are all needed to create and sign the policy we keep them all\ntogether.\n\nGiving this object to the uploader method creates an uploader capable of\nasynchronously uploading files to the bucket specified in the policy.\n\nNotes\n-----\n\nThe policy must specify a `Cache-Control` header because we always try to set it.\n\nImplementation\n--------------\n\n    Q = require \"q\"\n\n    module.exports = (credentials) ->\n      {policy, signature, accessKey} = credentials\n      {acl, bucket, namespace} = extractPolicyData(policy)\n\n      bucketUrl = \"https://s3.amazonaws.com/#{bucket}\"\n\n      urlFor = (key) ->\n        namespacedKey = \"#{namespace}#{key}\"\n\n        \"#{bucketUrl}/#{namespacedKey}\"\n\n      upload: ({key, blob, cacheControl}) ->\n        namespacedKey = \"#{namespace}#{key}\"\n        url = urlFor(key)\n\n        sendForm bucketUrl, objectToForm\n          key: namespacedKey\n          \"Content-Type\": blob.type\n          \"Cache-Control\": \"max-age=#{cacheControl or 0}\"\n          AWSAccessKeyId: accessKey\n          acl: acl\n          policy: policy\n          signature: signature\n          file: blob\n        .then ->\n          url\n\n      get: (key) ->\n        url = urlFor(key) + \"?origin=#{document.domain}\"\n\n        deferred = Q.defer()\n\n        request = new XMLHttpRequest\n        request.open \"GET\", url, true\n        request.responseType = \"arraybuffer\"\n\n        request.onprogress = deferred.notify\n\n        request.onreadystatechange = ->\n          if request.readyState is 4\n            if isSuccess(request)\n              blob = new Blob [request.response],\n                type: request.getResponseHeader('content-type')\n\n              deferred.resolve blob\n            else\n              deferred.reject \"#{request.status} - #{request.statusText}\"\n\n        request.send()\n\n        return deferred.promise\n\nHelpers\n-------\n\n    getKey = (conditions, key) ->\n      results = conditions.filter (condition) ->\n        typeof condition is \"object\"\n      .map (object) ->\n        object[key]\n      .filter (value) ->\n        value\n\n      results[0]\n\n    getNamespaceFromPolicyConditions = (conditions) ->\n      (conditions.filter ([a, b, c]) ->\n        a is \"starts-with\" and b is \"$key\"\n      )[0][2]\n\n    extractPolicyData = (policy) ->\n      policyObject = JSON.parse(atob(policy))\n\n      conditions = policyObject.conditions\n\n      acl: getKey(conditions, \"acl\")\n      bucket: getKey(conditions, \"bucket\")\n      namespace: getNamespaceFromPolicyConditions(conditions)\n\n    isSuccess = (request) ->\n      request.status.toString()[0] is \"2\"\n\n    sendForm = (url, formData) ->\n      deferred = Q.defer()\n\n      request = new XMLHttpRequest()\n\n      request.open(\"POST\", url, true)\n\n      request.upload.onprogress = deferred.notify\n\n      request.onreadystatechange = (e) ->\n        if request.readyState is 4\n          if isSuccess(request)\n            deferred.resolve(true)\n          else\n            deferred.reject request.responseText\n\n      request.send(formData)\n\n      return deferred.promise\n\n    objectToForm = (data) ->\n      formData = Object.keys(data).reduce (formData, key) ->\n        formData.append(key, data[key])\n\n        return formData\n      , new FormData\n",
          "mode": "100644",
          "type": "blob"
        },
        "pixie.cson": {
          "path": "pixie.cson",
          "content": "version: \"0.1.3\"\ndependencies:\n  q: \"distri/q:v1.0.1\"\n",
          "mode": "100644",
          "type": "blob"
        },
        "test/test.coffee": {
          "path": "test/test.coffee",
          "content": "Uploader = require \"../main\"\n\npolicy = JSON.parse(localStorage.CCASPolicy)\nuploader = Uploader policy\n\nglobal.Q = require \"q\"\n\ndescribe \"uploader\", ->\n  it \"should upload some junk to S3\", (done) ->\n    uploader.upload(\n      key: \"test.wat\"\n      blob: new Blob [\"wat wat wat???\"], type: \"text/plain\"\n    ).then (url) ->\n      done()\n    , (error) ->\n      console.log error\n    , (progress) ->\n      console.log progress\n    .done()\n\n  it \"should be able to get files\", (done) ->\n    uploader.get \"test.wat\"\n    .then (blob) ->\n      console.log blob\n      done()\n    , (error) ->\n      console.log error\n    , (progress) ->\n      console.log progress\n    .done()\n",
          "mode": "100644",
          "type": "blob"
        }
      },
      "distribution": {
        "main": {
          "path": "main",
          "content": "(function() {\n  var Q, extractPolicyData, getKey, getNamespaceFromPolicyConditions, isSuccess, objectToForm, sendForm;\n\n  Q = require(\"q\");\n\n  module.exports = function(credentials) {\n    var accessKey, acl, bucket, bucketUrl, namespace, policy, signature, urlFor, _ref;\n    policy = credentials.policy, signature = credentials.signature, accessKey = credentials.accessKey;\n    _ref = extractPolicyData(policy), acl = _ref.acl, bucket = _ref.bucket, namespace = _ref.namespace;\n    bucketUrl = \"https://s3.amazonaws.com/\" + bucket;\n    urlFor = function(key) {\n      var namespacedKey;\n      namespacedKey = \"\" + namespace + key;\n      return \"\" + bucketUrl + \"/\" + namespacedKey;\n    };\n    return {\n      upload: function(_arg) {\n        var blob, cacheControl, key, namespacedKey, url;\n        key = _arg.key, blob = _arg.blob, cacheControl = _arg.cacheControl;\n        namespacedKey = \"\" + namespace + key;\n        url = urlFor(key);\n        return sendForm(bucketUrl, objectToForm({\n          key: namespacedKey,\n          \"Content-Type\": blob.type,\n          \"Cache-Control\": \"max-age=\" + (cacheControl || 0),\n          AWSAccessKeyId: accessKey,\n          acl: acl,\n          policy: policy,\n          signature: signature,\n          file: blob\n        })).then(function() {\n          return url;\n        });\n      },\n      get: function(key) {\n        var deferred, request, url;\n        url = urlFor(key) + (\"?origin=\" + document.domain);\n        deferred = Q.defer();\n        request = new XMLHttpRequest;\n        request.open(\"GET\", url, true);\n        request.responseType = \"arraybuffer\";\n        request.onprogress = deferred.notify;\n        request.onreadystatechange = function() {\n          var blob;\n          if (request.readyState === 4) {\n            if (isSuccess(request)) {\n              blob = new Blob([request.response], {\n                type: request.getResponseHeader('content-type')\n              });\n              return deferred.resolve(blob);\n            } else {\n              return deferred.reject(\"\" + request.status + \" - \" + request.statusText);\n            }\n          }\n        };\n        request.send();\n        return deferred.promise;\n      }\n    };\n  };\n\n  getKey = function(conditions, key) {\n    var results;\n    results = conditions.filter(function(condition) {\n      return typeof condition === \"object\";\n    }).map(function(object) {\n      return object[key];\n    }).filter(function(value) {\n      return value;\n    });\n    return results[0];\n  };\n\n  getNamespaceFromPolicyConditions = function(conditions) {\n    return (conditions.filter(function(_arg) {\n      var a, b, c;\n      a = _arg[0], b = _arg[1], c = _arg[2];\n      return a === \"starts-with\" && b === \"$key\";\n    }))[0][2];\n  };\n\n  extractPolicyData = function(policy) {\n    var conditions, policyObject;\n    policyObject = JSON.parse(atob(policy));\n    conditions = policyObject.conditions;\n    return {\n      acl: getKey(conditions, \"acl\"),\n      bucket: getKey(conditions, \"bucket\"),\n      namespace: getNamespaceFromPolicyConditions(conditions)\n    };\n  };\n\n  isSuccess = function(request) {\n    return request.status.toString()[0] === \"2\";\n  };\n\n  sendForm = function(url, formData) {\n    var deferred, request;\n    deferred = Q.defer();\n    request = new XMLHttpRequest();\n    request.open(\"POST\", url, true);\n    request.upload.onprogress = deferred.notify;\n    request.onreadystatechange = function(e) {\n      if (request.readyState === 4) {\n        if (isSuccess(request)) {\n          return deferred.resolve(true);\n        } else {\n          return deferred.reject(request.responseText);\n        }\n      }\n    };\n    request.send(formData);\n    return deferred.promise;\n  };\n\n  objectToForm = function(data) {\n    var formData;\n    return formData = Object.keys(data).reduce(function(formData, key) {\n      formData.append(key, data[key]);\n      return formData;\n    }, new FormData);\n  };\n\n}).call(this);\n",
          "type": "blob"
        },
        "pixie": {
          "path": "pixie",
          "content": "module.exports = {\"version\":\"0.1.3\",\"dependencies\":{\"q\":\"distri/q:v1.0.1\"}};",
          "type": "blob"
        },
        "test/test": {
          "path": "test/test",
          "content": "(function() {\n  var Uploader, policy, uploader;\n\n  Uploader = require(\"../main\");\n\n  policy = JSON.parse(localStorage.CCASPolicy);\n\n  uploader = Uploader(policy);\n\n  global.Q = require(\"q\");\n\n  describe(\"uploader\", function() {\n    it(\"should upload some junk to S3\", function(done) {\n      return uploader.upload({\n        key: \"test.wat\",\n        blob: new Blob([\"wat wat wat???\"], {\n          type: \"text/plain\"\n        })\n      }).then(function(url) {\n        return done();\n      }, function(error) {\n        return console.log(error);\n      }, function(progress) {\n        return console.log(progress);\n      }).done();\n    });\n    return it(\"should be able to get files\", function(done) {\n      return uploader.get(\"test.wat\").then(function(blob) {\n        console.log(blob);\n        return done();\n      }, function(error) {\n        return console.log(error);\n      }, function(progress) {\n        return console.log(progress);\n      }).done();\n    });\n  });\n\n}).call(this);\n",
          "type": "blob"
        }
      },
      "progenitor": {
        "url": "http://www.danielx.net/editor/"
      },
      "version": "0.1.3",
      "entryPoint": "main",
      "repository": {
        "branch": "v0.1.3",
        "default_branch": "master",
        "full_name": "distri/s3-uploader",
        "homepage": null,
        "description": "Upload to S3 directly from the client",
        "html_url": "https://github.com/distri/s3-uploader",
        "url": "https://api.github.com/repos/distri/s3-uploader",
        "publishBranch": "gh-pages"
      },
      "dependencies": {
        "q": {
          "source": {
            "README.md": {
              "path": "README.md",
              "content": "q\n=\n\nPackaging q for distri\n",
              "mode": "100644",
              "type": "blob"
            },
            "main.js": {
              "path": "main.js",
              "content": "/*!\n *\n * Copyright 2009-2012 Kris Kowal under the terms of the MIT\n * license found at http://github.com/kriskowal/q/raw/master/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n(function(a){if(typeof bootstrap===\"function\"){bootstrap(\"promise\",a)}else{if(typeof exports===\"object\"){module.exports=a()}else{if(typeof define===\"function\"&&define.amd){define(a)}else{if(typeof ses!==\"undefined\"){if(!ses.ok()){return}else{ses.makeQ=a}}else{Q=a()}}}}})(function(){var E=false;try{throw new Error()}catch(ah){E=!!ah.stack}var u=W();var j;var ad=function(){};var ai=(function(){var ap={task:void 0,next:null};var ao=ap;var ar=false;var al=void 0;var an=false;function e(){while(ap.next){ap=ap.next;var at=ap.task;ap.task=void 0;var au=ap.domain;if(au){ap.domain=void 0;au.enter()}try{at()}catch(av){if(an){if(au){au.exit()}setTimeout(e,0);if(au){au.enter()}throw av}else{setTimeout(function(){throw av},0)}}if(au){au.exit()}}ar=false}ai=function(at){ao=ao.next={task:at,domain:an&&process.domain,next:null};if(!ar){ar=true;al()}};if(typeof process!==\"undefined\"&&process.nextTick){an=true;al=function(){process.nextTick(e)}}else{if(typeof setImmediate===\"function\"){if(typeof window!==\"undefined\"){al=setImmediate.bind(window,e)}else{al=function(){setImmediate(e)}}}else{if(typeof MessageChannel!==\"undefined\"){var aq=new MessageChannel();aq.port1.onmessage=function(){al=am;aq.port1.onmessage=e;e()};var am=function(){aq.port2.postMessage(0)};al=function(){setTimeout(e,0);am()}}else{al=function(){setTimeout(e,0)}}}}return ai})();var a=Function.call;function p(e){return function(){return a.apply(e,arguments)}}var ab=p(Array.prototype.slice);var c=p(Array.prototype.reduce||function(an,am){var e=0,al=this.length;if(arguments.length===1){do{if(e in this){am=this[e++];break}if(++e>=al){throw new TypeError()}}while(1)}for(;e<al;e++){if(e in this){am=an(am,this[e],e)}}return am});var R=p(Array.prototype.indexOf||function(al){for(var e=0;e<this.length;e++){if(this[e]===al){return e}}return -1});var b=p(Array.prototype.map||function(an,al){var e=this;var am=[];c(e,function(aq,ap,ao){am.push(an.call(al,ap,ao,e))},void 0);return am});var H=Object.create||function(al){function e(){}e.prototype=al;return new e()};var A=p(Object.prototype.hasOwnProperty);var G=Object.keys||function(e){var am=[];for(var al in e){if(A(e,al)){am.push(al)}}return am};var ak=p(Object.prototype.toString);function V(e){return e===Object(e)}function w(e){return(ak(e)===\"[object StopIteration]\"||e instanceof I)}var I;if(typeof ReturnValue!==\"undefined\"){I=ReturnValue}else{I=function(e){this.value=e}}var Y=\"From previous event:\";function m(e,ao){if(E&&ao.stack&&typeof e===\"object\"&&e!==null&&e.stack&&e.stack.indexOf(Y)===-1){var am=[];for(var an=ao;!!an;an=an.source){if(an.stack){am.unshift(an.stack)}}am.unshift(e.stack);var al=am.join(\"\\n\"+Y+\"\\n\");e.stack=K(al)}}function K(an){var al=an.split(\"\\n\");var ao=[];for(var am=0;am<al.length;++am){var e=al[am];if(!g(e)&&!Z(e)&&e){ao.push(e)}}return ao.join(\"\\n\")}function Z(e){return e.indexOf(\"(module.js:\")!==-1||e.indexOf(\"(node.js:\")!==-1}function af(e){var an=/at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(e);if(an){return[an[1],Number(an[2])]}var am=/at ([^ ]+):(\\d+):(?:\\d+)$/.exec(e);if(am){return[am[1],Number(am[2])]}var al=/.*@(.+):(\\d+)$/.exec(e);if(al){return[al[1],Number(al[2])]}}function g(al){var am=af(al);if(!am){return false}var an=am[0];var e=am[1];return an===j&&e>=u&&e<=s}function W(){if(!E){return}try{throw new Error()}catch(ao){var al=ao.stack.split(\"\\n\");var am=al[0].indexOf(\"@\")>0?al[1]:al[2];var an=af(am);if(!an){return}j=an[0];return an[1]}}function C(am,e,al){return function(){if(typeof console!==\"undefined\"&&typeof console.warn===\"function\"){console.warn(e+\" is deprecated, use \"+al+\" instead.\",new Error(\"\").stack)}return am.apply(am,arguments)}}function l(e){if(y(e)){return e}if(M(e)){return L(e)}else{return z(e)}}l.resolve=l;l.nextTick=ai;l.longStackSupport=false;l.defer=h;function h(){var an=[],ap=[],ao;var al=H(h.prototype);var ar=H(N.prototype);ar.promiseDispatch=function(au,av,at){var e=ab(arguments);if(an){an.push(e);if(av===\"when\"&&at[1]){ap.push(at[1])}}else{ai(function(){ao.promiseDispatch.apply(ao,e)})}};ar.valueOf=function(){if(an){return ar}var e=J(ao);if(y(e)){ao=e}return e};ar.inspect=function(){if(!ao){return{state:\"pending\"}}return ao.inspect()};if(l.longStackSupport&&E){try{throw new Error()}catch(aq){ar.stack=aq.stack.substring(aq.stack.indexOf(\"\\n\")+1)}}function am(e){ao=e;ar.source=e;c(an,function(au,at){ai(function(){e.promiseDispatch.apply(e,at)})},void 0);an=void 0;ap=void 0}al.promise=ar;al.resolve=function(e){if(ao){return}am(l(e))};al.fulfill=function(e){if(ao){return}am(z(e))};al.reject=function(e){if(ao){return}am(D(e))};al.notify=function(e){if(ao){return}c(ap,function(au,at){ai(function(){at(e)})},void 0)};return al}h.prototype.makeNodeResolver=function(){var e=this;return function(al,am){if(al){e.reject(al)}else{if(arguments.length>2){e.resolve(ab(arguments,1))}else{e.resolve(am)}}}};l.Promise=T;l.promise=T;function T(am){if(typeof am!==\"function\"){throw new TypeError(\"resolver must be a function.\")}var e=h();try{am(e.resolve,e.reject,e.notify)}catch(al){e.reject(al)}return e.promise}T.race=n;T.all=x;T.reject=D;T.resolve=l;l.passByCopy=function(e){return e};N.prototype.passByCopy=function(){return this};l.join=function(e,al){return l(e).join(al)};N.prototype.join=function(e){return l([this,e]).spread(function(al,am){if(al===am){return al}else{throw new Error(\"Can't join: not the same: \"+al+\" \"+am)}})};l.race=n;function n(e){return T(function(ao,an){for(var am=0,al=e.length;am<al;am++){l(e[am]).then(ao,an)}})}N.prototype.race=function(){return this.then(l.race)};l.makePromise=N;function N(al,ao,an){if(ao===void 0){ao=function(ap){return D(new Error(\"Promise does not support operation: \"+ap))}}if(an===void 0){an=function(){return{state:\"unknown\"}}}var am=H(N.prototype);am.promiseDispatch=function(at,au,aq){var ap;try{if(al[au]){ap=al[au].apply(am,aq)}else{ap=ao.call(am,au,aq)}}catch(ar){ap=D(ar)}if(at){at(ap)}};am.inspect=an;if(an){var e=an();if(e.state===\"rejected\"){am.exception=e.reason}am.valueOf=function(){var ap=an();if(ap.state===\"pending\"||ap.state===\"rejected\"){return am}return ap.value}}return am}N.prototype.toString=function(){return\"[object Promise]\"};N.prototype.then=function(ao,ap,al){var aq=this;var ar=h();var am=false;function an(av){try{return typeof ao===\"function\"?ao(av):av}catch(au){return D(au)}}function at(au){if(typeof ap===\"function\"){m(au,aq);try{return ap(au)}catch(av){return D(av)}}return D(au)}function e(au){return typeof al===\"function\"?al(au):au}ai(function(){aq.promiseDispatch(function(au){if(am){return}am=true;ar.resolve(an(au))},\"when\",[function(au){if(am){return}am=true;ar.resolve(at(au))}])});aq.promiseDispatch(void 0,\"when\",[void 0,function(au){var aw;var ax=false;try{aw=e(au)}catch(av){ax=true;if(l.onerror){l.onerror(av)}else{throw av}}if(!ax){ar.notify(aw)}}]);return ar.promise};l.when=O;function O(am,e,al,an){return l(am).then(e,al,an)}N.prototype.thenResolve=function(e){return this.then(function(){return e})};l.thenResolve=function(al,e){return l(al).thenResolve(e)};N.prototype.thenReject=function(e){return this.then(function(){throw e})};l.thenReject=function(al,e){return l(al).thenReject(e)};l.nearer=J;function J(al){if(y(al)){var e=al.inspect();if(e.state===\"fulfilled\"){return e.value}}return al}l.isPromise=y;function y(e){return V(e)&&typeof e.promiseDispatch===\"function\"&&typeof e.inspect===\"function\"}l.isPromiseAlike=M;function M(e){return V(e)&&typeof e.then===\"function\"}l.isPending=ac;function ac(e){return y(e)&&e.inspect().state===\"pending\"}N.prototype.isPending=function(){return this.inspect().state===\"pending\"};l.isFulfilled=P;function P(e){return !y(e)||e.inspect().state===\"fulfilled\"}N.prototype.isFulfilled=function(){return this.inspect().state===\"fulfilled\"};l.isRejected=U;function U(e){return y(e)&&e.inspect().state===\"rejected\"}N.prototype.isRejected=function(){return this.inspect().state===\"rejected\"};var aa=[];var aj=[];var o=true;function ag(){aa.length=0;aj.length=0;if(!o){o=true}}function B(al,e){if(!o){return}aj.push(al);if(e&&typeof e.stack!==\"undefined\"){aa.push(e.stack)}else{aa.push(\"(no stack) \"+e)}}function k(al){if(!o){return}var e=R(aj,al);if(e!==-1){aj.splice(e,1);aa.splice(e,1)}}l.resetUnhandledRejections=ag;l.getUnhandledReasons=function(){return aa.slice()};l.stopUnhandledRejectionTracking=function(){ag();o=false};ag();l.reject=D;function D(al){var e=N({when:function(ao){if(ao){k(this)}return ao?ao(al):this}},function an(){return this},function am(){return{state:\"rejected\",reason:al}});B(e,al);return e}l.fulfill=z;function z(e){return N({when:function(){return e},get:function(am){return e[am]},set:function(am,an){e[am]=an},\"delete\":function(am){delete e[am]},post:function(an,am){if(an===null||an===void 0){return e.apply(void 0,am)}else{return e[an].apply(e,am)}},apply:function(an,am){return e.apply(an,am)},keys:function(){return G(e)}},void 0,function al(){return{state:\"fulfilled\",value:e}})}function L(al){var e=h();ai(function(){try{al.then(e.resolve,e.reject,e.notify)}catch(am){e.reject(am)}});return e.promise}l.master=v;function v(e){return N({isDef:function(){}},function al(an,am){return X(e,an,am)},function(){return l(e).inspect()})}l.spread=f;function f(am,e,al){return l(am).spread(e,al)}N.prototype.spread=function(e,al){return this.all().then(function(am){return e.apply(void 0,am)},al)};l.async=S;function S(e){return function(){function am(at,aq){var ap;if(typeof StopIteration===\"undefined\"){try{ap=an[at](aq)}catch(ar){return D(ar)}if(ap.done){return ap.value}else{return O(ap.value,ao,al)}}else{try{ap=an[at](aq)}catch(ar){if(w(ar)){return ar.value}else{return D(ar)}}return O(ap,ao,al)}}var an=e.apply(this,arguments);var ao=am.bind(am,\"next\");var al=am.bind(am,\"throw\");return ao()}}l.spawn=r;function r(e){l.done(l.async(e)())}l[\"return\"]=i;function i(e){throw new I(e)}l.promised=q;function q(e){return function(){return f([this,x(arguments)],function(al,am){return e.apply(al,am)})}}l.dispatch=X;function X(al,am,e){return l(al).dispatch(am,e)}N.prototype.dispatch=function(an,am){var al=this;var e=h();ai(function(){al.promiseDispatch(e.resolve,an,am)});return e.promise};l.get=function(e,al){return l(e).dispatch(\"get\",[al])};N.prototype.get=function(e){return this.dispatch(\"get\",[e])};l.set=function(e,al,am){return l(e).dispatch(\"set\",[al,am])};N.prototype.set=function(e,al){return this.dispatch(\"set\",[e,al])};l.del=l[\"delete\"]=function(e,al){return l(e).dispatch(\"delete\",[al])};N.prototype.del=N.prototype[\"delete\"]=function(e){return this.dispatch(\"delete\",[e])};l.mapply=l.post=function(am,al,e){return l(am).dispatch(\"post\",[al,e])};N.prototype.mapply=N.prototype.post=function(al,e){return this.dispatch(\"post\",[al,e])};l.send=l.mcall=l.invoke=function(al,e){return l(al).dispatch(\"post\",[e,ab(arguments,2)])};N.prototype.send=N.prototype.mcall=N.prototype.invoke=function(e){return this.dispatch(\"post\",[e,ab(arguments,1)])};l.fapply=function(al,e){return l(al).dispatch(\"apply\",[void 0,e])};N.prototype.fapply=function(e){return this.dispatch(\"apply\",[void 0,e])};l[\"try\"]=l.fcall=function(e){return l(e).dispatch(\"apply\",[void 0,ab(arguments,1)])};N.prototype.fcall=function(){return this.dispatch(\"apply\",[void 0,ab(arguments)])};l.fbind=function(al){var an=l(al);var e=ab(arguments,1);return function am(){return an.dispatch(\"apply\",[this,e.concat(ab(arguments))])}};N.prototype.fbind=function(){var am=this;var e=ab(arguments);return function al(){return am.dispatch(\"apply\",[this,e.concat(ab(arguments))])}};l.keys=function(e){return l(e).dispatch(\"keys\",[])};N.prototype.keys=function(){return this.dispatch(\"keys\",[])};l.all=x;function x(e){return O(e,function(an){var am=0;var al=h();c(an,function(ar,aq,ap){var ao;if(y(aq)&&(ao=aq.inspect()).state===\"fulfilled\"){an[ap]=ao.value}else{++am;O(aq,function(at){an[ap]=at;if(--am===0){al.resolve(an)}},al.reject,function(at){al.notify({index:ap,value:at})})}},void 0);if(am===0){al.resolve(an)}return al.promise})}N.prototype.all=function(){return x(this)};l.allResolved=C(d,\"allResolved\",\"allSettled\");function d(e){return O(e,function(al){al=b(al,l);return O(x(b(al,function(am){return O(am,ad,ad)})),function(){return al})})}N.prototype.allResolved=function(){return d(this)};l.allSettled=t;function t(e){return l(e).allSettled()}N.prototype.allSettled=function(){return this.then(function(e){return x(b(e,function(am){am=l(am);function al(){return am.inspect()}return am.then(al,al)}))})};l.fail=l[\"catch\"]=function(e,al){return l(e).then(void 0,al)};N.prototype.fail=N.prototype[\"catch\"]=function(e){return this.then(void 0,e)};l.progress=F;function F(e,al){return l(e).then(void 0,void 0,al)}N.prototype.progress=function(e){return this.then(void 0,void 0,e)};l.fin=l[\"finally\"]=function(e,al){return l(e)[\"finally\"](al)};N.prototype.fin=N.prototype[\"finally\"]=function(e){e=l(e);return this.then(function(al){return e.fcall().then(function(){return al})},function(al){return e.fcall().then(function(){throw al})})};l.done=function(am,e,an,al){return l(am).done(e,an,al)};N.prototype.done=function(e,an,am){var al=function(ap){ai(function(){m(ap,ao);if(l.onerror){l.onerror(ap)}else{throw ap}})};var ao=e||an||am?this.then(e,an,am):this;if(typeof process===\"object\"&&process&&process.domain){al=process.domain.bind(al)}ao.then(void 0,al)};l.timeout=function(al,e,am){return l(al).timeout(e,am)};N.prototype.timeout=function(al,am){var e=h();var an=setTimeout(function(){e.reject(new Error(am||\"Timed out after \"+al+\" ms\"))},al);this.then(function(ao){clearTimeout(an);e.resolve(ao)},function(ao){clearTimeout(an);e.reject(ao)},e.notify);return e.promise};l.delay=function(e,al){if(al===void 0){al=e;e=void 0}return l(e).delay(al)};N.prototype.delay=function(e){return this.then(function(am){var al=h();setTimeout(function(){al.resolve(am)},e);return al.promise})};l.nfapply=function(al,e){return l(al).nfapply(e)};N.prototype.nfapply=function(al){var e=h();var am=ab(al);am.push(e.makeNodeResolver());this.fapply(am).fail(e.reject);return e.promise};l.nfcall=function(al){var e=ab(arguments,1);return l(al).nfapply(e)};N.prototype.nfcall=function(){var al=ab(arguments);var e=h();al.push(e.makeNodeResolver());this.fapply(al).fail(e.reject);return e.promise};l.nfbind=l.denodeify=function(al){var e=ab(arguments,1);return function(){var an=e.concat(ab(arguments));var am=h();an.push(am.makeNodeResolver());l(al).fapply(an).fail(am.reject);return am.promise}};N.prototype.nfbind=N.prototype.denodeify=function(){var e=ab(arguments);e.unshift(this);return l.denodeify.apply(void 0,e)};l.nbind=function(am,e){var al=ab(arguments,2);return function(){var ap=al.concat(ab(arguments));var an=h();ap.push(an.makeNodeResolver());function ao(){return am.apply(e,arguments)}l(ao).fapply(ap).fail(an.reject);return an.promise}};N.prototype.nbind=function(){var e=ab(arguments,0);e.unshift(this);return l.nbind.apply(void 0,e)};l.nmapply=l.npost=function(am,al,e){return l(am).npost(al,e)};N.prototype.nmapply=N.prototype.npost=function(am,al){var an=ab(al||[]);var e=h();an.push(e.makeNodeResolver());this.dispatch(\"post\",[am,an]).fail(e.reject);return e.promise};l.nsend=l.nmcall=l.ninvoke=function(am,al){var an=ab(arguments,2);var e=h();an.push(e.makeNodeResolver());l(am).dispatch(\"post\",[al,an]).fail(e.reject);return e.promise};N.prototype.nsend=N.prototype.nmcall=N.prototype.ninvoke=function(al){var am=ab(arguments,1);var e=h();am.push(e.makeNodeResolver());this.dispatch(\"post\",[al,am]).fail(e.reject);return e.promise};l.nodeify=ae;function ae(al,e){return l(al).nodeify(e)}N.prototype.nodeify=function(e){if(e){this.then(function(al){ai(function(){e(null,al)})},function(al){ai(function(){e(al)})})}else{return this}};var s=W();return l});\n",
              "mode": "100644"
            },
            "pixie.cson": {
              "path": "pixie.cson",
              "content": "version: \"1.0.1\"\n",
              "mode": "100644"
            },
            "test/test.coffee": {
              "path": "test/test.coffee",
              "content": "Q = require \"../main\"\n\ndescribe \"q\", ->\n  it \"should be a promise library\", (done) ->\n\n    Q(\"wat\").then (value) ->\n      assert.equal value, \"wat\"\n      done()\n    .done()\n",
              "mode": "100644"
            }
          },
          "distribution": {
            "main": {
              "path": "main",
              "content": "/*!\n *\n * Copyright 2009-2012 Kris Kowal under the terms of the MIT\n * license found at http://github.com/kriskowal/q/raw/master/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n(function(a){if(typeof bootstrap===\"function\"){bootstrap(\"promise\",a)}else{if(typeof exports===\"object\"){module.exports=a()}else{if(typeof define===\"function\"&&define.amd){define(a)}else{if(typeof ses!==\"undefined\"){if(!ses.ok()){return}else{ses.makeQ=a}}else{Q=a()}}}}})(function(){var E=false;try{throw new Error()}catch(ah){E=!!ah.stack}var u=W();var j;var ad=function(){};var ai=(function(){var ap={task:void 0,next:null};var ao=ap;var ar=false;var al=void 0;var an=false;function e(){while(ap.next){ap=ap.next;var at=ap.task;ap.task=void 0;var au=ap.domain;if(au){ap.domain=void 0;au.enter()}try{at()}catch(av){if(an){if(au){au.exit()}setTimeout(e,0);if(au){au.enter()}throw av}else{setTimeout(function(){throw av},0)}}if(au){au.exit()}}ar=false}ai=function(at){ao=ao.next={task:at,domain:an&&process.domain,next:null};if(!ar){ar=true;al()}};if(typeof process!==\"undefined\"&&process.nextTick){an=true;al=function(){process.nextTick(e)}}else{if(typeof setImmediate===\"function\"){if(typeof window!==\"undefined\"){al=setImmediate.bind(window,e)}else{al=function(){setImmediate(e)}}}else{if(typeof MessageChannel!==\"undefined\"){var aq=new MessageChannel();aq.port1.onmessage=function(){al=am;aq.port1.onmessage=e;e()};var am=function(){aq.port2.postMessage(0)};al=function(){setTimeout(e,0);am()}}else{al=function(){setTimeout(e,0)}}}}return ai})();var a=Function.call;function p(e){return function(){return a.apply(e,arguments)}}var ab=p(Array.prototype.slice);var c=p(Array.prototype.reduce||function(an,am){var e=0,al=this.length;if(arguments.length===1){do{if(e in this){am=this[e++];break}if(++e>=al){throw new TypeError()}}while(1)}for(;e<al;e++){if(e in this){am=an(am,this[e],e)}}return am});var R=p(Array.prototype.indexOf||function(al){for(var e=0;e<this.length;e++){if(this[e]===al){return e}}return -1});var b=p(Array.prototype.map||function(an,al){var e=this;var am=[];c(e,function(aq,ap,ao){am.push(an.call(al,ap,ao,e))},void 0);return am});var H=Object.create||function(al){function e(){}e.prototype=al;return new e()};var A=p(Object.prototype.hasOwnProperty);var G=Object.keys||function(e){var am=[];for(var al in e){if(A(e,al)){am.push(al)}}return am};var ak=p(Object.prototype.toString);function V(e){return e===Object(e)}function w(e){return(ak(e)===\"[object StopIteration]\"||e instanceof I)}var I;if(typeof ReturnValue!==\"undefined\"){I=ReturnValue}else{I=function(e){this.value=e}}var Y=\"From previous event:\";function m(e,ao){if(E&&ao.stack&&typeof e===\"object\"&&e!==null&&e.stack&&e.stack.indexOf(Y)===-1){var am=[];for(var an=ao;!!an;an=an.source){if(an.stack){am.unshift(an.stack)}}am.unshift(e.stack);var al=am.join(\"\\n\"+Y+\"\\n\");e.stack=K(al)}}function K(an){var al=an.split(\"\\n\");var ao=[];for(var am=0;am<al.length;++am){var e=al[am];if(!g(e)&&!Z(e)&&e){ao.push(e)}}return ao.join(\"\\n\")}function Z(e){return e.indexOf(\"(module.js:\")!==-1||e.indexOf(\"(node.js:\")!==-1}function af(e){var an=/at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(e);if(an){return[an[1],Number(an[2])]}var am=/at ([^ ]+):(\\d+):(?:\\d+)$/.exec(e);if(am){return[am[1],Number(am[2])]}var al=/.*@(.+):(\\d+)$/.exec(e);if(al){return[al[1],Number(al[2])]}}function g(al){var am=af(al);if(!am){return false}var an=am[0];var e=am[1];return an===j&&e>=u&&e<=s}function W(){if(!E){return}try{throw new Error()}catch(ao){var al=ao.stack.split(\"\\n\");var am=al[0].indexOf(\"@\")>0?al[1]:al[2];var an=af(am);if(!an){return}j=an[0];return an[1]}}function C(am,e,al){return function(){if(typeof console!==\"undefined\"&&typeof console.warn===\"function\"){console.warn(e+\" is deprecated, use \"+al+\" instead.\",new Error(\"\").stack)}return am.apply(am,arguments)}}function l(e){if(y(e)){return e}if(M(e)){return L(e)}else{return z(e)}}l.resolve=l;l.nextTick=ai;l.longStackSupport=false;l.defer=h;function h(){var an=[],ap=[],ao;var al=H(h.prototype);var ar=H(N.prototype);ar.promiseDispatch=function(au,av,at){var e=ab(arguments);if(an){an.push(e);if(av===\"when\"&&at[1]){ap.push(at[1])}}else{ai(function(){ao.promiseDispatch.apply(ao,e)})}};ar.valueOf=function(){if(an){return ar}var e=J(ao);if(y(e)){ao=e}return e};ar.inspect=function(){if(!ao){return{state:\"pending\"}}return ao.inspect()};if(l.longStackSupport&&E){try{throw new Error()}catch(aq){ar.stack=aq.stack.substring(aq.stack.indexOf(\"\\n\")+1)}}function am(e){ao=e;ar.source=e;c(an,function(au,at){ai(function(){e.promiseDispatch.apply(e,at)})},void 0);an=void 0;ap=void 0}al.promise=ar;al.resolve=function(e){if(ao){return}am(l(e))};al.fulfill=function(e){if(ao){return}am(z(e))};al.reject=function(e){if(ao){return}am(D(e))};al.notify=function(e){if(ao){return}c(ap,function(au,at){ai(function(){at(e)})},void 0)};return al}h.prototype.makeNodeResolver=function(){var e=this;return function(al,am){if(al){e.reject(al)}else{if(arguments.length>2){e.resolve(ab(arguments,1))}else{e.resolve(am)}}}};l.Promise=T;l.promise=T;function T(am){if(typeof am!==\"function\"){throw new TypeError(\"resolver must be a function.\")}var e=h();try{am(e.resolve,e.reject,e.notify)}catch(al){e.reject(al)}return e.promise}T.race=n;T.all=x;T.reject=D;T.resolve=l;l.passByCopy=function(e){return e};N.prototype.passByCopy=function(){return this};l.join=function(e,al){return l(e).join(al)};N.prototype.join=function(e){return l([this,e]).spread(function(al,am){if(al===am){return al}else{throw new Error(\"Can't join: not the same: \"+al+\" \"+am)}})};l.race=n;function n(e){return T(function(ao,an){for(var am=0,al=e.length;am<al;am++){l(e[am]).then(ao,an)}})}N.prototype.race=function(){return this.then(l.race)};l.makePromise=N;function N(al,ao,an){if(ao===void 0){ao=function(ap){return D(new Error(\"Promise does not support operation: \"+ap))}}if(an===void 0){an=function(){return{state:\"unknown\"}}}var am=H(N.prototype);am.promiseDispatch=function(at,au,aq){var ap;try{if(al[au]){ap=al[au].apply(am,aq)}else{ap=ao.call(am,au,aq)}}catch(ar){ap=D(ar)}if(at){at(ap)}};am.inspect=an;if(an){var e=an();if(e.state===\"rejected\"){am.exception=e.reason}am.valueOf=function(){var ap=an();if(ap.state===\"pending\"||ap.state===\"rejected\"){return am}return ap.value}}return am}N.prototype.toString=function(){return\"[object Promise]\"};N.prototype.then=function(ao,ap,al){var aq=this;var ar=h();var am=false;function an(av){try{return typeof ao===\"function\"?ao(av):av}catch(au){return D(au)}}function at(au){if(typeof ap===\"function\"){m(au,aq);try{return ap(au)}catch(av){return D(av)}}return D(au)}function e(au){return typeof al===\"function\"?al(au):au}ai(function(){aq.promiseDispatch(function(au){if(am){return}am=true;ar.resolve(an(au))},\"when\",[function(au){if(am){return}am=true;ar.resolve(at(au))}])});aq.promiseDispatch(void 0,\"when\",[void 0,function(au){var aw;var ax=false;try{aw=e(au)}catch(av){ax=true;if(l.onerror){l.onerror(av)}else{throw av}}if(!ax){ar.notify(aw)}}]);return ar.promise};l.when=O;function O(am,e,al,an){return l(am).then(e,al,an)}N.prototype.thenResolve=function(e){return this.then(function(){return e})};l.thenResolve=function(al,e){return l(al).thenResolve(e)};N.prototype.thenReject=function(e){return this.then(function(){throw e})};l.thenReject=function(al,e){return l(al).thenReject(e)};l.nearer=J;function J(al){if(y(al)){var e=al.inspect();if(e.state===\"fulfilled\"){return e.value}}return al}l.isPromise=y;function y(e){return V(e)&&typeof e.promiseDispatch===\"function\"&&typeof e.inspect===\"function\"}l.isPromiseAlike=M;function M(e){return V(e)&&typeof e.then===\"function\"}l.isPending=ac;function ac(e){return y(e)&&e.inspect().state===\"pending\"}N.prototype.isPending=function(){return this.inspect().state===\"pending\"};l.isFulfilled=P;function P(e){return !y(e)||e.inspect().state===\"fulfilled\"}N.prototype.isFulfilled=function(){return this.inspect().state===\"fulfilled\"};l.isRejected=U;function U(e){return y(e)&&e.inspect().state===\"rejected\"}N.prototype.isRejected=function(){return this.inspect().state===\"rejected\"};var aa=[];var aj=[];var o=true;function ag(){aa.length=0;aj.length=0;if(!o){o=true}}function B(al,e){if(!o){return}aj.push(al);if(e&&typeof e.stack!==\"undefined\"){aa.push(e.stack)}else{aa.push(\"(no stack) \"+e)}}function k(al){if(!o){return}var e=R(aj,al);if(e!==-1){aj.splice(e,1);aa.splice(e,1)}}l.resetUnhandledRejections=ag;l.getUnhandledReasons=function(){return aa.slice()};l.stopUnhandledRejectionTracking=function(){ag();o=false};ag();l.reject=D;function D(al){var e=N({when:function(ao){if(ao){k(this)}return ao?ao(al):this}},function an(){return this},function am(){return{state:\"rejected\",reason:al}});B(e,al);return e}l.fulfill=z;function z(e){return N({when:function(){return e},get:function(am){return e[am]},set:function(am,an){e[am]=an},\"delete\":function(am){delete e[am]},post:function(an,am){if(an===null||an===void 0){return e.apply(void 0,am)}else{return e[an].apply(e,am)}},apply:function(an,am){return e.apply(an,am)},keys:function(){return G(e)}},void 0,function al(){return{state:\"fulfilled\",value:e}})}function L(al){var e=h();ai(function(){try{al.then(e.resolve,e.reject,e.notify)}catch(am){e.reject(am)}});return e.promise}l.master=v;function v(e){return N({isDef:function(){}},function al(an,am){return X(e,an,am)},function(){return l(e).inspect()})}l.spread=f;function f(am,e,al){return l(am).spread(e,al)}N.prototype.spread=function(e,al){return this.all().then(function(am){return e.apply(void 0,am)},al)};l.async=S;function S(e){return function(){function am(at,aq){var ap;if(typeof StopIteration===\"undefined\"){try{ap=an[at](aq)}catch(ar){return D(ar)}if(ap.done){return ap.value}else{return O(ap.value,ao,al)}}else{try{ap=an[at](aq)}catch(ar){if(w(ar)){return ar.value}else{return D(ar)}}return O(ap,ao,al)}}var an=e.apply(this,arguments);var ao=am.bind(am,\"next\");var al=am.bind(am,\"throw\");return ao()}}l.spawn=r;function r(e){l.done(l.async(e)())}l[\"return\"]=i;function i(e){throw new I(e)}l.promised=q;function q(e){return function(){return f([this,x(arguments)],function(al,am){return e.apply(al,am)})}}l.dispatch=X;function X(al,am,e){return l(al).dispatch(am,e)}N.prototype.dispatch=function(an,am){var al=this;var e=h();ai(function(){al.promiseDispatch(e.resolve,an,am)});return e.promise};l.get=function(e,al){return l(e).dispatch(\"get\",[al])};N.prototype.get=function(e){return this.dispatch(\"get\",[e])};l.set=function(e,al,am){return l(e).dispatch(\"set\",[al,am])};N.prototype.set=function(e,al){return this.dispatch(\"set\",[e,al])};l.del=l[\"delete\"]=function(e,al){return l(e).dispatch(\"delete\",[al])};N.prototype.del=N.prototype[\"delete\"]=function(e){return this.dispatch(\"delete\",[e])};l.mapply=l.post=function(am,al,e){return l(am).dispatch(\"post\",[al,e])};N.prototype.mapply=N.prototype.post=function(al,e){return this.dispatch(\"post\",[al,e])};l.send=l.mcall=l.invoke=function(al,e){return l(al).dispatch(\"post\",[e,ab(arguments,2)])};N.prototype.send=N.prototype.mcall=N.prototype.invoke=function(e){return this.dispatch(\"post\",[e,ab(arguments,1)])};l.fapply=function(al,e){return l(al).dispatch(\"apply\",[void 0,e])};N.prototype.fapply=function(e){return this.dispatch(\"apply\",[void 0,e])};l[\"try\"]=l.fcall=function(e){return l(e).dispatch(\"apply\",[void 0,ab(arguments,1)])};N.prototype.fcall=function(){return this.dispatch(\"apply\",[void 0,ab(arguments)])};l.fbind=function(al){var an=l(al);var e=ab(arguments,1);return function am(){return an.dispatch(\"apply\",[this,e.concat(ab(arguments))])}};N.prototype.fbind=function(){var am=this;var e=ab(arguments);return function al(){return am.dispatch(\"apply\",[this,e.concat(ab(arguments))])}};l.keys=function(e){return l(e).dispatch(\"keys\",[])};N.prototype.keys=function(){return this.dispatch(\"keys\",[])};l.all=x;function x(e){return O(e,function(an){var am=0;var al=h();c(an,function(ar,aq,ap){var ao;if(y(aq)&&(ao=aq.inspect()).state===\"fulfilled\"){an[ap]=ao.value}else{++am;O(aq,function(at){an[ap]=at;if(--am===0){al.resolve(an)}},al.reject,function(at){al.notify({index:ap,value:at})})}},void 0);if(am===0){al.resolve(an)}return al.promise})}N.prototype.all=function(){return x(this)};l.allResolved=C(d,\"allResolved\",\"allSettled\");function d(e){return O(e,function(al){al=b(al,l);return O(x(b(al,function(am){return O(am,ad,ad)})),function(){return al})})}N.prototype.allResolved=function(){return d(this)};l.allSettled=t;function t(e){return l(e).allSettled()}N.prototype.allSettled=function(){return this.then(function(e){return x(b(e,function(am){am=l(am);function al(){return am.inspect()}return am.then(al,al)}))})};l.fail=l[\"catch\"]=function(e,al){return l(e).then(void 0,al)};N.prototype.fail=N.prototype[\"catch\"]=function(e){return this.then(void 0,e)};l.progress=F;function F(e,al){return l(e).then(void 0,void 0,al)}N.prototype.progress=function(e){return this.then(void 0,void 0,e)};l.fin=l[\"finally\"]=function(e,al){return l(e)[\"finally\"](al)};N.prototype.fin=N.prototype[\"finally\"]=function(e){e=l(e);return this.then(function(al){return e.fcall().then(function(){return al})},function(al){return e.fcall().then(function(){throw al})})};l.done=function(am,e,an,al){return l(am).done(e,an,al)};N.prototype.done=function(e,an,am){var al=function(ap){ai(function(){m(ap,ao);if(l.onerror){l.onerror(ap)}else{throw ap}})};var ao=e||an||am?this.then(e,an,am):this;if(typeof process===\"object\"&&process&&process.domain){al=process.domain.bind(al)}ao.then(void 0,al)};l.timeout=function(al,e,am){return l(al).timeout(e,am)};N.prototype.timeout=function(al,am){var e=h();var an=setTimeout(function(){e.reject(new Error(am||\"Timed out after \"+al+\" ms\"))},al);this.then(function(ao){clearTimeout(an);e.resolve(ao)},function(ao){clearTimeout(an);e.reject(ao)},e.notify);return e.promise};l.delay=function(e,al){if(al===void 0){al=e;e=void 0}return l(e).delay(al)};N.prototype.delay=function(e){return this.then(function(am){var al=h();setTimeout(function(){al.resolve(am)},e);return al.promise})};l.nfapply=function(al,e){return l(al).nfapply(e)};N.prototype.nfapply=function(al){var e=h();var am=ab(al);am.push(e.makeNodeResolver());this.fapply(am).fail(e.reject);return e.promise};l.nfcall=function(al){var e=ab(arguments,1);return l(al).nfapply(e)};N.prototype.nfcall=function(){var al=ab(arguments);var e=h();al.push(e.makeNodeResolver());this.fapply(al).fail(e.reject);return e.promise};l.nfbind=l.denodeify=function(al){var e=ab(arguments,1);return function(){var an=e.concat(ab(arguments));var am=h();an.push(am.makeNodeResolver());l(al).fapply(an).fail(am.reject);return am.promise}};N.prototype.nfbind=N.prototype.denodeify=function(){var e=ab(arguments);e.unshift(this);return l.denodeify.apply(void 0,e)};l.nbind=function(am,e){var al=ab(arguments,2);return function(){var ap=al.concat(ab(arguments));var an=h();ap.push(an.makeNodeResolver());function ao(){return am.apply(e,arguments)}l(ao).fapply(ap).fail(an.reject);return an.promise}};N.prototype.nbind=function(){var e=ab(arguments,0);e.unshift(this);return l.nbind.apply(void 0,e)};l.nmapply=l.npost=function(am,al,e){return l(am).npost(al,e)};N.prototype.nmapply=N.prototype.npost=function(am,al){var an=ab(al||[]);var e=h();an.push(e.makeNodeResolver());this.dispatch(\"post\",[am,an]).fail(e.reject);return e.promise};l.nsend=l.nmcall=l.ninvoke=function(am,al){var an=ab(arguments,2);var e=h();an.push(e.makeNodeResolver());l(am).dispatch(\"post\",[al,an]).fail(e.reject);return e.promise};N.prototype.nsend=N.prototype.nmcall=N.prototype.ninvoke=function(al){var am=ab(arguments,1);var e=h();am.push(e.makeNodeResolver());this.dispatch(\"post\",[al,am]).fail(e.reject);return e.promise};l.nodeify=ae;function ae(al,e){return l(al).nodeify(e)}N.prototype.nodeify=function(e){if(e){this.then(function(al){ai(function(){e(null,al)})},function(al){ai(function(){e(al)})})}else{return this}};var s=W();return l});\n",
              "type": "blob"
            },
            "pixie": {
              "path": "pixie",
              "content": "module.exports = {\"version\":\"1.0.1\"};",
              "type": "blob"
            },
            "test/test": {
              "path": "test/test",
              "content": "(function() {\n  var Q;\n\n  Q = require(\"../main\");\n\n  describe(\"q\", function() {\n    return it(\"should be a promise library\", function(done) {\n      return Q(\"wat\").then(function(value) {\n        assert.equal(value, \"wat\");\n        return done();\n      }).done();\n    });\n  });\n\n}).call(this);\n",
              "type": "blob"
            }
          },
          "progenitor": {
            "url": "http://www.danielx.net/editor/"
          },
          "version": "1.0.1",
          "entryPoint": "main",
          "repository": {
            "branch": "v1.0.1",
            "default_branch": "master",
            "full_name": "distri/q",
            "homepage": null,
            "description": "Packaging q for distri",
            "html_url": "https://github.com/distri/q",
            "url": "https://api.github.com/repos/distri/q",
            "publishBranch": "gh-pages"
          },
          "dependencies": {}
        }
      }
    },
    "styl": {
      "source": {
        "LICENSE": {
          "path": "LICENSE",
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014 \n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n",
          "mode": "100644",
          "type": "blob"
        },
        "README.md": {
          "path": "README.md",
          "content": "styl\n====\n\nWrapper for styl\n",
          "mode": "100644",
          "type": "blob"
        },
        "lib/styl.js": {
          "path": "lib/styl.js",
          "content": "\n/**\n * Require the given path.\n *\n * @param {String} path\n * @return {Object} exports\n * @api public\n */\n\nfunction require(path, parent, orig) {\n  var resolved = require.resolve(path);\n\n  // lookup failed\n  if (null == resolved) {\n    orig = orig || path;\n    parent = parent || 'root';\n    var err = new Error('Failed to require \"' + orig + '\" from \"' + parent + '\"');\n    err.path = orig;\n    err.parent = parent;\n    err.require = true;\n    throw err;\n  }\n\n  var module = require.modules[resolved];\n\n  // perform real require()\n  // by invoking the module's\n  // registered function\n  if (!module.exports) {\n    module.exports = {};\n    module.client = module.component = true;\n    module.call(this, module.exports, require.relative(resolved), module);\n  }\n\n  return module.exports;\n}\n\n/**\n * Registered modules.\n */\n\nrequire.modules = {};\n\n/**\n * Registered aliases.\n */\n\nrequire.aliases = {};\n\n/**\n * Resolve `path`.\n *\n * Lookup:\n *\n *   - PATH/index.js\n *   - PATH.js\n *   - PATH\n *\n * @param {String} path\n * @return {String} path or null\n * @api private\n */\n\nrequire.resolve = function(path) {\n  if (path.charAt(0) === '/') path = path.slice(1);\n\n  var paths = [\n    path,\n    path + '.js',\n    path + '.json',\n    path + '/index.js',\n    path + '/index.json'\n  ];\n\n  for (var i = 0; i < paths.length; i++) {\n    var path = paths[i];\n    if (require.modules.hasOwnProperty(path)) return path;\n    if (require.aliases.hasOwnProperty(path)) return require.aliases[path];\n  }\n};\n\n/**\n * Normalize `path` relative to the current path.\n *\n * @param {String} curr\n * @param {String} path\n * @return {String}\n * @api private\n */\n\nrequire.normalize = function(curr, path) {\n  var segs = [];\n\n  if ('.' != path.charAt(0)) return path;\n\n  curr = curr.split('/');\n  path = path.split('/');\n\n  for (var i = 0; i < path.length; ++i) {\n    if ('..' == path[i]) {\n      curr.pop();\n    } else if ('.' != path[i] && '' != path[i]) {\n      segs.push(path[i]);\n    }\n  }\n\n  return curr.concat(segs).join('/');\n};\n\n/**\n * Register module at `path` with callback `definition`.\n *\n * @param {String} path\n * @param {Function} definition\n * @api private\n */\n\nrequire.register = function(path, definition) {\n  require.modules[path] = definition;\n};\n\n/**\n * Alias a module definition.\n *\n * @param {String} from\n * @param {String} to\n * @api private\n */\n\nrequire.alias = function(from, to) {\n  if (!require.modules.hasOwnProperty(from)) {\n    throw new Error('Failed to alias \"' + from + '\", it does not exist');\n  }\n  require.aliases[to] = from;\n};\n\n/**\n * Return a require function relative to the `parent` path.\n *\n * @param {String} parent\n * @return {Function}\n * @api private\n */\n\nrequire.relative = function(parent) {\n  var p = require.normalize(parent, '..');\n\n  /**\n   * lastIndexOf helper.\n   */\n\n  function lastIndexOf(arr, obj) {\n    var i = arr.length;\n    while (i--) {\n      if (arr[i] === obj) return i;\n    }\n    return -1;\n  }\n\n  /**\n   * The relative require() itself.\n   */\n\n  function localRequire(path) {\n    var resolved = localRequire.resolve(path);\n    return require(resolved, parent, path);\n  }\n\n  /**\n   * Resolve relative to the parent.\n   */\n\n  localRequire.resolve = function(path) {\n    var c = path.charAt(0);\n    if ('/' == c) return path.slice(1);\n    if ('.' == c) return require.normalize(p, path);\n\n    // resolve deps by returning\n    // the dep in the nearest \"deps\"\n    // directory\n    var segs = parent.split('/');\n    var i = lastIndexOf(segs, 'deps') + 1;\n    if (!i) i = 0;\n    path = segs.slice(0, i + 1).join('/') + '/deps/' + path;\n    return path;\n  };\n\n  /**\n   * Check if module is defined at `path`.\n   */\n\n  localRequire.exists = function(path) {\n    return require.modules.hasOwnProperty(localRequire.resolve(path));\n  };\n\n  return localRequire;\n};\nrequire.register(\"visionmedia-debug/index.js\", function(exports, require, module){\nif ('undefined' == typeof window) {\n  module.exports = require('./lib/debug');\n} else {\n  module.exports = require('./debug');\n}\n\n});\nrequire.register(\"visionmedia-debug/debug.js\", function(exports, require, module){\n\n/**\n * Expose `debug()` as the module.\n */\n\nmodule.exports = debug;\n\n/**\n * Create a debugger with the given `name`.\n *\n * @param {String} name\n * @return {Type}\n * @api public\n */\n\nfunction debug(name) {\n  if (!debug.enabled(name)) return function(){};\n\n  return function(fmt){\n    fmt = coerce(fmt);\n\n    var curr = new Date;\n    var ms = curr - (debug[name] || curr);\n    debug[name] = curr;\n\n    fmt = name\n      + ' '\n      + fmt\n      + ' +' + debug.humanize(ms);\n\n    // This hackery is required for IE8\n    // where `console.log` doesn't have 'apply'\n    window.console\n      && console.log\n      && Function.prototype.apply.call(console.log, console, arguments);\n  }\n}\n\n/**\n * The currently active debug mode names.\n */\n\ndebug.names = [];\ndebug.skips = [];\n\n/**\n * Enables a debug mode by name. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} name\n * @api public\n */\n\ndebug.enable = function(name) {\n  try {\n    localStorage.debug = name;\n  } catch(e){}\n\n  var split = (name || '').split(/[\\s,]+/)\n    , len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    name = split[i].replace('*', '.*?');\n    if (name[0] === '-') {\n      debug.skips.push(new RegExp('^' + name.substr(1) + '$'));\n    }\n    else {\n      debug.names.push(new RegExp('^' + name + '$'));\n    }\n  }\n};\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\ndebug.disable = function(){\n  debug.enable('');\n};\n\n/**\n * Humanize the given `ms`.\n *\n * @param {Number} m\n * @return {String}\n * @api private\n */\n\ndebug.humanize = function(ms) {\n  var sec = 1000\n    , min = 60 * 1000\n    , hour = 60 * min;\n\n  if (ms >= hour) return (ms / hour).toFixed(1) + 'h';\n  if (ms >= min) return (ms / min).toFixed(1) + 'm';\n  if (ms >= sec) return (ms / sec | 0) + 's';\n  return ms + 'ms';\n};\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\ndebug.enabled = function(name) {\n  for (var i = 0, len = debug.skips.length; i < len; i++) {\n    if (debug.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (var i = 0, len = debug.names.length; i < len; i++) {\n    if (debug.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Coerce `val`.\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n// persist\n\nif (window.localStorage) debug.enable(localStorage.debug);\n\n});\nrequire.register(\"visionmedia-css-whitespace/index.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar parse = require('./lib/parser');\nvar compile = require('./lib/compiler');\n\n/**\n * Compile a whitespace significant\n * `str` of CSS to the valid CSS\n * equivalent.\n *\n * @param {String} str\n * @return {String}\n * @api public\n */\n\nmodule.exports = function(str){\n  return compile(parse(str));\n};\n\n});\nrequire.register(\"visionmedia-css-whitespace/lib/compiler.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('css-whitespace:parser');\n\n/**\n * Compile the given `node`.\n *\n * @param {Array} node\n * @return {String}\n * @api private\n */\n\nmodule.exports = function(node){\n  var indents = 0;\n  var rules = [];\n  var stash = [];\n  var level = 0;\n  var nest = 0;\n\n  if (debug.enabled) {\n    var util = require('util');\n    console.log(util.inspect(node, false, 12, true));\n  }\n\n  return visit(node);\n\n  /**\n   * Visit `node`.\n   */\n\n  function visit(node) {\n    switch (node[0]) {\n      case 'root':\n        return root(node);\n      case 'rule':\n        if ('@' == node[1][0][0]) ++nest;\n        var ret = rule(node);\n        if ('@' == node[1][0][0]) --nest;\n        return ret;\n      case 'block':\n        ++level;\n        var ret = block(node);\n        --level;\n        return ret;\n      case 'prop':\n        return prop(node);\n      case 'comment':\n        return comment(node);\n      default:\n        throw new Error('invalid node \"' + node[0] + '\"');\n    }\n  }\n\n  /**\n   * Visit block.\n   */\n\n  function block(node) {\n    var buf = [];\n    var nodes = node[1];\n\n    for (var i = 0; i < nodes.length; ++i) {\n      buf.push(visit(nodes[i]));\n    }\n\n    return buf.join('');\n  }\n\n  /**\n   * Visit comment.\n   */\n\n  function comment(node) {\n    return indent() + '/*' + node[1] + '*/\\n';\n  }\n\n  /**\n   * Visit prop.\n   */\n\n  function prop(node) {\n    var prop = node[1];\n    var val = node[2];\n    return indent() + prop + ': ' + val + ';\\n';\n  }\n\n  /**\n   * Visit rule.\n   */\n\n  function rule(node) {\n    var font = '@font-face' == node[1][0].trim();\n    var rule = node[1];\n    var block = node[2];\n    var buf = '';\n\n    if (!block) return rule.join('') + ';';\n\n    rules.push(node);\n\n    if ('@' == rule[0][0] && !font) {\n      buf = join(rules) + ' {\\n';\n      visit(block);\n      buf += stash.join('\\n');\n      buf += '\\n}';\n      stash = [];\n    } else if (nest && !font) {\n      indents = 1;\n      buf = join(rules, 1) + ' {\\n';\n      indents = 2;\n      buf += visit(block);\n      buf += '  }';\n      indents = 1;\n    } else {\n      indents = 0;\n      buf = join(rules) + ' {\\n'\n      indents = 1;\n      buf += visit(block);\n      indents = 0;\n      buf += '}';\n      if (!hasProperties(block)) buf = '';\n    }\n\n    if (rules.length > 1) {\n      if (hasProperties(block)) stash.push(buf);\n      buf = '';\n    }\n\n    rules.pop();\n\n    return buf;\n  }\n\n  /**\n   * Visit root.\n   */\n\n  function root(node) {\n    var buf = [];\n    for (var i = 0; i < node[1].length; ++i) {\n      buf.push(visit(node[1][i]));\n      if (stash.length) {\n        buf = buf.concat(stash);\n        stash = [];\n      }\n    }\n    return buf.join('\\n\\n');\n  }\n\n  /**\n   * Join the given rules.\n   *\n   * @param {Array} rules\n   * @param {Number} [offset]\n   * @return {String}\n   * @api private\n   */\n\n  function join(rules, offset) {\n    offset = offset || 0;\n    var selectors = [];\n    var buf = [];\n    var curr;\n    var next;\n\n    function compile(rules, i) {\n      if (offset != i) {\n        rules[i][1].forEach(function(selector){\n          var parent = ~selector.indexOf('&');\n          selector = selector.replace('&', '');\n          buf.unshift(parent ? selector : ' ' + selector);\n          compile(rules, i - 1);\n          buf.shift();\n        });\n      } else {\n        rules[i][1].forEach(function(selector){\n          var tail = buf.join('');\n          selectors.push(indent() + selector + tail);\n        });\n      }\n    }\n\n    compile(rules, rules.length - 1);\n\n    return selectors.join(',\\n');\n  }\n\n  /**\n   * Return indent.\n   */\n\n  function indent() {\n    return Array(indents + 1).join('  ');\n  }\n};\n\n/**\n * Check if `block` has properties.\n *\n * @param {Array} block\n * @return {Boolean}\n * @api private\n */\n\nfunction hasProperties(block) {\n  var nodes = block[1];\n  for (var i = 0; i < nodes.length; ++i) {\n    if ('prop' == nodes[i][0]) return true;\n  }\n  return false;\n}\n\n/**\n * Blank string filter.\n *\n * @api private\n */\n\nfunction blank(str) {\n  return '' != str;\n}\n\n});\nrequire.register(\"visionmedia-css-whitespace/lib/lexer.js\", function(exports, require, module){\n\n/**\n * Pesudo selectors.\n */\n\nvar pseudos = [\n  ':selection',\n  'fullscreen',\n  'nth-child',\n  'first-child',\n  'last-child',\n  'link',\n  'visited',\n  'hover',\n  'active',\n  'focus',\n  'first-letter',\n  'first-line',\n  'before',\n  'after',\n  'lang',\n  'enabled',\n  'disabled',\n  'only-child',\n  'only-of-type',\n  'first-of-type',\n  'last-of-type',\n  'nth-last-of-type',\n  'nth-of-type',\n  'root',\n  'empty',\n  'target',\n  'not',\n  '-o',\n  '-ms',\n  '-moz',\n  '-webkit'\n]\n\n/**\n * Property regexp.\n */\n\npseudos = pseudos.join('|');\nvar propre = new RegExp('^ *([-\\\\w]+):(?!' + pseudos + ') *([^\\n]*)');\n\n/**\n * Scan the given `str` returning tokens.\n *\n * @param {String} str\n * @return {Array}\n * @api private\n */\n\nmodule.exports = function(str) {\n  var indents = [0];\n  var stash = [];\n\n  // strip blanks\n  str = str.replace(/\\r/g, '');\n  str = str.replace(/\\n\\s*\\n/gm, '\\n');\n\n  return scan();\n\n  /**\n   * tok+\n   */\n\n  function scan() {\n    var toks = []\n      , curr;\n\n    while (str.length) {\n      curr = next();\n      curr && toks.push(curr);\n      if (str.length && !curr) {\n        throw new Error('syntax error near \"' + str.slice(0, 10) + '\"');\n      }\n    }\n\n    toks = toks.concat(stash);\n    while (indents.pop()) toks.push(['outdent']);\n    toks.push(['eos']);\n    return toks;\n  }\n\n  /**\n   *   eos\n   * | indentation\n   * | rule\n   */\n\n  function next() {\n    return stashed()\n      || comment()\n      || csscomment()\n      || indentation()\n      || prop()\n      || rule();\n  }\n\n  /**\n   * Deferred tokens.\n   */\n\n  function stashed() {\n    return stash.shift();\n  }\n\n  /**\n   * Comment.\n   */\n\n  function comment() {\n    var m = str.match(/^\\/\\/([^\\n]*)/);\n    if (!m) return;\n    str = str.slice(m[0].length);\n    return next();\n  }\n\n  /**\n   * Multiline comment.\n   */\n\n  function csscomment() {\n    if ('/' != str[0] || '*' != str[1]) return;\n    str = str.slice(2);\n\n    var i = 0;\n    while ('*' != str[i] && '/' != str[i + 1]) ++i;\n\n    var buf = str.slice(0, i);\n    str = str.slice(buf.length + 2);\n\n    return ['comment', buf];\n  }\n\n  /**\n   *   INDENT\n   * | OUTDENT\n   */\n\n  function indentation() {\n    var spaces = str.match(/^\\n( *)/);\n    if (!spaces) return;\n    str = str.slice(spaces[0].length);\n    spaces = spaces[1].length;\n    var prev = indents[indents.length - 1];\n\n    // INDENT\n    if (spaces > prev) return indent(spaces);\n\n    // OUTDENT\n    if (spaces < prev) return outdent(spaces);\n\n    return next();\n  }\n\n  /**\n   * Indent.\n   */\n\n  function indent(spaces) {\n    indents.push(spaces);\n    return ['indent'];\n  }\n\n  /**\n   * Outdent.\n   */\n\n  function outdent(spaces) {\n    while (indents[indents.length - 1] > spaces) {\n      indents.pop();\n      stash.push(['outdent']);\n    }\n    return stashed();\n  }\n\n  /**\n   * Property.\n   */\n\n  function prop() {\n    var m = str.match(propre);\n    if (!m) return;\n    str = str.slice(m[0].length);\n    return ['prop', m[1], m[2]];\n  }\n\n  /**\n   * Rule.\n   */\n\n  function rule() {\n    var m = str.match(/^([^\\n,]+, *\\n|[^\\n]+)+/);\n    if (!m) return;\n    str = str.slice(m[0].length);\n    m = m[0].split(/\\s*,\\s*/);\n    return ['rule', m];\n  }\n}\n\n});\nrequire.register(\"visionmedia-css-whitespace/lib/parser.js\", function(exports, require, module){\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('css-whitespace:lexer');\nvar scan = require('./lexer');\n\n/**\n * Parse the given `str`, returning an AST.\n *\n * @param {String} str\n * @return {Array}\n * @api private\n */\n\nmodule.exports = function(str) {\n  var toks = scan(str);\n\n  if (debug.enabled) {\n    var util = require('util');\n    console.log(util.inspect(toks, false, 12, true));\n  }\n\n  return stmts();\n\n  /**\n   * Grab the next token.\n   */\n\n  function next() {\n    return toks.shift();\n  }\n\n  /**\n   * Check if the next token is `type`.\n   */\n\n  function is(type) {\n    if (type == toks[0][0]) return true;\n  }\n\n  /**\n   * Expect `type` or throw.\n   */\n\n  function expect(type) {\n    if (is(type)) return next();\n    throw new Error('expected \"' + type + '\", but got \"' + toks[0][0] + '\"');\n  }\n\n  /**\n   * stmt+\n   */\n\n  function stmts() {\n    var stmts = [];\n    while (!is('eos')) stmts.push(stmt());\n    return ['root', stmts];\n  }\n\n  /**\n   * INDENT stmt+ OUTDENT\n   */\n\n  function block() {\n    var props = [];\n    expect('indent');\n    while (!is('outdent')) props.push(stmt());\n    expect('outdent');\n    return ['block', props];\n  }\n\n  /**\n   *   rule\n   * | prop\n   */\n\n  function stmt() {\n    if (is('rule')) return rule();\n    if (is('prop')) return prop();\n    return next();\n  }\n\n  /**\n   *   prop\n   * | prop INDENT rule* OUTDENT\n   */\n\n  function prop() {\n    var prop = next();\n    if (is('indent')) {\n      next();\n      while (!is('outdent')) {\n        var tok = next();\n        prop[2] += ' ' + tok[1].join(', ');\n      }\n      expect('outdent');\n    }\n    return prop;\n  }\n\n  /**\n   * rule block?\n   */\n\n  function rule() {\n    var rule = next();\n    if (is('indent')) rule.push(block());\n    return rule;\n  }\n}\n\n});\nrequire.register(\"visionmedia-css-parse/index.js\", function(exports, require, module){\n\nmodule.exports = function(css, options){\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   */\n\n  function updatePosition(str) {\n    var lines = str.match(/\\n/g);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf('\\n');\n    column = ~i ? str.length-i : column + str.length;\n  }\n\n  function position() {\n    var start = { line: lineno, column: column };\n    if (!options.position) return positionNoop;\n    return function(node){\n      node.position = {\n        start: start,\n        end: { line: lineno, column: column }\n      };\n      whitespace();\n      return node;\n    }\n  }\n\n  /**\n   * Return `node`.\n   */\n  function positionNoop(node) {\n    whitespace();\n    return node;\n  }\n\n  /**\n   * Parse stylesheet.\n   */\n\n  function stylesheet() {\n    return {\n      type: 'stylesheet',\n      stylesheet: {\n        rules: rules()\n      }\n    };\n  }\n\n  /**\n   * Opening brace.\n   */\n\n  function open() {\n    return match(/^{\\s*/);\n  }\n\n  /**\n   * Closing brace.\n   */\n\n  function close() {\n    return match(/^}/);\n  }\n\n  /**\n   * Parse ruleset.\n   */\n\n  function rules() {\n    var node;\n    var rules = [];\n    whitespace();\n    comments(rules);\n    while (css[0] != '}' && (node = atrule() || rule())) {\n      rules.push(node);\n      comments(rules);\n    }\n    return rules;\n  }\n\n  /**\n   * Match `re` and return captures.\n   */\n\n  function match(re) {\n    var m = re.exec(css);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    css = css.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n\n  function whitespace() {\n    match(/^\\s*/);\n  }\n\n  /**\n   * Parse comments;\n   */\n\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while (c = comment()) rules.push(c);\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   */\n\n  function comment() {\n    var pos = position();\n    if ('/' != css[0] || '*' != css[1]) return;\n\n    var i = 2;\n    while (null != css[i] && ('*' != css[i] || '/' != css[i + 1])) ++i;\n    i += 2;\n\n    var str = css.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    css = css.slice(i);\n    column += 2;\n    return pos({\n      type: 'comment',\n      comment: str\n    });\n  }\n\n  /**\n   * Parse selector.\n   */\n\n  function selector() {\n    var m = match(/^([^{]+)/);\n    if (!m) return;\n    return m[0].trim().split(/\\s*,\\s*/);\n  }\n\n  /**\n   * Parse declaration.\n   */\n\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(/^(\\*?[-\\w]+)\\s*/);\n    if (!prop) return;\n    prop = prop[0];\n\n    // :\n    if (!match(/^:\\s*/)) return;\n\n    // val\n    var val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\n    if (!val) return;\n\n    var ret = pos({\n      type: 'declaration',\n      property: prop,\n      value: val[0].trim()\n    });\n\n    // ;\n    match(/^[;\\s]*/);\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   */\n\n  function declarations() {\n    var decls = [];\n\n    if (!open()) return;\n    comments(decls);\n\n    // declarations\n    var decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      comments(decls);\n    }\n\n    if (!close()) return;\n    return decls;\n  }\n\n  /**\n   * Parse keyframe.\n   */\n\n  function keyframe() {\n    var m;\n    var vals = [];\n    var pos = position();\n\n    while (m = match(/^(from|to|\\d+%|\\.\\d+%|\\d+\\.\\d+%)\\s*/)) {\n      vals.push(m[1]);\n      match(/^,\\s*/);\n    }\n\n    if (!vals.length) return;\n\n    return pos({\n      type: 'keyframe',\n      values: vals,\n      declarations: declarations()\n    });\n  }\n\n  /**\n   * Parse keyframes.\n   */\n\n  function atkeyframes() {\n    var pos = position();\n    var m = match(/^@([-\\w]+)?keyframes */);\n\n    if (!m) return;\n    var vendor = m[1];\n\n    // identifier\n    var m = match(/^([-\\w]+)\\s*/);\n    if (!m) return;\n    var name = m[1];\n\n    if (!open()) return;\n    comments();\n\n    var frame;\n    var frames = [];\n    while (frame = keyframe()) {\n      frames.push(frame);\n      comments();\n    }\n\n    if (!close()) return;\n\n    return pos({\n      type: 'keyframes',\n      name: name,\n      vendor: vendor,\n      keyframes: frames\n    });\n  }\n\n  /**\n   * Parse supports.\n   */\n\n  function atsupports() {\n    var pos = position();\n    var m = match(/^@supports *([^{]+)/);\n\n    if (!m) return;\n    var supports = m[1].trim();\n\n    if (!open()) return;\n    comments();\n\n    var style = rules();\n\n    if (!close()) return;\n\n    return pos({\n      type: 'supports',\n      supports: supports,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse media.\n   */\n\n  function atmedia() {\n    var pos = position();\n    var m = match(/^@media *([^{]+)/);\n\n    if (!m) return;\n    var media = m[1].trim();\n\n    if (!open()) return;\n    comments();\n\n    var style = rules();\n\n    if (!close()) return;\n\n    return pos({\n      type: 'media',\n      media: media,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse paged media.\n   */\n\n  function atpage() {\n    var pos = position();\n    var m = match(/^@page */);\n    if (!m) return;\n\n    var sel = selector() || [];\n    var decls = [];\n\n    if (!open()) return;\n    comments();\n\n    // declarations\n    var decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      comments();\n    }\n\n    if (!close()) return;\n\n    return pos({\n      type: 'page',\n      selectors: sel,\n      declarations: decls\n    });\n  }\n\n  /**\n   * Parse document.\n   */\n\n  function atdocument() {\n    var pos = position();\n    var m = match(/^@([-\\w]+)?document *([^{]+)/);\n    if (!m) return;\n\n    var vendor = m[1].trim();\n    var doc = m[2].trim();\n\n    if (!open()) return;\n    comments();\n\n    var style = rules();\n\n    if (!close()) return;\n\n    return pos({\n      type: 'document',\n      document: doc,\n      vendor: vendor,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse import\n   */\n\n  function atimport() {\n    return _atrule('import');\n  }\n\n  /**\n   * Parse charset\n   */\n\n  function atcharset() {\n    return _atrule('charset');\n  }\n\n  /**\n   * Parse namespace\n   */\n\n  function atnamespace() {\n    return _atrule('namespace')\n  }\n\n  /**\n   * Parse non-block at-rules\n   */\n\n  function _atrule(name) {\n    var pos = position();\n    var m = match(new RegExp('^@' + name + ' *([^;\\\\n]+);'));\n    if (!m) return;\n    var ret = { type: name };\n    ret[name] = m[1].trim();\n    return pos(ret);\n  }\n\n  /**\n   * Parse at rule.\n   */\n\n  function atrule() {\n    return atkeyframes()\n      || atmedia()\n      || atsupports()\n      || atimport()\n      || atcharset()\n      || atnamespace()\n      || atdocument()\n      || atpage();\n  }\n\n  /**\n   * Parse rule.\n   */\n\n  function rule() {\n    var pos = position();\n    var sel = selector();\n\n    if (!sel) return;\n    comments();\n\n    return pos({\n      type: 'rule',\n      selectors: sel,\n      declarations: declarations()\n    });\n  }\n\n  return stylesheet();\n};\n\n\n});\nrequire.register(\"visionmedia-css-stringify/index.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar Compressed = require('./lib/compress');\nvar Identity = require('./lib/identity');\n\n/**\n * Stringfy the given AST `node`.\n *\n * @param {Object} node\n * @param {Object} options\n * @return {String}\n * @api public\n */\n\nmodule.exports = function(node, options){\n  if (options.compress) {\n    return new Compressed(options).compile(node);\n  }\n\n  return new Identity(options).compile(node);\n};\n\n\n});\nrequire.register(\"visionmedia-css-stringify/lib/compress.js\", function(exports, require, module){\n\n/**\n * Expose compiler.\n */\n\nmodule.exports = Compiler;\n\n/**\n * Initialize a new `Compiler`.\n */\n\nfunction Compiler(options) {\n  options = options || {};\n}\n\n/**\n * Compile `node`.\n */\n\nCompiler.prototype.compile = function(node){\n  return node.stylesheet\n    .rules.map(this.visit, this)\n    .join('');\n};\n\n/**\n * Visit `node`.\n */\n\nCompiler.prototype.visit = function(node){\n  return this[node.type](node);\n};\n\n/**\n * Visit comment node.\n */\n\nCompiler.prototype.comment = function(node){\n  if (this.compress) return '';\n};\n\n/**\n * Visit import node.\n */\n\nCompiler.prototype.import = function(node){\n  return '@import ' + node.import + ';';\n};\n\n/**\n * Visit media node.\n */\n\nCompiler.prototype.media = function(node){\n  return '@media '\n    + node.media\n    + '{'\n    + node.rules.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit document node.\n */\n\nCompiler.prototype.document = function(node){\n  var doc = '@' + (node.vendor || '') + 'document ' + node.document;\n\n  return doc\n    + '{'\n    + node.rules.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit charset node.\n */\n\nCompiler.prototype.charset = function(node){\n  return '@charset ' + node.charset + ';';\n};\n\n/**\n * Visit supports node.\n */\n\nCompiler.prototype.supports = function(node){\n  return '@supports '\n    + node.supports\n    + ' {\\n'\n    + this.indent(1)\n    + node.rules.map(this.visit, this).join('\\n\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit keyframes node.\n */\n\nCompiler.prototype.keyframes = function(node){\n  return '@'\n    + (node.vendor || '')\n    + 'keyframes '\n    + node.name\n    + '{'\n    + node.keyframes.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit keyframe node.\n */\n\nCompiler.prototype.keyframe = function(node){\n  var decls = node.declarations;\n\n  return node.values.join(',')\n    + '{'\n    + decls.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit page node.\n */\n\nCompiler.prototype.page = function(node){\n  var sel = node.selectors.length\n    ? node.selectors.join(', ') + ' '\n    : '';\n\n  return '@page ' + sel\n    + '{\\n'\n    + this.indent(1)\n    + node.declarations.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit rule node.\n */\n\nCompiler.prototype.rule = function(node){\n  var decls = node.declarations;\n  if (!decls.length) return '';\n\n  return node.selectors.join(',')\n    + '{'\n    + decls.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit declaration node.\n */\n\nCompiler.prototype.declaration = function(node){\n  return node.property + ':' + node.value + ';';\n};\n\n\n});\nrequire.register(\"visionmedia-css-stringify/lib/identity.js\", function(exports, require, module){\n\n/**\n * Expose compiler.\n */\n\nmodule.exports = Compiler;\n\n/**\n * Initialize a new `Compiler`.\n */\n\nfunction Compiler(options) {\n  options = options || {};\n  this.indentation = options.indent;\n}\n\n/**\n * Compile `node`.\n */\n\nCompiler.prototype.compile = function(node){\n  return node.stylesheet\n    .rules.map(this.visit, this)\n    .join('\\n\\n');\n};\n\n/**\n * Visit `node`.\n */\n\nCompiler.prototype.visit = function(node){\n  return this[node.type](node);\n};\n\n/**\n * Visit comment node.\n */\n\nCompiler.prototype.comment = function(node){\n  return this.indent() + '/*' + node.comment + '*/';\n};\n\n/**\n * Visit import node.\n */\n\nCompiler.prototype.import = function(node){\n  return '@import ' + node.import + ';';\n};\n\n/**\n * Visit media node.\n */\n\nCompiler.prototype.media = function(node){\n  return '@media '\n    + node.media\n    + ' {\\n'\n    + this.indent(1)\n    + node.rules.map(this.visit, this).join('\\n\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit document node.\n */\n\nCompiler.prototype.document = function(node){\n  var doc = '@' + (node.vendor || '') + 'document ' + node.document;\n\n  return doc + ' '\n    + ' {\\n'\n    + this.indent(1)\n    + node.rules.map(this.visit, this).join('\\n\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit charset node.\n */\n\nCompiler.prototype.charset = function(node){\n  return '@charset ' + node.charset + ';\\n';\n};\n\n/**\n * Visit supports node.\n */\n\nCompiler.prototype.supports = function(node){\n  return '@supports '\n    + node.supports\n    + ' {\\n'\n    + this.indent(1)\n    + node.rules.map(this.visit, this).join('\\n\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit keyframes node.\n */\n\nCompiler.prototype.keyframes = function(node){\n  return '@'\n    + (node.vendor || '')\n    + 'keyframes '\n    + node.name\n    + ' {\\n'\n    + this.indent(1)\n    + node.keyframes.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '}';\n};\n\n/**\n * Visit keyframe node.\n */\n\nCompiler.prototype.keyframe = function(node){\n  var decls = node.declarations;\n\n  return this.indent()\n    + node.values.join(', ')\n    + ' {\\n'\n    + this.indent(1)\n    + decls.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '\\n' + this.indent() + '}\\n';\n};\n\n/**\n * Visit page node.\n */\n\nCompiler.prototype.page = function(node){\n  var sel = node.selectors.length\n    ? node.selectors.join(', ') + ' '\n    : '';\n\n  return '@page ' + sel\n    + '{\\n'\n    + this.indent(1)\n    + node.declarations.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit rule node.\n */\n\nCompiler.prototype.rule = function(node){\n  var indent = this.indent();\n  var decls = node.declarations;\n\n  return node.selectors.map(function(s){ return indent + s }).join(',\\n')\n    + ' {\\n'\n    + this.indent(1)\n    + decls.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '\\n' + this.indent() + '}';\n};\n\n/**\n * Visit declaration node.\n */\n\nCompiler.prototype.declaration = function(node){\n  return this.indent() + node.property + ': ' + node.value + ';';\n};\n\n/**\n * Increase, decrease or return current indentation.\n */\n\nCompiler.prototype.indent = function(level) {\n  this.level = this.level || 1;\n\n  if (null != level) {\n    this.level += level;\n    return '';\n  }\n\n  return Array(this.level).join(this.indentation || '  ');\n};\n\n});\nrequire.register(\"visionmedia-css/index.js\", function(exports, require, module){\n\nexports.parse = require('css-parse');\nexports.stringify = require('css-stringify');\n\n});\nrequire.register(\"component-color-parser/index.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar colors = require('./colors');\n\n/**\n * Expose `parse`.\n */\n\nmodule.exports = parse;\n\n/**\n * Parse `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api public\n */\n\nfunction parse(str) {\n  return named(str)\n    || hex3(str)\n    || hex6(str)\n    || rgb(str)\n    || rgba(str);\n}\n\n/**\n * Parse named css color `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction named(str) {\n  var c = colors[str.toLowerCase()];\n  if (!c) return;\n  return {\n    r: c[0],\n    g: c[1],\n    b: c[2]\n  }\n}\n\n/**\n * Parse rgb(n, n, n)\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction rgb(str) {\n  if (0 == str.indexOf('rgb(')) {\n    str = str.match(/rgb\\(([^)]+)\\)/)[1];\n    var parts = str.split(/ *, */).map(Number);\n    return {\n      r: parts[0],\n      g: parts[1],\n      b: parts[2],\n      a: 1\n    }\n  }\n}\n\n/**\n * Parse rgba(n, n, n, n)\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction rgba(str) {\n  if (0 == str.indexOf('rgba(')) {\n    str = str.match(/rgba\\(([^)]+)\\)/)[1];\n    var parts = str.split(/ *, */).map(Number);\n    return {\n      r: parts[0],\n      g: parts[1],\n      b: parts[2],\n      a: parts[3]\n    }\n  }\n}\n\n/**\n * Parse #nnnnnn\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction hex6(str) {\n  if ('#' == str[0] && 7 == str.length) {\n    return {\n      r: parseInt(str.slice(1, 3), 16),\n      g: parseInt(str.slice(3, 5), 16),\n      b: parseInt(str.slice(5, 7), 16),\n      a: 1\n    }\n  }\n}\n\n/**\n * Parse #nnn\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction hex3(str) {\n  if ('#' == str[0] && 4 == str.length) {\n    return {\n      r: parseInt(str[1] + str[1], 16),\n      g: parseInt(str[2] + str[2], 16),\n      b: parseInt(str[3] + str[3], 16),\n      a: 1\n    }\n  }\n}\n\n\n});\nrequire.register(\"component-color-parser/colors.js\", function(exports, require, module){\n\nmodule.exports = {\n    aliceblue: [240, 248, 255]\n  , antiquewhite: [250, 235, 215]\n  , aqua: [0, 255, 255]\n  , aquamarine: [127, 255, 212]\n  , azure: [240, 255, 255]\n  , beige: [245, 245, 220]\n  , bisque: [255, 228, 196]\n  , black: [0, 0, 0]\n  , blanchedalmond: [255, 235, 205]\n  , blue: [0, 0, 255]\n  , blueviolet: [138, 43, 226]\n  , brown: [165, 42, 42]\n  , burlywood: [222, 184, 135]\n  , cadetblue: [95, 158, 160]\n  , chartreuse: [127, 255, 0]\n  , chocolate: [210, 105, 30]\n  , coral: [255, 127, 80]\n  , cornflowerblue: [100, 149, 237]\n  , cornsilk: [255, 248, 220]\n  , crimson: [220, 20, 60]\n  , cyan: [0, 255, 255]\n  , darkblue: [0, 0, 139]\n  , darkcyan: [0, 139, 139]\n  , darkgoldenrod: [184, 132, 11]\n  , darkgray: [169, 169, 169]\n  , darkgreen: [0, 100, 0]\n  , darkgrey: [169, 169, 169]\n  , darkkhaki: [189, 183, 107]\n  , darkmagenta: [139, 0, 139]\n  , darkolivegreen: [85, 107, 47]\n  , darkorange: [255, 140, 0]\n  , darkorchid: [153, 50, 204]\n  , darkred: [139, 0, 0]\n  , darksalmon: [233, 150, 122]\n  , darkseagreen: [143, 188, 143]\n  , darkslateblue: [72, 61, 139]\n  , darkslategray: [47, 79, 79]\n  , darkslategrey: [47, 79, 79]\n  , darkturquoise: [0, 206, 209]\n  , darkviolet: [148, 0, 211]\n  , deeppink: [255, 20, 147]\n  , deepskyblue: [0, 191, 255]\n  , dimgray: [105, 105, 105]\n  , dimgrey: [105, 105, 105]\n  , dodgerblue: [30, 144, 255]\n  , firebrick: [178, 34, 34]\n  , floralwhite: [255, 255, 240]\n  , forestgreen: [34, 139, 34]\n  , fuchsia: [255, 0, 255]\n  , gainsboro: [220, 220, 220]\n  , ghostwhite: [248, 248, 255]\n  , gold: [255, 215, 0]\n  , goldenrod: [218, 165, 32]\n  , gray: [128, 128, 128]\n  , green: [0, 128, 0]\n  , greenyellow: [173, 255, 47]\n  , grey: [128, 128, 128]\n  , honeydew: [240, 255, 240]\n  , hotpink: [255, 105, 180]\n  , indianred: [205, 92, 92]\n  , indigo: [75, 0, 130]\n  , ivory: [255, 255, 240]\n  , khaki: [240, 230, 140]\n  , lavender: [230, 230, 250]\n  , lavenderblush: [255, 240, 245]\n  , lawngreen: [124, 252, 0]\n  , lemonchiffon: [255, 250, 205]\n  , lightblue: [173, 216, 230]\n  , lightcoral: [240, 128, 128]\n  , lightcyan: [224, 255, 255]\n  , lightgoldenrodyellow: [250, 250, 210]\n  , lightgray: [211, 211, 211]\n  , lightgreen: [144, 238, 144]\n  , lightgrey: [211, 211, 211]\n  , lightpink: [255, 182, 193]\n  , lightsalmon: [255, 160, 122]\n  , lightseagreen: [32, 178, 170]\n  , lightskyblue: [135, 206, 250]\n  , lightslategray: [119, 136, 153]\n  , lightslategrey: [119, 136, 153]\n  , lightsteelblue: [176, 196, 222]\n  , lightyellow: [255, 255, 224]\n  , lime: [0, 255, 0]\n  , limegreen: [50, 205, 50]\n  , linen: [250, 240, 230]\n  , magenta: [255, 0, 255]\n  , maroon: [128, 0, 0]\n  , mediumaquamarine: [102, 205, 170]\n  , mediumblue: [0, 0, 205]\n  , mediumorchid: [186, 85, 211]\n  , mediumpurple: [147, 112, 219]\n  , mediumseagreen: [60, 179, 113]\n  , mediumslateblue: [123, 104, 238]\n  , mediumspringgreen: [0, 250, 154]\n  , mediumturquoise: [72, 209, 204]\n  , mediumvioletred: [199, 21, 133]\n  , midnightblue: [25, 25, 112]\n  , mintcream: [245, 255, 250]\n  , mistyrose: [255, 228, 225]\n  , moccasin: [255, 228, 181]\n  , navajowhite: [255, 222, 173]\n  , navy: [0, 0, 128]\n  , oldlace: [253, 245, 230]\n  , olive: [128, 128, 0]\n  , olivedrab: [107, 142, 35]\n  , orange: [255, 165, 0]\n  , orangered: [255, 69, 0]\n  , orchid: [218, 112, 214]\n  , palegoldenrod: [238, 232, 170]\n  , palegreen: [152, 251, 152]\n  , paleturquoise: [175, 238, 238]\n  , palevioletred: [219, 112, 147]\n  , papayawhip: [255, 239, 213]\n  , peachpuff: [255, 218, 185]\n  , peru: [205, 133, 63]\n  , pink: [255, 192, 203]\n  , plum: [221, 160, 203]\n  , powderblue: [176, 224, 230]\n  , purple: [128, 0, 128]\n  , red: [255, 0, 0]\n  , rosybrown: [188, 143, 143]\n  , royalblue: [65, 105, 225]\n  , saddlebrown: [139, 69, 19]\n  , salmon: [250, 128, 114]\n  , sandybrown: [244, 164, 96]\n  , seagreen: [46, 139, 87]\n  , seashell: [255, 245, 238]\n  , sienna: [160, 82, 45]\n  , silver: [192, 192, 192]\n  , skyblue: [135, 206, 235]\n  , slateblue: [106, 90, 205]\n  , slategray: [119, 128, 144]\n  , slategrey: [119, 128, 144]\n  , snow: [255, 255, 250]\n  , springgreen: [0, 255, 127]\n  , steelblue: [70, 130, 180]\n  , tan: [210, 180, 140]\n  , teal: [0, 128, 128]\n  , thistle: [216, 191, 216]\n  , tomato: [255, 99, 71]\n  , turquoise: [64, 224, 208]\n  , violet: [238, 130, 238]\n  , wheat: [245, 222, 179]\n  , white: [255, 255, 255]\n  , whitesmoke: [245, 245, 245]\n  , yellow: [255, 255, 0]\n  , yellowgreen: [154, 205, 5]\n};\n});\nrequire.register(\"component-path/index.js\", function(exports, require, module){\n\nexports.basename = function(path){\n  return path.split('/').pop();\n};\n\nexports.dirname = function(path){\n  return path.split('/').slice(0, -1).join('/') || '.'; \n};\n\nexports.extname = function(path){\n  var base = exports.basename(path);\n  if (!~base.indexOf('.')) return '';\n  var ext = base.split('.').pop();\n  return '.' + ext;\n};\n});\nrequire.register(\"visionmedia-rework/index.js\", function(exports, require, module){\n\nmodule.exports = require('./lib/rework');\n});\nrequire.register(\"visionmedia-rework/lib/rework.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar css = require('css');\n\n/**\n * Expose `rework`.\n */\n\nexports = module.exports = rework;\n\n/**\n * Expose `visit` helpers.\n */\n\nexports.visit = require('./visit');\n\n/**\n * Expose prefix properties.\n */\n\nexports.properties = require('./properties');\n\n/**\n * Initialize a new stylesheet `Rework` with `str`.\n *\n * @param {String} str\n * @return {Rework}\n * @api public\n */\n\nfunction rework(str) {\n  return new Rework(css.parse(str));\n}\n\n/**\n * Initialize a new stylesheet `Rework` with `obj`.\n *\n * @param {Object} obj\n * @api private\n */\n\nfunction Rework(obj) {\n  this.obj = obj;\n}\n\n/**\n * Use the given plugin `fn(style, rework)`.\n *\n * @param {Function} fn\n * @return {Rework}\n * @api public\n */\n\nRework.prototype.use = function(fn){\n  fn(this.obj.stylesheet, this);\n  return this;\n};\n\n/**\n * Specify global vendor `prefixes`,\n * explicit ones may still be passed\n * to most plugins.\n *\n * @param {Array} prefixes\n * @return {Rework}\n * @api public\n */\n\nRework.prototype.vendors = function(prefixes){\n  this.prefixes = prefixes;\n  return this;\n};\n\n/**\n * Stringify the stylesheet.\n *\n * @param {Object} options\n * @return {String}\n * @api public\n */\n\nRework.prototype.toString = function(options){\n  return css.stringify(this.obj, options);\n};\n\n/**\n * Expose plugins.\n */\n\nexports.mixin = exports.mixins = require('./plugins/mixin');\nexports.function = exports.functions = require('./plugins/function');\nexports.prefix = require('./plugins/prefix');\nexports.colors = require('./plugins/colors');\nexports.extend = require('./plugins/extend');\nexports.references = require('./plugins/references');\nexports.prefixValue = require('./plugins/prefix-value');\nexports.prefixSelectors = require('./plugins/prefix-selectors');\nexports.keyframes = require('./plugins/keyframes');\nexports.at2x = require('./plugins/at2x');\nexports.url = require('./plugins/url');\nexports.ease = require('./plugins/ease');\nexports.vars = require('./plugins/vars');\n\n/**\n * Try/catch plugins unavailable in component.\n */\n\n try {\n  exports.inline = require('./plugins/inline');\n} catch (err) {};\n\n});\nrequire.register(\"visionmedia-rework/lib/utils.js\", function(exports, require, module){\n\n/**\n * Strip `str` quotes.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.stripQuotes = function(str) {\n  if ('\"' == str[0] || \"'\" == str[0]) return str.slice(1, -1);\n  return str;\n};\n});\nrequire.register(\"visionmedia-rework/lib/visit.js\", function(exports, require, module){\n\n/**\n * Visit `node`'s declarations recursively and\n * invoke `fn(declarations, node)`.\n *\n * @param {Object} node\n * @param {Function} fn\n * @api private\n */\n\nexports.declarations = function(node, fn){\n  node.rules.forEach(function(rule){\n    // @media etc\n    if (rule.rules) {\n      exports.declarations(rule, fn);\n      return;\n    }\n\n    // keyframes\n    if (rule.keyframes) {\n      rule.keyframes.forEach(function(keyframe){\n        fn(keyframe.declarations, rule);\n      });\n      return;\n    }\n\n    // @charset, @import etc\n    if (!rule.declarations) return;\n\n    fn(rule.declarations, node);\n  });\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/properties.js\", function(exports, require, module){\n\n/**\n * Prefixed properties.\n */\n\nmodule.exports = [\n  'animation',\n  'animation-delay',\n  'animation-direction',\n  'animation-duration',\n  'animation-fill-mode',\n  'animation-iteration-count',\n  'animation-name',\n  'animation-play-state',\n  'animation-timing-function',\n  'appearance',\n  'background-visibility',\n  'background-composite',\n  'blend-mode',\n  'border-bottom-left-radius',\n  'border-bottom-right-radius',\n  'border-fit',\n  'border-image',\n  'border-vertical-spacing',\n  'box-align',\n  'box-direction',\n  'box-flex',\n  'box-flex-group',\n  'box-lines',\n  'box-ordinal-group',\n  'box-orient',\n  'box-pack',\n  'box-reflect',\n  'box-sizing',\n  'clip-path',\n  'column-count',\n  'column-width',\n  'column-min-width',\n  'column-width-policy',\n  'column-gap',\n  'column-rule',\n  'column-rule-color',\n  'column-rule-style',\n  'column-rule-width',\n  'column-span',\n  'flex',\n  'flex-basis',\n  'flex-direction',\n  'flex-flow',\n  'flex-grow',\n  'flex-shrink',\n  'flex-wrap',\n  'flex-flow-from',\n  'flex-flow-into',\n  'font-smoothing',\n  'transform',\n  'transform-origin',\n  'transform-origin-x',\n  'transform-origin-y',\n  'transform-origin-z',\n  'transform-style',\n  'transition',\n  'transition-delay',\n  'transition-duration',\n  'transition-property',\n  'transition-timing-function',\n  'user-drag',\n  'user-modify',\n  'user-select',\n  'wrap',\n  'wrap-flow',\n  'wrap-margin',\n  'wrap-padding',\n  'wrap-through',\n  'overflow-scrolling'\n];\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/function.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit')\n  , utils = require('../utils')\n  , strip = utils.stripQuotes;\n\n/**\n * Define custom function.\n */\n\nmodule.exports = function(functions, args) {\n  if (!functions) throw new Error('functions object required');\n  return function(style, rework){\n    visit.declarations(style, function(declarations){\n      for (var name in functions) {\n        func(declarations, name, functions[name], args);\n      }\n    });\n  }\n};\n\n/**\n * Escape regexp codes in string.\n *\n * @param {String} s\n * @api private\n */\n\nfunction escape(s) {\n  return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\n/**\n * Visit declarations and apply functions.\n *\n * @param {Array} declarations\n * @param {Object} functions\n * @param {Boolean} [parseArgs]\n * @api private\n */\n\nfunction func(declarations, name, func, parseArgs) {\n  if (false !== parseArgs) parseArgs = true;\n  var regexp = new RegExp(escape(name) + '\\\\(([^\\)]+)\\\\)', 'g');\n  declarations.forEach(function(decl){\n    if (!~decl.value.indexOf(name + '(')) return;\n    decl.value = decl.value.replace(regexp, function(_, args){\n      if (!parseArgs) return func.call(decl, strip(args));\n      args = args.split(/,\\s*/).map(strip);\n      return func.apply(decl, args);\n    });\n  });\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/url.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('../utils')\n  , func = require('./function');\n\n/**\n * Map `url()` calls.\n *\n *   body {\n *     background: url(/images/bg.png);\n *   }\n *\n * yields:\n *\n *   body {\n *     background: url(http://example.com/images/bg.png);\n *   }\n *\n */\n\nmodule.exports = function(fn) {\n  return func({\n    url: function(path){\n      return 'url(\"' + fn(path) + '\")';\n    }\n  }, false);\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/vars.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Add variable support.\n *\n *   :root {\n *     var-header-color: #06c;\n *   }\n *\n *   h1 {\n *     background-color: var(header-color);\n *   }\n *\n * yields:\n *\n *   h1 {\n *     background-color: #06c;\n *   }\n *\n */\n\nmodule.exports = function(map) {\n  map = map || {};\n\n  function replace(str) {\n    return str.replace(/\\bvar\\((.*?)\\)/g, function(_, name){\n      var val = map[name];\n      if (!val) throw new Error('variable \"' + name + '\" is undefined');\n      if (val.match(/\\bvar\\(/)) val = replace(val);\n      return val;\n    });\n  }\n\n  return function vars(style){\n    visit.declarations(style, function(declarations, node){\n      // map vars\n      declarations.forEach(function(decl){\n        if (0 != decl.property.indexOf('var-')) return;\n        var name = decl.property.replace('var-', '');\n        map[name] = decl.value;\n      });\n\n      // substitute values\n      declarations.forEach(function(decl){\n        if (!decl.value.match(/\\bvar\\(/)) return;\n        decl.value = replace(decl.value);\n      });\n    });\n  }\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/ease.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Easing functions.\n */\n\nvar ease = {\n  'ease-in-out-back': 'cubic-bezier(0.680, -0.550, 0.265, 1.550)',\n  'ease-in-out-circ': 'cubic-bezier(0.785, 0.135, 0.150, 0.860)',\n  'ease-in-out-expo': 'cubic-bezier(1.000, 0.000, 0.000, 1.000)',\n  'ease-in-out-sine': 'cubic-bezier(0.445, 0.050, 0.550, 0.950)',\n  'ease-in-out-quint': 'cubic-bezier(0.860, 0.000, 0.070, 1.000)',\n  'ease-in-out-quart': 'cubic-bezier(0.770, 0.000, 0.175, 1.000)',\n  'ease-in-out-cubic': 'cubic-bezier(0.645, 0.045, 0.355, 1.000)',\n  'ease-in-out-quad': 'cubic-bezier(0.455, 0.030, 0.515, 0.955)',\n  'ease-out-back': 'cubic-bezier(0.175, 0.885, 0.320, 1.275)',\n  'ease-out-circ': 'cubic-bezier(0.075, 0.820, 0.165, 1.000)',\n  'ease-out-expo': 'cubic-bezier(0.190, 1.000, 0.220, 1.000)',\n  'ease-out-sine': 'cubic-bezier(0.390, 0.575, 0.565, 1.000)',\n  'ease-out-quint': 'cubic-bezier(0.230, 1.000, 0.320, 1.000)',\n  'ease-out-quart': 'cubic-bezier(0.165, 0.840, 0.440, 1.000)',\n  'ease-out-cubic': 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n  'ease-out-quad': 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n  'ease-in-back': 'cubic-bezier(0.600, -0.280, 0.735, 0.045)',\n  'ease-in-circ': 'cubic-bezier(0.600, 0.040, 0.980, 0.335)',\n  'ease-in-expo': 'cubic-bezier(0.950, 0.050, 0.795, 0.035)',\n  'ease-in-sine': 'cubic-bezier(0.470, 0.000, 0.745, 0.715)',\n  'ease-in-quint': 'cubic-bezier(0.755, 0.050, 0.855, 0.060)',\n  'ease-in-quart': 'cubic-bezier(0.895, 0.030, 0.685, 0.220)',\n  'ease-in-cubic': 'cubic-bezier(0.550, 0.055, 0.675, 0.190)',\n  'ease-in-quad': 'cubic-bezier(0.550, 0.085, 0.680, 0.530)'\n};\n\n/**\n * Keys.\n */\n\nvar keys = Object.keys(ease);\n\n/**\n * Provide additional easing functions:\n *\n *    #logo {\n *      transition: all 500ms ease-out-back;\n *    }\n *\n * yields:\n *\n *    #logo {\n *      transition: all 500ms cubic-bezier(0.175, 0.885, 0.320, 1.275)\n *    }\n *\n */\n\nmodule.exports = function() {\n  return function(style, rework){\n    visit.declarations(style, substitute);\n  }\n};\n\n/**\n * Substitute easing functions.\n *\n * @api private\n */\n\nfunction substitute(declarations) {\n  for (var i = 0, len = declarations.length; i < len; ++i) {\n    var decl = declarations[i];\n    if (!decl.property.match(/transition|animation|timing/)) continue;\n    for (var k = 0; k < keys.length; ++k) {\n      var key = keys[k];\n      if (~decl.value.indexOf(key)) {\n        decl.value = decl.value.replace(key, ease[key]);\n        break;\n      }\n    }\n  }\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/at2x.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('../utils')\n  , path = require('path')\n  , stripQuotes = utils.stripQuotes;\n\n/**\n * Translate\n *\n *   .logo {\n *     background-image: url('/public/images/logo.png')\n *   }\n *\n * yields:\n *\n *   .logo {\n *     background-image: url('/public/images/logo.png')\n *   }\n *\n *   @media all and (-webkit-min-device-pixel-ratio : 1.5) {\n *     .logo {\n *       background-image: url(\"/public/images/logo@2x.png\");\n *       background-size: contain\n *     }\n *   }\n *\n */\n\nmodule.exports = function(vendors) {\n  return function(style, rework){\n    vendors = vendors || rework.prefixes;\n\n    style.rules.forEach(function(rule){\n      if (!rule.declarations) return;\n\n      var backgroundSize = rule.declarations.filter(backgroundWithSize).map(value)[0] || 'contain';\n\n      rule.declarations.filter(backgroundWithURL).forEach(function(decl){\n        // parse url\n        var i = decl.value.indexOf('url(');\n        var url = stripQuotes(decl.value.slice(i + 4, decl.value.indexOf(')', i)));\n        var ext = path.extname(url);\n\n        // ignore .svg\n        if ('.svg' == ext) return;\n\n        // @2x value\n        url = path.join(path.dirname(url), path.basename(url, ext) + '@2x' + ext);\n\n        // wrap in @media\n        style.rules.push({\n          type: 'media',\n          media: 'all and (-webkit-min-device-pixel-ratio: 1.5)',\n          rules: [\n            {\n              type: 'rule',\n              selectors: rule.selectors,\n              declarations: [\n                {\n                  type: 'declaration',\n                  property: 'background-image',\n                  value: 'url(\"' + url + '\")'\n                },\n                {\n                  type: 'declaration',\n                  property: 'background-size',\n                  value: backgroundSize\n                }\n              ]\n            }\n          ]\n        });\n      });\n    });\n  };\n\n  return function(style, rework) {\n    vendors = vendors || rework.prefixes;\n    visit(style.rules, style);\n  };\n};\n\n/**\n * Filter background[-image] with url().\n */\n\nfunction backgroundWithURL(decl) {\n  return ('background' == decl.property\n    || 'background-image' == decl.property)\n    && ~decl.value.indexOf('url(');\n}\n\n/**\n * Predicate on background-size property.\n */\n\nfunction backgroundWithSize(decl) {\n  return 'background-size' == decl.property;\n}\n\n/**\n * Return value atribute of a declaration.\n */\n\nfunction value(decl) {\n  return decl.value;\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/colors.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar parse = require('color-parser')\n  , functions = require('./function');\n\n/**\n * Provide color manipulation helpers:\n *\n *    button {\n *      background: rgba(#eee, .5)\n *    }\n *\n * yields:\n *\n *    button {\n *      background: rgba(238, 238, 238, .5)\n *    }\n *\n */\n\nmodule.exports = function() {\n  return functions({\n    rgba: function(color, alpha){\n      if (2 == arguments.length) {\n        var c = parse(color.trim());\n        var args = [c.r, c.g, c.b, alpha];\n      } else {\n        var args = [].slice.call(arguments);\n      }\n      \n      return 'rgba(' + args.join(', ') + ')';\n    }\n  });\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/extend.js\", function(exports, require, module){\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('rework:extend');\n\n/**\n * Add extension support.\n */\n\nmodule.exports = function() {\n  debug('use extend');\n  return function(style, rework) {\n    var map = {};\n    var rules = style.rules.length;\n\n    for (var j = 0; j < rules; j++) {\n      var rule = style.rules[j];\n      if (!rule || !rule.selectors) return;\n\n      // map selectors\n      rule.selectors.forEach(function(sel, i) {\n        map[sel] = rule;\n        if ('%' == sel[0]) rule.selectors.splice(i, 1);\n      });\n\n      // visit extend: properties\n      visit(rule, map);\n\n      // clean up empty rules\n      if (!rule.declarations.length) {\n        style.rules.splice(j--, 1);\n      }\n    };\n  }\n};\n\n/**\n * Visit declarations and extensions.\n *\n * @param {Object} rule\n * @param {Object} map\n * @api private\n */\n\nfunction visit(rule, map) {\n  for (var i = 0; i < rule.declarations.length; ++i) {\n    var decl = rule.declarations[i];\n    var key = decl.property;\n    var val = decl.value;\n    if (!/^extends?$/.test(key)) continue;\n\n    var extend = map[val];\n    if (!extend) throw new Error('failed to extend \"' + val + '\"');\n\n    var keys = Object.keys(map);\n    keys.forEach(function(key) {\n      if (0 != key.indexOf(val)) return;\n      var extend = map[key];\n      var suffix = key.replace(val, '');\n      debug('extend %j with %j', rule.selectors, extend.selectors);\n      extend.selectors = extend.selectors.concat(rule.selectors.map(function(sel) {\n        return sel + suffix;\n      }));\n    });\n\n    rule.declarations.splice(i--, 1);\n  }\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/mixin.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('../utils')\n  , visit = require('../visit');\n\n/**\n * Define custom mixins.\n */\n\nmodule.exports = function(mixins) {\n  if (!mixins) throw new Error('mixins object required');\n  return function(style, rework){\n    visit.declarations(style, function(declarations){\n      mixin(declarations, mixins);\n    });\n  }\n};\n\n/**\n * Visit declarations and apply mixins.\n *\n * @param {Array} declarations\n * @param {Object} mixins\n * @api private\n */\n\nfunction mixin(declarations, mixins) {\n  for (var i = 0; i < declarations.length; ++i) {\n    var decl = declarations[i];\n    var key = decl.property;\n    var val = decl.value;\n    var fn = mixins[key];\n    if (!fn) continue;\n\n    // invoke mixin\n    var ret = fn(val);\n\n    // apply properties\n    for (var key in ret) {\n      declarations.splice(i++, 0, {\n        type: 'declaration',\n        property: key,\n        value: ret[key]\n      });\n    }\n\n    // remove original\n    declarations.splice(i, 1);\n  }\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/keyframes.js\", function(exports, require, module){\n\n/**\n * Prefix keyframes.\n *\n *   @keyframes animation {\n *     from {\n *       opacity: 0;\n *     }\n *\n *     to {\n *       opacity: 1;\n *     }\n *   }\n *\n * yields:\n *\n *   @keyframes animation {\n *     from {\n *       opacity: 0;\n *     }\n *\n *     to {\n *       opacity: 1;\n *     }\n *   }\n *\n *   @-webkit-keyframes animation {\n *     from {\n *       opacity: 0;\n *     }\n *\n *     to {\n *       opacity: 1;\n *     }\n *   }\n *\n */\n\nmodule.exports = function(vendors) {\n  return function(style, rework){\n    vendors = vendors || rework.prefixes;\n\n    style.rules.forEach(function(rule){\n      if (!rule.keyframes) return;\n\n      vendors.forEach(function(vendor){\n        if (vendor == rule.vendor) return;\n        var clone = cloneKeyframes(rule);\n        clone.vendor = vendor;\n        style.rules.push(clone);\n      });\n    });\n  }\n};\n\n/**\n * Clone keyframes.\n *\n * @param {Object} rule\n * @api private\n */\n\nfunction cloneKeyframes(rule) {\n  var clone = { name: rule.name };\n  clone.type = 'keyframes';\n  clone.vendor = rule.vendor;\n  clone.keyframes = [];\n  rule.keyframes.forEach(function(keyframe){\n    clone.keyframes.push(cloneKeyframe(keyframe));\n  });\n  return clone;\n}\n\n/**\n * Clone `keyframe`.\n *\n * @param {Object} keyframe\n * @api private\n */\n\nfunction cloneKeyframe(keyframe) {\n  var clone = {};\n  clone.type = 'keyframe';\n  clone.values = keyframe.values.slice();\n  clone.declarations = keyframe.declarations.map(function(decl){\n    return {\n      type: 'declaration',\n      property: decl.property,\n      value: decl.value\n    }\n  });\n  return clone;\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/references.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Provide property reference support.\n *\n *    button {\n *      width: 50px;\n *      height: @width;\n *      line-height: @height;\n *    }\n *\n * yields:\n *\n *    button {\n *      width: 50px;\n*      height: 50px;\n*      line-height: 50px;\n *    }\n *\n */\n\nmodule.exports = function() {\n  return function(style, rework){\n    visit.declarations(style, substitute);\n  }\n};\n\n/**\n * Substitute easing functions.\n *\n * @api private\n */\n\nfunction substitute(declarations) {\n  var map = {};\n\n  for (var i = 0, len = declarations.length; i < len; ++i) {\n    var decl = declarations[i];\n    var key = decl.property;\n    var val = decl.value;\n\n    decl.value = val.replace(/@([-\\w]+)/g, function(_, name){\n      if (null == map[name]) throw new Error('@' + name + ' is not defined in this scope');\n      return map[name];\n    });\n\n    map[key] = decl.value;\n  }\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/prefix-selectors.js\", function(exports, require, module){\n\n/**\n * Prefix selectors with `str`.\n *\n *    button {\n *      color: red;\n *    }\n *\n * yields:\n *\n *    #dialog button {\n *      color: red;\n *    }\n *\n */\n\nmodule.exports = function(str) {\n  return function(style){\n    style.rules = style.rules.map(function(rule){\n      if (!rule.selectors) return rule;\n      rule.selectors = rule.selectors.map(function(selector){\n        return str + ' ' + selector;\n      });\n      return rule;\n    });\n  }\n};\n});\nrequire.register(\"visionmedia-rework/lib/plugins/prefix-value.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Prefix `value`.\n *\n *    button {\n *      transition: height, transform 2s, width 0.3s linear;\n *    }\n *\n * yields:\n *\n *    button {\n *      -webkit-transition: height, -webkit-transform 2s, width 0.3s linear;\n *      -moz-transition: height, -moz-transform 2s, width 0.3s linear;\n *      transition: height, transform 2s, width 0.3s linear\n *    }\n *\n */\n\nmodule.exports = function(value, vendors) {\n  return function(style, rework){\n    vendors = vendors || rework.prefixes;\n\n    visit.declarations(style, function(declarations){\n      for (var i = 0; i < declarations.length; ++i) {\n        var decl = declarations[i];\n        if (!~decl.value.indexOf(value)) continue;\n\n        // ignore vendor-prefixed properties\n        if ('-' == decl.property[0]) continue;\n\n        // ignore vendor-prefixed values\n        if (~decl.value.indexOf('-' + value)) continue;\n\n        // vendor prefixed props\n        vendors.forEach(function(vendor){\n          var prop = 'transition' == decl.property\n            ? vendor + decl.property\n            : decl.property;\n\n          declarations.splice(i++, 0, {\n            type: 'declaration',\n            property: prop,\n            value: decl.value.replace(value, vendor + value)\n          });\n        });\n      }\n    });\n  }\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/prefix.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Prefix `prop`.\n *\n *   .button {\n *     border-radius: 5px;\n *   }\n *\n * yields:\n *\n *   .button {\n *     -webkit-border-radius: 5px;\n *     -moz-border-radius: 5px;\n *     border-radius: 5px;\n *   }\n *\n */\n\nmodule.exports = function(prop, vendors) {\n  var props = Array.isArray(prop)\n    ? prop\n    : [prop];\n\n  return function(style, rework){\n    vendors = vendors || rework.prefixes;\n    visit.declarations(style, function(declarations, node){\n      var only = node.vendor;\n      var isKeyframes = !! node.keyframes;\n\n      for (var i = 0; i < props.length; ++i) {\n        var prop = props[i];\n\n        for (var j = 0, len = declarations.length; j < len; ++j) {\n          var decl = declarations[j];\n          if (prop != decl.property) continue;\n\n          // vendor prefixed props\n          for (var k = 0; k < vendors.length; ++k) {\n            if (!only && isKeyframes) continue;\n            if (only && only != vendors[k]) continue;\n            declarations.push({\n              type: 'declaration',\n              property: vendors[k] + decl.property,\n              value: decl.value\n            });\n          }\n\n          // original prop\n          declarations.push(decl);\n          declarations.splice(j, 1);\n        }\n      }\n    });\n  }\n};\n\n});\nrequire.register(\"visionmedia-rework-mixins/index.js\", function(exports, require, module){\n\nexports['border-radius'] = require('./lib/border-radius');\nexports['overflow'] = require('./lib/ellipsis');\nexports['absolute'] = require('./lib/absolute');\nexports['relative'] = require('./lib/relative');\nexports['fixed'] = require('./lib/fixed');\nexports['opacity'] = require('./lib/opacity');\nexports['size'] = require('./lib/size');\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/absolute.js\", function(exports, require, module){\n\n/**\n * absolute: top left\n * absolute: top 5px left 5px\n */\n\nmodule.exports = require('./position')('absolute');\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/border-radius.js\", function(exports, require, module){\n\n/**\n * Positions.\n */\n\nvar position = {\n  top: true,\n  left: true,\n  right: true,\n  bottom: true\n};\n\n/**\n * border-radius: 5px\n * border-radius: 5px 10px\n * border-radius: top 5px\n * border-radius: top 5px left 10px\n */\n\nmodule.exports = function(str){\n  var vals = str.split(/\\s+/);\n  var pos;\n  var ret;\n\n  for (var i = 0; i < vals.length; ++i) {\n    var val = vals[i];\n    if (!position[val]) continue;\n    ret = ret || {};\n    pos = val;\n    val = vals[++i];\n    switch (pos) {\n      case 'top':\n      case 'bottom':\n        ret['border-' + pos + '-left-radius'] = val;\n        ret['border-' + pos + '-right-radius'] = val;\n        break;\n      case 'left':\n      case 'right':\n        ret['border-top-' + pos + '-radius'] = val;\n        ret['border-bottom-' + pos + '-radius'] = val;\n        break;\n    }\n  }\n\n  if (!ret) {\n    return {\n      'border-radius': str\n    }\n  }\n\n  return ret;\n};\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/ellipsis.js\", function(exports, require, module){\n\n/**\n * overflow: ellipsis\n */\n\nmodule.exports = function(type) {\n  if ('ellipsis' == type) {\n    return {\n      'white-space': 'nowrap',\n      'overflow': 'hidden',\n      'text-overflow': 'ellipsis'\n    }\n  }\n\n  return {\n    'overflow': type\n  };\n};\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/fixed.js\", function(exports, require, module){\n\n/**\n * fixed: top left\n * fixed: top 5px left 5px\n */\n\nmodule.exports = require('./position')('fixed');\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/opacity.js\", function(exports, require, module){\n\n/**\n * opacity: 1\n */\n\nmodule.exports = function(str){\n  var vals = str.split(/\\s+/);\n  var a = parseFloat(vals.shift());\n  var n = a * 100 | 0;\n  var tail = vals.length ? ' ' + vals.join(' '): '';\n  return {\n    'opacity': a + tail,\n    '-ms-filter': 'progid:DXImageTransform.Microsoft.Alpha(Opacity=' + n + ')' + tail,\n    'filter': 'alpha(opacity=' + n + ')' + tail\n  }\n};\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/position.js\", function(exports, require, module){\n\n/**\n * Positions.\n */\n\nvar positions = {\n  top: true,\n  left: true,\n  right: true,\n  bottom: true\n};\n\n/**\n * Return a mixin for the given position `type`.\n *\n * @param {String} type\n * @return {Function}\n * @api private\n */\n\nmodule.exports = function(type){\n  return function(str){\n    var val;\n    var pos;\n    var ret = {};\n    var vals = str.split(/\\s+/);\n\n    ret.position = type;\n\n    for (var i = 0; i < vals.length; ++i) {\n      val = vals[i];\n      if (positions[val]) {\n        pos = val;\n        ret[pos] = '0';\n      } else {\n        ret[pos] = val;\n      }\n    }\n\n    return ret;\n  };\n}\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/relative.js\", function(exports, require, module){\n\n/**\n * relative: top left\n * relative: top 5px left 5px\n */\n\nmodule.exports = require('./position')('relative');\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/size.js\", function(exports, require, module){\n/**\n * size: 100px 50px\n */\n\nmodule.exports = function(sizes) {\n  sizes = sizes.split(/\\s+/);\n  if ( sizes.length == 1 ) sizes[1] = sizes[0];\n\n  return {\n    width:  sizes[0],\n    height: sizes[1]\n  };\n};\n\n});\nrequire.register(\"styl/index.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar whitespace = require('css-whitespace');\nvar mixins = require('rework-mixins');\nvar rework = require('rework');\nvar props = rework.properties;\n\n/**\n * Expose `Style`.\n */\n\nmodule.exports = Style;\n\n/**\n * Initialize a new Style with the given css `str`.\n *\n * Options:\n *\n *  - `whitespace` utilize css whitespace transformations\n *  - `compress` enable output compression\n *\n * @param {String} str\n * @param {Object} options\n * @api public\n */\n\nfunction Style(str, options) {\n  if (!(this instanceof Style)) return new Style(str, options);\n  options = options || {};\n  if (options.whitespace) str = whitespace(str);\n  this.str = str;\n  this.compress = options.compress;\n  this.rework = rework(str);\n  this.delegate(['vendors', 'use']);\n  this.vendors(['-ms-', '-moz-', '-webkit-']);\n}\n\n/**\n * Delegate `methods` to rework.\n *\n * @param {Array} methods\n * @api private\n */\n\nStyle.prototype.delegate = function(methods){\n  var self = this;\n  methods.forEach(function(method){\n    self[method] = self.rework[method].bind(self.rework);\n  });\n};\n\n/**\n * Return the compiled CSS.\n *\n * @return {String}\n * @api public\n */\n\nStyle.prototype.toString = function(){\n  this.use(rework.mixin(mixins));\n  this.use(rework.keyframes());\n  this.use(rework.ease());\n  this.use(rework.prefixValue('linear-gradient'));\n  this.use(rework.prefixValue('radial-gradient'));\n  this.use(rework.prefixValue('transform'));\n  this.use(rework.prefix(props));\n  this.use(rework.colors());\n  this.use(rework.references());\n  this.use(rework.at2x());\n  this.use(rework.extend());\n  return this.rework.toString({ compress: this.compress });\n};\n\n});\n\n\n\n\n\n\n\nrequire.alias(\"visionmedia-debug/index.js\", \"styl/deps/debug/index.js\");\nrequire.alias(\"visionmedia-debug/debug.js\", \"styl/deps/debug/debug.js\");\nrequire.alias(\"visionmedia-debug/index.js\", \"debug/index.js\");\n\nrequire.alias(\"visionmedia-css-whitespace/index.js\", \"styl/deps/css-whitespace/index.js\");\nrequire.alias(\"visionmedia-css-whitespace/lib/compiler.js\", \"styl/deps/css-whitespace/lib/compiler.js\");\nrequire.alias(\"visionmedia-css-whitespace/lib/lexer.js\", \"styl/deps/css-whitespace/lib/lexer.js\");\nrequire.alias(\"visionmedia-css-whitespace/lib/parser.js\", \"styl/deps/css-whitespace/lib/parser.js\");\nrequire.alias(\"visionmedia-css-whitespace/index.js\", \"styl/deps/css-whitespace/index.js\");\nrequire.alias(\"visionmedia-css-whitespace/index.js\", \"css-whitespace/index.js\");\nrequire.alias(\"visionmedia-debug/index.js\", \"visionmedia-css-whitespace/deps/debug/index.js\");\nrequire.alias(\"visionmedia-debug/debug.js\", \"visionmedia-css-whitespace/deps/debug/debug.js\");\n\nrequire.alias(\"visionmedia-css-whitespace/index.js\", \"visionmedia-css-whitespace/index.js\");\nrequire.alias(\"visionmedia-rework/index.js\", \"styl/deps/rework/index.js\");\nrequire.alias(\"visionmedia-rework/lib/rework.js\", \"styl/deps/rework/lib/rework.js\");\nrequire.alias(\"visionmedia-rework/lib/utils.js\", \"styl/deps/rework/lib/utils.js\");\nrequire.alias(\"visionmedia-rework/lib/visit.js\", \"styl/deps/rework/lib/visit.js\");\nrequire.alias(\"visionmedia-rework/lib/properties.js\", \"styl/deps/rework/lib/properties.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/function.js\", \"styl/deps/rework/lib/plugins/function.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/url.js\", \"styl/deps/rework/lib/plugins/url.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/vars.js\", \"styl/deps/rework/lib/plugins/vars.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/ease.js\", \"styl/deps/rework/lib/plugins/ease.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/at2x.js\", \"styl/deps/rework/lib/plugins/at2x.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/colors.js\", \"styl/deps/rework/lib/plugins/colors.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/extend.js\", \"styl/deps/rework/lib/plugins/extend.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/mixin.js\", \"styl/deps/rework/lib/plugins/mixin.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/keyframes.js\", \"styl/deps/rework/lib/plugins/keyframes.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/references.js\", \"styl/deps/rework/lib/plugins/references.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/prefix-selectors.js\", \"styl/deps/rework/lib/plugins/prefix-selectors.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/prefix-value.js\", \"styl/deps/rework/lib/plugins/prefix-value.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/prefix.js\", \"styl/deps/rework/lib/plugins/prefix.js\");\nrequire.alias(\"visionmedia-rework/index.js\", \"rework/index.js\");\nrequire.alias(\"visionmedia-css/index.js\", \"visionmedia-rework/deps/css/index.js\");\nrequire.alias(\"visionmedia-css-parse/index.js\", \"visionmedia-css/deps/css-parse/index.js\");\n\nrequire.alias(\"visionmedia-css-stringify/index.js\", \"visionmedia-css/deps/css-stringify/index.js\");\nrequire.alias(\"visionmedia-css-stringify/lib/compress.js\", \"visionmedia-css/deps/css-stringify/lib/compress.js\");\nrequire.alias(\"visionmedia-css-stringify/lib/identity.js\", \"visionmedia-css/deps/css-stringify/lib/identity.js\");\n\nrequire.alias(\"visionmedia-debug/index.js\", \"visionmedia-rework/deps/debug/index.js\");\nrequire.alias(\"visionmedia-debug/debug.js\", \"visionmedia-rework/deps/debug/debug.js\");\n\nrequire.alias(\"component-color-parser/index.js\", \"visionmedia-rework/deps/color-parser/index.js\");\nrequire.alias(\"component-color-parser/colors.js\", \"visionmedia-rework/deps/color-parser/colors.js\");\n\nrequire.alias(\"component-path/index.js\", \"visionmedia-rework/deps/path/index.js\");\n\nrequire.alias(\"visionmedia-rework-mixins/index.js\", \"styl/deps/rework-mixins/index.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/absolute.js\", \"styl/deps/rework-mixins/lib/absolute.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/border-radius.js\", \"styl/deps/rework-mixins/lib/border-radius.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/ellipsis.js\", \"styl/deps/rework-mixins/lib/ellipsis.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/fixed.js\", \"styl/deps/rework-mixins/lib/fixed.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/opacity.js\", \"styl/deps/rework-mixins/lib/opacity.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/position.js\", \"styl/deps/rework-mixins/lib/position.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/relative.js\", \"styl/deps/rework-mixins/lib/relative.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/size.js\", \"styl/deps/rework-mixins/lib/size.js\");\nrequire.alias(\"visionmedia-rework-mixins/index.js\", \"styl/deps/rework-mixins/index.js\");\nrequire.alias(\"visionmedia-rework-mixins/index.js\", \"rework-mixins/index.js\");\nrequire.alias(\"visionmedia-rework-mixins/index.js\", \"visionmedia-rework-mixins/index.js\");\nrequire.alias(\"styl/index.js\", \"styl/index.js\");\n\nmodule.exports = require(\"styl/index.js\");\n",
          "mode": "100644"
        },
        "pixie.cson": {
          "path": "pixie.cson",
          "content": "entryPoint: \"lib/styl\"\nversion: \"0.2.8.1\"\n",
          "mode": "100644"
        },
        "test/test.coffee": {
          "path": "test/test.coffee",
          "content": "styl = require \"../lib/styl\"\n\ndescribe \"styl\", ->\n  it \"should compile a little\", ->\n    console.log styl\n\n    source = \"\"\"\n      body\n        background-color: red\n    \"\"\"\n\n    output = \"\"\"\n      body {\n        background-color: red;\n      }\n    \"\"\"\n\n    assert.equal styl(source, whitespace: true).toString(), output\n",
          "mode": "100644"
        }
      },
      "distribution": {
        "lib/styl": {
          "path": "lib/styl",
          "content": "\n/**\n * Require the given path.\n *\n * @param {String} path\n * @return {Object} exports\n * @api public\n */\n\nfunction require(path, parent, orig) {\n  var resolved = require.resolve(path);\n\n  // lookup failed\n  if (null == resolved) {\n    orig = orig || path;\n    parent = parent || 'root';\n    var err = new Error('Failed to require \"' + orig + '\" from \"' + parent + '\"');\n    err.path = orig;\n    err.parent = parent;\n    err.require = true;\n    throw err;\n  }\n\n  var module = require.modules[resolved];\n\n  // perform real require()\n  // by invoking the module's\n  // registered function\n  if (!module.exports) {\n    module.exports = {};\n    module.client = module.component = true;\n    module.call(this, module.exports, require.relative(resolved), module);\n  }\n\n  return module.exports;\n}\n\n/**\n * Registered modules.\n */\n\nrequire.modules = {};\n\n/**\n * Registered aliases.\n */\n\nrequire.aliases = {};\n\n/**\n * Resolve `path`.\n *\n * Lookup:\n *\n *   - PATH/index.js\n *   - PATH.js\n *   - PATH\n *\n * @param {String} path\n * @return {String} path or null\n * @api private\n */\n\nrequire.resolve = function(path) {\n  if (path.charAt(0) === '/') path = path.slice(1);\n\n  var paths = [\n    path,\n    path + '.js',\n    path + '.json',\n    path + '/index.js',\n    path + '/index.json'\n  ];\n\n  for (var i = 0; i < paths.length; i++) {\n    var path = paths[i];\n    if (require.modules.hasOwnProperty(path)) return path;\n    if (require.aliases.hasOwnProperty(path)) return require.aliases[path];\n  }\n};\n\n/**\n * Normalize `path` relative to the current path.\n *\n * @param {String} curr\n * @param {String} path\n * @return {String}\n * @api private\n */\n\nrequire.normalize = function(curr, path) {\n  var segs = [];\n\n  if ('.' != path.charAt(0)) return path;\n\n  curr = curr.split('/');\n  path = path.split('/');\n\n  for (var i = 0; i < path.length; ++i) {\n    if ('..' == path[i]) {\n      curr.pop();\n    } else if ('.' != path[i] && '' != path[i]) {\n      segs.push(path[i]);\n    }\n  }\n\n  return curr.concat(segs).join('/');\n};\n\n/**\n * Register module at `path` with callback `definition`.\n *\n * @param {String} path\n * @param {Function} definition\n * @api private\n */\n\nrequire.register = function(path, definition) {\n  require.modules[path] = definition;\n};\n\n/**\n * Alias a module definition.\n *\n * @param {String} from\n * @param {String} to\n * @api private\n */\n\nrequire.alias = function(from, to) {\n  if (!require.modules.hasOwnProperty(from)) {\n    throw new Error('Failed to alias \"' + from + '\", it does not exist');\n  }\n  require.aliases[to] = from;\n};\n\n/**\n * Return a require function relative to the `parent` path.\n *\n * @param {String} parent\n * @return {Function}\n * @api private\n */\n\nrequire.relative = function(parent) {\n  var p = require.normalize(parent, '..');\n\n  /**\n   * lastIndexOf helper.\n   */\n\n  function lastIndexOf(arr, obj) {\n    var i = arr.length;\n    while (i--) {\n      if (arr[i] === obj) return i;\n    }\n    return -1;\n  }\n\n  /**\n   * The relative require() itself.\n   */\n\n  function localRequire(path) {\n    var resolved = localRequire.resolve(path);\n    return require(resolved, parent, path);\n  }\n\n  /**\n   * Resolve relative to the parent.\n   */\n\n  localRequire.resolve = function(path) {\n    var c = path.charAt(0);\n    if ('/' == c) return path.slice(1);\n    if ('.' == c) return require.normalize(p, path);\n\n    // resolve deps by returning\n    // the dep in the nearest \"deps\"\n    // directory\n    var segs = parent.split('/');\n    var i = lastIndexOf(segs, 'deps') + 1;\n    if (!i) i = 0;\n    path = segs.slice(0, i + 1).join('/') + '/deps/' + path;\n    return path;\n  };\n\n  /**\n   * Check if module is defined at `path`.\n   */\n\n  localRequire.exists = function(path) {\n    return require.modules.hasOwnProperty(localRequire.resolve(path));\n  };\n\n  return localRequire;\n};\nrequire.register(\"visionmedia-debug/index.js\", function(exports, require, module){\nif ('undefined' == typeof window) {\n  module.exports = require('./lib/debug');\n} else {\n  module.exports = require('./debug');\n}\n\n});\nrequire.register(\"visionmedia-debug/debug.js\", function(exports, require, module){\n\n/**\n * Expose `debug()` as the module.\n */\n\nmodule.exports = debug;\n\n/**\n * Create a debugger with the given `name`.\n *\n * @param {String} name\n * @return {Type}\n * @api public\n */\n\nfunction debug(name) {\n  if (!debug.enabled(name)) return function(){};\n\n  return function(fmt){\n    fmt = coerce(fmt);\n\n    var curr = new Date;\n    var ms = curr - (debug[name] || curr);\n    debug[name] = curr;\n\n    fmt = name\n      + ' '\n      + fmt\n      + ' +' + debug.humanize(ms);\n\n    // This hackery is required for IE8\n    // where `console.log` doesn't have 'apply'\n    window.console\n      && console.log\n      && Function.prototype.apply.call(console.log, console, arguments);\n  }\n}\n\n/**\n * The currently active debug mode names.\n */\n\ndebug.names = [];\ndebug.skips = [];\n\n/**\n * Enables a debug mode by name. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} name\n * @api public\n */\n\ndebug.enable = function(name) {\n  try {\n    localStorage.debug = name;\n  } catch(e){}\n\n  var split = (name || '').split(/[\\s,]+/)\n    , len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    name = split[i].replace('*', '.*?');\n    if (name[0] === '-') {\n      debug.skips.push(new RegExp('^' + name.substr(1) + '$'));\n    }\n    else {\n      debug.names.push(new RegExp('^' + name + '$'));\n    }\n  }\n};\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\ndebug.disable = function(){\n  debug.enable('');\n};\n\n/**\n * Humanize the given `ms`.\n *\n * @param {Number} m\n * @return {String}\n * @api private\n */\n\ndebug.humanize = function(ms) {\n  var sec = 1000\n    , min = 60 * 1000\n    , hour = 60 * min;\n\n  if (ms >= hour) return (ms / hour).toFixed(1) + 'h';\n  if (ms >= min) return (ms / min).toFixed(1) + 'm';\n  if (ms >= sec) return (ms / sec | 0) + 's';\n  return ms + 'ms';\n};\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\ndebug.enabled = function(name) {\n  for (var i = 0, len = debug.skips.length; i < len; i++) {\n    if (debug.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (var i = 0, len = debug.names.length; i < len; i++) {\n    if (debug.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Coerce `val`.\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n// persist\n\nif (window.localStorage) debug.enable(localStorage.debug);\n\n});\nrequire.register(\"visionmedia-css-whitespace/index.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar parse = require('./lib/parser');\nvar compile = require('./lib/compiler');\n\n/**\n * Compile a whitespace significant\n * `str` of CSS to the valid CSS\n * equivalent.\n *\n * @param {String} str\n * @return {String}\n * @api public\n */\n\nmodule.exports = function(str){\n  return compile(parse(str));\n};\n\n});\nrequire.register(\"visionmedia-css-whitespace/lib/compiler.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('css-whitespace:parser');\n\n/**\n * Compile the given `node`.\n *\n * @param {Array} node\n * @return {String}\n * @api private\n */\n\nmodule.exports = function(node){\n  var indents = 0;\n  var rules = [];\n  var stash = [];\n  var level = 0;\n  var nest = 0;\n\n  if (debug.enabled) {\n    var util = require('util');\n    console.log(util.inspect(node, false, 12, true));\n  }\n\n  return visit(node);\n\n  /**\n   * Visit `node`.\n   */\n\n  function visit(node) {\n    switch (node[0]) {\n      case 'root':\n        return root(node);\n      case 'rule':\n        if ('@' == node[1][0][0]) ++nest;\n        var ret = rule(node);\n        if ('@' == node[1][0][0]) --nest;\n        return ret;\n      case 'block':\n        ++level;\n        var ret = block(node);\n        --level;\n        return ret;\n      case 'prop':\n        return prop(node);\n      case 'comment':\n        return comment(node);\n      default:\n        throw new Error('invalid node \"' + node[0] + '\"');\n    }\n  }\n\n  /**\n   * Visit block.\n   */\n\n  function block(node) {\n    var buf = [];\n    var nodes = node[1];\n\n    for (var i = 0; i < nodes.length; ++i) {\n      buf.push(visit(nodes[i]));\n    }\n\n    return buf.join('');\n  }\n\n  /**\n   * Visit comment.\n   */\n\n  function comment(node) {\n    return indent() + '/*' + node[1] + '*/\\n';\n  }\n\n  /**\n   * Visit prop.\n   */\n\n  function prop(node) {\n    var prop = node[1];\n    var val = node[2];\n    return indent() + prop + ': ' + val + ';\\n';\n  }\n\n  /**\n   * Visit rule.\n   */\n\n  function rule(node) {\n    var font = '@font-face' == node[1][0].trim();\n    var rule = node[1];\n    var block = node[2];\n    var buf = '';\n\n    if (!block) return rule.join('') + ';';\n\n    rules.push(node);\n\n    if ('@' == rule[0][0] && !font) {\n      buf = join(rules) + ' {\\n';\n      visit(block);\n      buf += stash.join('\\n');\n      buf += '\\n}';\n      stash = [];\n    } else if (nest && !font) {\n      indents = 1;\n      buf = join(rules, 1) + ' {\\n';\n      indents = 2;\n      buf += visit(block);\n      buf += '  }';\n      indents = 1;\n    } else {\n      indents = 0;\n      buf = join(rules) + ' {\\n'\n      indents = 1;\n      buf += visit(block);\n      indents = 0;\n      buf += '}';\n      if (!hasProperties(block)) buf = '';\n    }\n\n    if (rules.length > 1) {\n      if (hasProperties(block)) stash.push(buf);\n      buf = '';\n    }\n\n    rules.pop();\n\n    return buf;\n  }\n\n  /**\n   * Visit root.\n   */\n\n  function root(node) {\n    var buf = [];\n    for (var i = 0; i < node[1].length; ++i) {\n      buf.push(visit(node[1][i]));\n      if (stash.length) {\n        buf = buf.concat(stash);\n        stash = [];\n      }\n    }\n    return buf.join('\\n\\n');\n  }\n\n  /**\n   * Join the given rules.\n   *\n   * @param {Array} rules\n   * @param {Number} [offset]\n   * @return {String}\n   * @api private\n   */\n\n  function join(rules, offset) {\n    offset = offset || 0;\n    var selectors = [];\n    var buf = [];\n    var curr;\n    var next;\n\n    function compile(rules, i) {\n      if (offset != i) {\n        rules[i][1].forEach(function(selector){\n          var parent = ~selector.indexOf('&');\n          selector = selector.replace('&', '');\n          buf.unshift(parent ? selector : ' ' + selector);\n          compile(rules, i - 1);\n          buf.shift();\n        });\n      } else {\n        rules[i][1].forEach(function(selector){\n          var tail = buf.join('');\n          selectors.push(indent() + selector + tail);\n        });\n      }\n    }\n\n    compile(rules, rules.length - 1);\n\n    return selectors.join(',\\n');\n  }\n\n  /**\n   * Return indent.\n   */\n\n  function indent() {\n    return Array(indents + 1).join('  ');\n  }\n};\n\n/**\n * Check if `block` has properties.\n *\n * @param {Array} block\n * @return {Boolean}\n * @api private\n */\n\nfunction hasProperties(block) {\n  var nodes = block[1];\n  for (var i = 0; i < nodes.length; ++i) {\n    if ('prop' == nodes[i][0]) return true;\n  }\n  return false;\n}\n\n/**\n * Blank string filter.\n *\n * @api private\n */\n\nfunction blank(str) {\n  return '' != str;\n}\n\n});\nrequire.register(\"visionmedia-css-whitespace/lib/lexer.js\", function(exports, require, module){\n\n/**\n * Pesudo selectors.\n */\n\nvar pseudos = [\n  ':selection',\n  'fullscreen',\n  'nth-child',\n  'first-child',\n  'last-child',\n  'link',\n  'visited',\n  'hover',\n  'active',\n  'focus',\n  'first-letter',\n  'first-line',\n  'before',\n  'after',\n  'lang',\n  'enabled',\n  'disabled',\n  'only-child',\n  'only-of-type',\n  'first-of-type',\n  'last-of-type',\n  'nth-last-of-type',\n  'nth-of-type',\n  'root',\n  'empty',\n  'target',\n  'not',\n  '-o',\n  '-ms',\n  '-moz',\n  '-webkit'\n]\n\n/**\n * Property regexp.\n */\n\npseudos = pseudos.join('|');\nvar propre = new RegExp('^ *([-\\\\w]+):(?!' + pseudos + ') *([^\\n]*)');\n\n/**\n * Scan the given `str` returning tokens.\n *\n * @param {String} str\n * @return {Array}\n * @api private\n */\n\nmodule.exports = function(str) {\n  var indents = [0];\n  var stash = [];\n\n  // strip blanks\n  str = str.replace(/\\r/g, '');\n  str = str.replace(/\\n\\s*\\n/gm, '\\n');\n\n  return scan();\n\n  /**\n   * tok+\n   */\n\n  function scan() {\n    var toks = []\n      , curr;\n\n    while (str.length) {\n      curr = next();\n      curr && toks.push(curr);\n      if (str.length && !curr) {\n        throw new Error('syntax error near \"' + str.slice(0, 10) + '\"');\n      }\n    }\n\n    toks = toks.concat(stash);\n    while (indents.pop()) toks.push(['outdent']);\n    toks.push(['eos']);\n    return toks;\n  }\n\n  /**\n   *   eos\n   * | indentation\n   * | rule\n   */\n\n  function next() {\n    return stashed()\n      || comment()\n      || csscomment()\n      || indentation()\n      || prop()\n      || rule();\n  }\n\n  /**\n   * Deferred tokens.\n   */\n\n  function stashed() {\n    return stash.shift();\n  }\n\n  /**\n   * Comment.\n   */\n\n  function comment() {\n    var m = str.match(/^\\/\\/([^\\n]*)/);\n    if (!m) return;\n    str = str.slice(m[0].length);\n    return next();\n  }\n\n  /**\n   * Multiline comment.\n   */\n\n  function csscomment() {\n    if ('/' != str[0] || '*' != str[1]) return;\n    str = str.slice(2);\n\n    var i = 0;\n    while ('*' != str[i] && '/' != str[i + 1]) ++i;\n\n    var buf = str.slice(0, i);\n    str = str.slice(buf.length + 2);\n\n    return ['comment', buf];\n  }\n\n  /**\n   *   INDENT\n   * | OUTDENT\n   */\n\n  function indentation() {\n    var spaces = str.match(/^\\n( *)/);\n    if (!spaces) return;\n    str = str.slice(spaces[0].length);\n    spaces = spaces[1].length;\n    var prev = indents[indents.length - 1];\n\n    // INDENT\n    if (spaces > prev) return indent(spaces);\n\n    // OUTDENT\n    if (spaces < prev) return outdent(spaces);\n\n    return next();\n  }\n\n  /**\n   * Indent.\n   */\n\n  function indent(spaces) {\n    indents.push(spaces);\n    return ['indent'];\n  }\n\n  /**\n   * Outdent.\n   */\n\n  function outdent(spaces) {\n    while (indents[indents.length - 1] > spaces) {\n      indents.pop();\n      stash.push(['outdent']);\n    }\n    return stashed();\n  }\n\n  /**\n   * Property.\n   */\n\n  function prop() {\n    var m = str.match(propre);\n    if (!m) return;\n    str = str.slice(m[0].length);\n    return ['prop', m[1], m[2]];\n  }\n\n  /**\n   * Rule.\n   */\n\n  function rule() {\n    var m = str.match(/^([^\\n,]+, *\\n|[^\\n]+)+/);\n    if (!m) return;\n    str = str.slice(m[0].length);\n    m = m[0].split(/\\s*,\\s*/);\n    return ['rule', m];\n  }\n}\n\n});\nrequire.register(\"visionmedia-css-whitespace/lib/parser.js\", function(exports, require, module){\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('css-whitespace:lexer');\nvar scan = require('./lexer');\n\n/**\n * Parse the given `str`, returning an AST.\n *\n * @param {String} str\n * @return {Array}\n * @api private\n */\n\nmodule.exports = function(str) {\n  var toks = scan(str);\n\n  if (debug.enabled) {\n    var util = require('util');\n    console.log(util.inspect(toks, false, 12, true));\n  }\n\n  return stmts();\n\n  /**\n   * Grab the next token.\n   */\n\n  function next() {\n    return toks.shift();\n  }\n\n  /**\n   * Check if the next token is `type`.\n   */\n\n  function is(type) {\n    if (type == toks[0][0]) return true;\n  }\n\n  /**\n   * Expect `type` or throw.\n   */\n\n  function expect(type) {\n    if (is(type)) return next();\n    throw new Error('expected \"' + type + '\", but got \"' + toks[0][0] + '\"');\n  }\n\n  /**\n   * stmt+\n   */\n\n  function stmts() {\n    var stmts = [];\n    while (!is('eos')) stmts.push(stmt());\n    return ['root', stmts];\n  }\n\n  /**\n   * INDENT stmt+ OUTDENT\n   */\n\n  function block() {\n    var props = [];\n    expect('indent');\n    while (!is('outdent')) props.push(stmt());\n    expect('outdent');\n    return ['block', props];\n  }\n\n  /**\n   *   rule\n   * | prop\n   */\n\n  function stmt() {\n    if (is('rule')) return rule();\n    if (is('prop')) return prop();\n    return next();\n  }\n\n  /**\n   *   prop\n   * | prop INDENT rule* OUTDENT\n   */\n\n  function prop() {\n    var prop = next();\n    if (is('indent')) {\n      next();\n      while (!is('outdent')) {\n        var tok = next();\n        prop[2] += ' ' + tok[1].join(', ');\n      }\n      expect('outdent');\n    }\n    return prop;\n  }\n\n  /**\n   * rule block?\n   */\n\n  function rule() {\n    var rule = next();\n    if (is('indent')) rule.push(block());\n    return rule;\n  }\n}\n\n});\nrequire.register(\"visionmedia-css-parse/index.js\", function(exports, require, module){\n\nmodule.exports = function(css, options){\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   */\n\n  function updatePosition(str) {\n    var lines = str.match(/\\n/g);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf('\\n');\n    column = ~i ? str.length-i : column + str.length;\n  }\n\n  function position() {\n    var start = { line: lineno, column: column };\n    if (!options.position) return positionNoop;\n    return function(node){\n      node.position = {\n        start: start,\n        end: { line: lineno, column: column }\n      };\n      whitespace();\n      return node;\n    }\n  }\n\n  /**\n   * Return `node`.\n   */\n  function positionNoop(node) {\n    whitespace();\n    return node;\n  }\n\n  /**\n   * Parse stylesheet.\n   */\n\n  function stylesheet() {\n    return {\n      type: 'stylesheet',\n      stylesheet: {\n        rules: rules()\n      }\n    };\n  }\n\n  /**\n   * Opening brace.\n   */\n\n  function open() {\n    return match(/^{\\s*/);\n  }\n\n  /**\n   * Closing brace.\n   */\n\n  function close() {\n    return match(/^}/);\n  }\n\n  /**\n   * Parse ruleset.\n   */\n\n  function rules() {\n    var node;\n    var rules = [];\n    whitespace();\n    comments(rules);\n    while (css[0] != '}' && (node = atrule() || rule())) {\n      rules.push(node);\n      comments(rules);\n    }\n    return rules;\n  }\n\n  /**\n   * Match `re` and return captures.\n   */\n\n  function match(re) {\n    var m = re.exec(css);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    css = css.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n\n  function whitespace() {\n    match(/^\\s*/);\n  }\n\n  /**\n   * Parse comments;\n   */\n\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while (c = comment()) rules.push(c);\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   */\n\n  function comment() {\n    var pos = position();\n    if ('/' != css[0] || '*' != css[1]) return;\n\n    var i = 2;\n    while (null != css[i] && ('*' != css[i] || '/' != css[i + 1])) ++i;\n    i += 2;\n\n    var str = css.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    css = css.slice(i);\n    column += 2;\n    return pos({\n      type: 'comment',\n      comment: str\n    });\n  }\n\n  /**\n   * Parse selector.\n   */\n\n  function selector() {\n    var m = match(/^([^{]+)/);\n    if (!m) return;\n    return m[0].trim().split(/\\s*,\\s*/);\n  }\n\n  /**\n   * Parse declaration.\n   */\n\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(/^(\\*?[-\\w]+)\\s*/);\n    if (!prop) return;\n    prop = prop[0];\n\n    // :\n    if (!match(/^:\\s*/)) return;\n\n    // val\n    var val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\n    if (!val) return;\n\n    var ret = pos({\n      type: 'declaration',\n      property: prop,\n      value: val[0].trim()\n    });\n\n    // ;\n    match(/^[;\\s]*/);\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   */\n\n  function declarations() {\n    var decls = [];\n\n    if (!open()) return;\n    comments(decls);\n\n    // declarations\n    var decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      comments(decls);\n    }\n\n    if (!close()) return;\n    return decls;\n  }\n\n  /**\n   * Parse keyframe.\n   */\n\n  function keyframe() {\n    var m;\n    var vals = [];\n    var pos = position();\n\n    while (m = match(/^(from|to|\\d+%|\\.\\d+%|\\d+\\.\\d+%)\\s*/)) {\n      vals.push(m[1]);\n      match(/^,\\s*/);\n    }\n\n    if (!vals.length) return;\n\n    return pos({\n      type: 'keyframe',\n      values: vals,\n      declarations: declarations()\n    });\n  }\n\n  /**\n   * Parse keyframes.\n   */\n\n  function atkeyframes() {\n    var pos = position();\n    var m = match(/^@([-\\w]+)?keyframes */);\n\n    if (!m) return;\n    var vendor = m[1];\n\n    // identifier\n    var m = match(/^([-\\w]+)\\s*/);\n    if (!m) return;\n    var name = m[1];\n\n    if (!open()) return;\n    comments();\n\n    var frame;\n    var frames = [];\n    while (frame = keyframe()) {\n      frames.push(frame);\n      comments();\n    }\n\n    if (!close()) return;\n\n    return pos({\n      type: 'keyframes',\n      name: name,\n      vendor: vendor,\n      keyframes: frames\n    });\n  }\n\n  /**\n   * Parse supports.\n   */\n\n  function atsupports() {\n    var pos = position();\n    var m = match(/^@supports *([^{]+)/);\n\n    if (!m) return;\n    var supports = m[1].trim();\n\n    if (!open()) return;\n    comments();\n\n    var style = rules();\n\n    if (!close()) return;\n\n    return pos({\n      type: 'supports',\n      supports: supports,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse media.\n   */\n\n  function atmedia() {\n    var pos = position();\n    var m = match(/^@media *([^{]+)/);\n\n    if (!m) return;\n    var media = m[1].trim();\n\n    if (!open()) return;\n    comments();\n\n    var style = rules();\n\n    if (!close()) return;\n\n    return pos({\n      type: 'media',\n      media: media,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse paged media.\n   */\n\n  function atpage() {\n    var pos = position();\n    var m = match(/^@page */);\n    if (!m) return;\n\n    var sel = selector() || [];\n    var decls = [];\n\n    if (!open()) return;\n    comments();\n\n    // declarations\n    var decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      comments();\n    }\n\n    if (!close()) return;\n\n    return pos({\n      type: 'page',\n      selectors: sel,\n      declarations: decls\n    });\n  }\n\n  /**\n   * Parse document.\n   */\n\n  function atdocument() {\n    var pos = position();\n    var m = match(/^@([-\\w]+)?document *([^{]+)/);\n    if (!m) return;\n\n    var vendor = m[1].trim();\n    var doc = m[2].trim();\n\n    if (!open()) return;\n    comments();\n\n    var style = rules();\n\n    if (!close()) return;\n\n    return pos({\n      type: 'document',\n      document: doc,\n      vendor: vendor,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse import\n   */\n\n  function atimport() {\n    return _atrule('import');\n  }\n\n  /**\n   * Parse charset\n   */\n\n  function atcharset() {\n    return _atrule('charset');\n  }\n\n  /**\n   * Parse namespace\n   */\n\n  function atnamespace() {\n    return _atrule('namespace')\n  }\n\n  /**\n   * Parse non-block at-rules\n   */\n\n  function _atrule(name) {\n    var pos = position();\n    var m = match(new RegExp('^@' + name + ' *([^;\\\\n]+);'));\n    if (!m) return;\n    var ret = { type: name };\n    ret[name] = m[1].trim();\n    return pos(ret);\n  }\n\n  /**\n   * Parse at rule.\n   */\n\n  function atrule() {\n    return atkeyframes()\n      || atmedia()\n      || atsupports()\n      || atimport()\n      || atcharset()\n      || atnamespace()\n      || atdocument()\n      || atpage();\n  }\n\n  /**\n   * Parse rule.\n   */\n\n  function rule() {\n    var pos = position();\n    var sel = selector();\n\n    if (!sel) return;\n    comments();\n\n    return pos({\n      type: 'rule',\n      selectors: sel,\n      declarations: declarations()\n    });\n  }\n\n  return stylesheet();\n};\n\n\n});\nrequire.register(\"visionmedia-css-stringify/index.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar Compressed = require('./lib/compress');\nvar Identity = require('./lib/identity');\n\n/**\n * Stringfy the given AST `node`.\n *\n * @param {Object} node\n * @param {Object} options\n * @return {String}\n * @api public\n */\n\nmodule.exports = function(node, options){\n  if (options.compress) {\n    return new Compressed(options).compile(node);\n  }\n\n  return new Identity(options).compile(node);\n};\n\n\n});\nrequire.register(\"visionmedia-css-stringify/lib/compress.js\", function(exports, require, module){\n\n/**\n * Expose compiler.\n */\n\nmodule.exports = Compiler;\n\n/**\n * Initialize a new `Compiler`.\n */\n\nfunction Compiler(options) {\n  options = options || {};\n}\n\n/**\n * Compile `node`.\n */\n\nCompiler.prototype.compile = function(node){\n  return node.stylesheet\n    .rules.map(this.visit, this)\n    .join('');\n};\n\n/**\n * Visit `node`.\n */\n\nCompiler.prototype.visit = function(node){\n  return this[node.type](node);\n};\n\n/**\n * Visit comment node.\n */\n\nCompiler.prototype.comment = function(node){\n  if (this.compress) return '';\n};\n\n/**\n * Visit import node.\n */\n\nCompiler.prototype.import = function(node){\n  return '@import ' + node.import + ';';\n};\n\n/**\n * Visit media node.\n */\n\nCompiler.prototype.media = function(node){\n  return '@media '\n    + node.media\n    + '{'\n    + node.rules.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit document node.\n */\n\nCompiler.prototype.document = function(node){\n  var doc = '@' + (node.vendor || '') + 'document ' + node.document;\n\n  return doc\n    + '{'\n    + node.rules.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit charset node.\n */\n\nCompiler.prototype.charset = function(node){\n  return '@charset ' + node.charset + ';';\n};\n\n/**\n * Visit supports node.\n */\n\nCompiler.prototype.supports = function(node){\n  return '@supports '\n    + node.supports\n    + ' {\\n'\n    + this.indent(1)\n    + node.rules.map(this.visit, this).join('\\n\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit keyframes node.\n */\n\nCompiler.prototype.keyframes = function(node){\n  return '@'\n    + (node.vendor || '')\n    + 'keyframes '\n    + node.name\n    + '{'\n    + node.keyframes.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit keyframe node.\n */\n\nCompiler.prototype.keyframe = function(node){\n  var decls = node.declarations;\n\n  return node.values.join(',')\n    + '{'\n    + decls.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit page node.\n */\n\nCompiler.prototype.page = function(node){\n  var sel = node.selectors.length\n    ? node.selectors.join(', ') + ' '\n    : '';\n\n  return '@page ' + sel\n    + '{\\n'\n    + this.indent(1)\n    + node.declarations.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit rule node.\n */\n\nCompiler.prototype.rule = function(node){\n  var decls = node.declarations;\n  if (!decls.length) return '';\n\n  return node.selectors.join(',')\n    + '{'\n    + decls.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit declaration node.\n */\n\nCompiler.prototype.declaration = function(node){\n  return node.property + ':' + node.value + ';';\n};\n\n\n});\nrequire.register(\"visionmedia-css-stringify/lib/identity.js\", function(exports, require, module){\n\n/**\n * Expose compiler.\n */\n\nmodule.exports = Compiler;\n\n/**\n * Initialize a new `Compiler`.\n */\n\nfunction Compiler(options) {\n  options = options || {};\n  this.indentation = options.indent;\n}\n\n/**\n * Compile `node`.\n */\n\nCompiler.prototype.compile = function(node){\n  return node.stylesheet\n    .rules.map(this.visit, this)\n    .join('\\n\\n');\n};\n\n/**\n * Visit `node`.\n */\n\nCompiler.prototype.visit = function(node){\n  return this[node.type](node);\n};\n\n/**\n * Visit comment node.\n */\n\nCompiler.prototype.comment = function(node){\n  return this.indent() + '/*' + node.comment + '*/';\n};\n\n/**\n * Visit import node.\n */\n\nCompiler.prototype.import = function(node){\n  return '@import ' + node.import + ';';\n};\n\n/**\n * Visit media node.\n */\n\nCompiler.prototype.media = function(node){\n  return '@media '\n    + node.media\n    + ' {\\n'\n    + this.indent(1)\n    + node.rules.map(this.visit, this).join('\\n\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit document node.\n */\n\nCompiler.prototype.document = function(node){\n  var doc = '@' + (node.vendor || '') + 'document ' + node.document;\n\n  return doc + ' '\n    + ' {\\n'\n    + this.indent(1)\n    + node.rules.map(this.visit, this).join('\\n\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit charset node.\n */\n\nCompiler.prototype.charset = function(node){\n  return '@charset ' + node.charset + ';\\n';\n};\n\n/**\n * Visit supports node.\n */\n\nCompiler.prototype.supports = function(node){\n  return '@supports '\n    + node.supports\n    + ' {\\n'\n    + this.indent(1)\n    + node.rules.map(this.visit, this).join('\\n\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit keyframes node.\n */\n\nCompiler.prototype.keyframes = function(node){\n  return '@'\n    + (node.vendor || '')\n    + 'keyframes '\n    + node.name\n    + ' {\\n'\n    + this.indent(1)\n    + node.keyframes.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '}';\n};\n\n/**\n * Visit keyframe node.\n */\n\nCompiler.prototype.keyframe = function(node){\n  var decls = node.declarations;\n\n  return this.indent()\n    + node.values.join(', ')\n    + ' {\\n'\n    + this.indent(1)\n    + decls.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '\\n' + this.indent() + '}\\n';\n};\n\n/**\n * Visit page node.\n */\n\nCompiler.prototype.page = function(node){\n  var sel = node.selectors.length\n    ? node.selectors.join(', ') + ' '\n    : '';\n\n  return '@page ' + sel\n    + '{\\n'\n    + this.indent(1)\n    + node.declarations.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit rule node.\n */\n\nCompiler.prototype.rule = function(node){\n  var indent = this.indent();\n  var decls = node.declarations;\n\n  return node.selectors.map(function(s){ return indent + s }).join(',\\n')\n    + ' {\\n'\n    + this.indent(1)\n    + decls.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '\\n' + this.indent() + '}';\n};\n\n/**\n * Visit declaration node.\n */\n\nCompiler.prototype.declaration = function(node){\n  return this.indent() + node.property + ': ' + node.value + ';';\n};\n\n/**\n * Increase, decrease or return current indentation.\n */\n\nCompiler.prototype.indent = function(level) {\n  this.level = this.level || 1;\n\n  if (null != level) {\n    this.level += level;\n    return '';\n  }\n\n  return Array(this.level).join(this.indentation || '  ');\n};\n\n});\nrequire.register(\"visionmedia-css/index.js\", function(exports, require, module){\n\nexports.parse = require('css-parse');\nexports.stringify = require('css-stringify');\n\n});\nrequire.register(\"component-color-parser/index.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar colors = require('./colors');\n\n/**\n * Expose `parse`.\n */\n\nmodule.exports = parse;\n\n/**\n * Parse `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api public\n */\n\nfunction parse(str) {\n  return named(str)\n    || hex3(str)\n    || hex6(str)\n    || rgb(str)\n    || rgba(str);\n}\n\n/**\n * Parse named css color `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction named(str) {\n  var c = colors[str.toLowerCase()];\n  if (!c) return;\n  return {\n    r: c[0],\n    g: c[1],\n    b: c[2]\n  }\n}\n\n/**\n * Parse rgb(n, n, n)\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction rgb(str) {\n  if (0 == str.indexOf('rgb(')) {\n    str = str.match(/rgb\\(([^)]+)\\)/)[1];\n    var parts = str.split(/ *, */).map(Number);\n    return {\n      r: parts[0],\n      g: parts[1],\n      b: parts[2],\n      a: 1\n    }\n  }\n}\n\n/**\n * Parse rgba(n, n, n, n)\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction rgba(str) {\n  if (0 == str.indexOf('rgba(')) {\n    str = str.match(/rgba\\(([^)]+)\\)/)[1];\n    var parts = str.split(/ *, */).map(Number);\n    return {\n      r: parts[0],\n      g: parts[1],\n      b: parts[2],\n      a: parts[3]\n    }\n  }\n}\n\n/**\n * Parse #nnnnnn\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction hex6(str) {\n  if ('#' == str[0] && 7 == str.length) {\n    return {\n      r: parseInt(str.slice(1, 3), 16),\n      g: parseInt(str.slice(3, 5), 16),\n      b: parseInt(str.slice(5, 7), 16),\n      a: 1\n    }\n  }\n}\n\n/**\n * Parse #nnn\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction hex3(str) {\n  if ('#' == str[0] && 4 == str.length) {\n    return {\n      r: parseInt(str[1] + str[1], 16),\n      g: parseInt(str[2] + str[2], 16),\n      b: parseInt(str[3] + str[3], 16),\n      a: 1\n    }\n  }\n}\n\n\n});\nrequire.register(\"component-color-parser/colors.js\", function(exports, require, module){\n\nmodule.exports = {\n    aliceblue: [240, 248, 255]\n  , antiquewhite: [250, 235, 215]\n  , aqua: [0, 255, 255]\n  , aquamarine: [127, 255, 212]\n  , azure: [240, 255, 255]\n  , beige: [245, 245, 220]\n  , bisque: [255, 228, 196]\n  , black: [0, 0, 0]\n  , blanchedalmond: [255, 235, 205]\n  , blue: [0, 0, 255]\n  , blueviolet: [138, 43, 226]\n  , brown: [165, 42, 42]\n  , burlywood: [222, 184, 135]\n  , cadetblue: [95, 158, 160]\n  , chartreuse: [127, 255, 0]\n  , chocolate: [210, 105, 30]\n  , coral: [255, 127, 80]\n  , cornflowerblue: [100, 149, 237]\n  , cornsilk: [255, 248, 220]\n  , crimson: [220, 20, 60]\n  , cyan: [0, 255, 255]\n  , darkblue: [0, 0, 139]\n  , darkcyan: [0, 139, 139]\n  , darkgoldenrod: [184, 132, 11]\n  , darkgray: [169, 169, 169]\n  , darkgreen: [0, 100, 0]\n  , darkgrey: [169, 169, 169]\n  , darkkhaki: [189, 183, 107]\n  , darkmagenta: [139, 0, 139]\n  , darkolivegreen: [85, 107, 47]\n  , darkorange: [255, 140, 0]\n  , darkorchid: [153, 50, 204]\n  , darkred: [139, 0, 0]\n  , darksalmon: [233, 150, 122]\n  , darkseagreen: [143, 188, 143]\n  , darkslateblue: [72, 61, 139]\n  , darkslategray: [47, 79, 79]\n  , darkslategrey: [47, 79, 79]\n  , darkturquoise: [0, 206, 209]\n  , darkviolet: [148, 0, 211]\n  , deeppink: [255, 20, 147]\n  , deepskyblue: [0, 191, 255]\n  , dimgray: [105, 105, 105]\n  , dimgrey: [105, 105, 105]\n  , dodgerblue: [30, 144, 255]\n  , firebrick: [178, 34, 34]\n  , floralwhite: [255, 255, 240]\n  , forestgreen: [34, 139, 34]\n  , fuchsia: [255, 0, 255]\n  , gainsboro: [220, 220, 220]\n  , ghostwhite: [248, 248, 255]\n  , gold: [255, 215, 0]\n  , goldenrod: [218, 165, 32]\n  , gray: [128, 128, 128]\n  , green: [0, 128, 0]\n  , greenyellow: [173, 255, 47]\n  , grey: [128, 128, 128]\n  , honeydew: [240, 255, 240]\n  , hotpink: [255, 105, 180]\n  , indianred: [205, 92, 92]\n  , indigo: [75, 0, 130]\n  , ivory: [255, 255, 240]\n  , khaki: [240, 230, 140]\n  , lavender: [230, 230, 250]\n  , lavenderblush: [255, 240, 245]\n  , lawngreen: [124, 252, 0]\n  , lemonchiffon: [255, 250, 205]\n  , lightblue: [173, 216, 230]\n  , lightcoral: [240, 128, 128]\n  , lightcyan: [224, 255, 255]\n  , lightgoldenrodyellow: [250, 250, 210]\n  , lightgray: [211, 211, 211]\n  , lightgreen: [144, 238, 144]\n  , lightgrey: [211, 211, 211]\n  , lightpink: [255, 182, 193]\n  , lightsalmon: [255, 160, 122]\n  , lightseagreen: [32, 178, 170]\n  , lightskyblue: [135, 206, 250]\n  , lightslategray: [119, 136, 153]\n  , lightslategrey: [119, 136, 153]\n  , lightsteelblue: [176, 196, 222]\n  , lightyellow: [255, 255, 224]\n  , lime: [0, 255, 0]\n  , limegreen: [50, 205, 50]\n  , linen: [250, 240, 230]\n  , magenta: [255, 0, 255]\n  , maroon: [128, 0, 0]\n  , mediumaquamarine: [102, 205, 170]\n  , mediumblue: [0, 0, 205]\n  , mediumorchid: [186, 85, 211]\n  , mediumpurple: [147, 112, 219]\n  , mediumseagreen: [60, 179, 113]\n  , mediumslateblue: [123, 104, 238]\n  , mediumspringgreen: [0, 250, 154]\n  , mediumturquoise: [72, 209, 204]\n  , mediumvioletred: [199, 21, 133]\n  , midnightblue: [25, 25, 112]\n  , mintcream: [245, 255, 250]\n  , mistyrose: [255, 228, 225]\n  , moccasin: [255, 228, 181]\n  , navajowhite: [255, 222, 173]\n  , navy: [0, 0, 128]\n  , oldlace: [253, 245, 230]\n  , olive: [128, 128, 0]\n  , olivedrab: [107, 142, 35]\n  , orange: [255, 165, 0]\n  , orangered: [255, 69, 0]\n  , orchid: [218, 112, 214]\n  , palegoldenrod: [238, 232, 170]\n  , palegreen: [152, 251, 152]\n  , paleturquoise: [175, 238, 238]\n  , palevioletred: [219, 112, 147]\n  , papayawhip: [255, 239, 213]\n  , peachpuff: [255, 218, 185]\n  , peru: [205, 133, 63]\n  , pink: [255, 192, 203]\n  , plum: [221, 160, 203]\n  , powderblue: [176, 224, 230]\n  , purple: [128, 0, 128]\n  , red: [255, 0, 0]\n  , rosybrown: [188, 143, 143]\n  , royalblue: [65, 105, 225]\n  , saddlebrown: [139, 69, 19]\n  , salmon: [250, 128, 114]\n  , sandybrown: [244, 164, 96]\n  , seagreen: [46, 139, 87]\n  , seashell: [255, 245, 238]\n  , sienna: [160, 82, 45]\n  , silver: [192, 192, 192]\n  , skyblue: [135, 206, 235]\n  , slateblue: [106, 90, 205]\n  , slategray: [119, 128, 144]\n  , slategrey: [119, 128, 144]\n  , snow: [255, 255, 250]\n  , springgreen: [0, 255, 127]\n  , steelblue: [70, 130, 180]\n  , tan: [210, 180, 140]\n  , teal: [0, 128, 128]\n  , thistle: [216, 191, 216]\n  , tomato: [255, 99, 71]\n  , turquoise: [64, 224, 208]\n  , violet: [238, 130, 238]\n  , wheat: [245, 222, 179]\n  , white: [255, 255, 255]\n  , whitesmoke: [245, 245, 245]\n  , yellow: [255, 255, 0]\n  , yellowgreen: [154, 205, 5]\n};\n});\nrequire.register(\"component-path/index.js\", function(exports, require, module){\n\nexports.basename = function(path){\n  return path.split('/').pop();\n};\n\nexports.dirname = function(path){\n  return path.split('/').slice(0, -1).join('/') || '.'; \n};\n\nexports.extname = function(path){\n  var base = exports.basename(path);\n  if (!~base.indexOf('.')) return '';\n  var ext = base.split('.').pop();\n  return '.' + ext;\n};\n});\nrequire.register(\"visionmedia-rework/index.js\", function(exports, require, module){\n\nmodule.exports = require('./lib/rework');\n});\nrequire.register(\"visionmedia-rework/lib/rework.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar css = require('css');\n\n/**\n * Expose `rework`.\n */\n\nexports = module.exports = rework;\n\n/**\n * Expose `visit` helpers.\n */\n\nexports.visit = require('./visit');\n\n/**\n * Expose prefix properties.\n */\n\nexports.properties = require('./properties');\n\n/**\n * Initialize a new stylesheet `Rework` with `str`.\n *\n * @param {String} str\n * @return {Rework}\n * @api public\n */\n\nfunction rework(str) {\n  return new Rework(css.parse(str));\n}\n\n/**\n * Initialize a new stylesheet `Rework` with `obj`.\n *\n * @param {Object} obj\n * @api private\n */\n\nfunction Rework(obj) {\n  this.obj = obj;\n}\n\n/**\n * Use the given plugin `fn(style, rework)`.\n *\n * @param {Function} fn\n * @return {Rework}\n * @api public\n */\n\nRework.prototype.use = function(fn){\n  fn(this.obj.stylesheet, this);\n  return this;\n};\n\n/**\n * Specify global vendor `prefixes`,\n * explicit ones may still be passed\n * to most plugins.\n *\n * @param {Array} prefixes\n * @return {Rework}\n * @api public\n */\n\nRework.prototype.vendors = function(prefixes){\n  this.prefixes = prefixes;\n  return this;\n};\n\n/**\n * Stringify the stylesheet.\n *\n * @param {Object} options\n * @return {String}\n * @api public\n */\n\nRework.prototype.toString = function(options){\n  return css.stringify(this.obj, options);\n};\n\n/**\n * Expose plugins.\n */\n\nexports.mixin = exports.mixins = require('./plugins/mixin');\nexports.function = exports.functions = require('./plugins/function');\nexports.prefix = require('./plugins/prefix');\nexports.colors = require('./plugins/colors');\nexports.extend = require('./plugins/extend');\nexports.references = require('./plugins/references');\nexports.prefixValue = require('./plugins/prefix-value');\nexports.prefixSelectors = require('./plugins/prefix-selectors');\nexports.keyframes = require('./plugins/keyframes');\nexports.at2x = require('./plugins/at2x');\nexports.url = require('./plugins/url');\nexports.ease = require('./plugins/ease');\nexports.vars = require('./plugins/vars');\n\n/**\n * Try/catch plugins unavailable in component.\n */\n\n try {\n  exports.inline = require('./plugins/inline');\n} catch (err) {};\n\n});\nrequire.register(\"visionmedia-rework/lib/utils.js\", function(exports, require, module){\n\n/**\n * Strip `str` quotes.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.stripQuotes = function(str) {\n  if ('\"' == str[0] || \"'\" == str[0]) return str.slice(1, -1);\n  return str;\n};\n});\nrequire.register(\"visionmedia-rework/lib/visit.js\", function(exports, require, module){\n\n/**\n * Visit `node`'s declarations recursively and\n * invoke `fn(declarations, node)`.\n *\n * @param {Object} node\n * @param {Function} fn\n * @api private\n */\n\nexports.declarations = function(node, fn){\n  node.rules.forEach(function(rule){\n    // @media etc\n    if (rule.rules) {\n      exports.declarations(rule, fn);\n      return;\n    }\n\n    // keyframes\n    if (rule.keyframes) {\n      rule.keyframes.forEach(function(keyframe){\n        fn(keyframe.declarations, rule);\n      });\n      return;\n    }\n\n    // @charset, @import etc\n    if (!rule.declarations) return;\n\n    fn(rule.declarations, node);\n  });\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/properties.js\", function(exports, require, module){\n\n/**\n * Prefixed properties.\n */\n\nmodule.exports = [\n  'animation',\n  'animation-delay',\n  'animation-direction',\n  'animation-duration',\n  'animation-fill-mode',\n  'animation-iteration-count',\n  'animation-name',\n  'animation-play-state',\n  'animation-timing-function',\n  'appearance',\n  'background-visibility',\n  'background-composite',\n  'blend-mode',\n  'border-bottom-left-radius',\n  'border-bottom-right-radius',\n  'border-fit',\n  'border-image',\n  'border-vertical-spacing',\n  'box-align',\n  'box-direction',\n  'box-flex',\n  'box-flex-group',\n  'box-lines',\n  'box-ordinal-group',\n  'box-orient',\n  'box-pack',\n  'box-reflect',\n  'box-sizing',\n  'clip-path',\n  'column-count',\n  'column-width',\n  'column-min-width',\n  'column-width-policy',\n  'column-gap',\n  'column-rule',\n  'column-rule-color',\n  'column-rule-style',\n  'column-rule-width',\n  'column-span',\n  'flex',\n  'flex-basis',\n  'flex-direction',\n  'flex-flow',\n  'flex-grow',\n  'flex-shrink',\n  'flex-wrap',\n  'flex-flow-from',\n  'flex-flow-into',\n  'font-smoothing',\n  'transform',\n  'transform-origin',\n  'transform-origin-x',\n  'transform-origin-y',\n  'transform-origin-z',\n  'transform-style',\n  'transition',\n  'transition-delay',\n  'transition-duration',\n  'transition-property',\n  'transition-timing-function',\n  'user-drag',\n  'user-modify',\n  'user-select',\n  'wrap',\n  'wrap-flow',\n  'wrap-margin',\n  'wrap-padding',\n  'wrap-through',\n  'overflow-scrolling'\n];\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/function.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit')\n  , utils = require('../utils')\n  , strip = utils.stripQuotes;\n\n/**\n * Define custom function.\n */\n\nmodule.exports = function(functions, args) {\n  if (!functions) throw new Error('functions object required');\n  return function(style, rework){\n    visit.declarations(style, function(declarations){\n      for (var name in functions) {\n        func(declarations, name, functions[name], args);\n      }\n    });\n  }\n};\n\n/**\n * Escape regexp codes in string.\n *\n * @param {String} s\n * @api private\n */\n\nfunction escape(s) {\n  return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\n/**\n * Visit declarations and apply functions.\n *\n * @param {Array} declarations\n * @param {Object} functions\n * @param {Boolean} [parseArgs]\n * @api private\n */\n\nfunction func(declarations, name, func, parseArgs) {\n  if (false !== parseArgs) parseArgs = true;\n  var regexp = new RegExp(escape(name) + '\\\\(([^\\)]+)\\\\)', 'g');\n  declarations.forEach(function(decl){\n    if (!~decl.value.indexOf(name + '(')) return;\n    decl.value = decl.value.replace(regexp, function(_, args){\n      if (!parseArgs) return func.call(decl, strip(args));\n      args = args.split(/,\\s*/).map(strip);\n      return func.apply(decl, args);\n    });\n  });\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/url.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('../utils')\n  , func = require('./function');\n\n/**\n * Map `url()` calls.\n *\n *   body {\n *     background: url(/images/bg.png);\n *   }\n *\n * yields:\n *\n *   body {\n *     background: url(http://example.com/images/bg.png);\n *   }\n *\n */\n\nmodule.exports = function(fn) {\n  return func({\n    url: function(path){\n      return 'url(\"' + fn(path) + '\")';\n    }\n  }, false);\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/vars.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Add variable support.\n *\n *   :root {\n *     var-header-color: #06c;\n *   }\n *\n *   h1 {\n *     background-color: var(header-color);\n *   }\n *\n * yields:\n *\n *   h1 {\n *     background-color: #06c;\n *   }\n *\n */\n\nmodule.exports = function(map) {\n  map = map || {};\n\n  function replace(str) {\n    return str.replace(/\\bvar\\((.*?)\\)/g, function(_, name){\n      var val = map[name];\n      if (!val) throw new Error('variable \"' + name + '\" is undefined');\n      if (val.match(/\\bvar\\(/)) val = replace(val);\n      return val;\n    });\n  }\n\n  return function vars(style){\n    visit.declarations(style, function(declarations, node){\n      // map vars\n      declarations.forEach(function(decl){\n        if (0 != decl.property.indexOf('var-')) return;\n        var name = decl.property.replace('var-', '');\n        map[name] = decl.value;\n      });\n\n      // substitute values\n      declarations.forEach(function(decl){\n        if (!decl.value.match(/\\bvar\\(/)) return;\n        decl.value = replace(decl.value);\n      });\n    });\n  }\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/ease.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Easing functions.\n */\n\nvar ease = {\n  'ease-in-out-back': 'cubic-bezier(0.680, -0.550, 0.265, 1.550)',\n  'ease-in-out-circ': 'cubic-bezier(0.785, 0.135, 0.150, 0.860)',\n  'ease-in-out-expo': 'cubic-bezier(1.000, 0.000, 0.000, 1.000)',\n  'ease-in-out-sine': 'cubic-bezier(0.445, 0.050, 0.550, 0.950)',\n  'ease-in-out-quint': 'cubic-bezier(0.860, 0.000, 0.070, 1.000)',\n  'ease-in-out-quart': 'cubic-bezier(0.770, 0.000, 0.175, 1.000)',\n  'ease-in-out-cubic': 'cubic-bezier(0.645, 0.045, 0.355, 1.000)',\n  'ease-in-out-quad': 'cubic-bezier(0.455, 0.030, 0.515, 0.955)',\n  'ease-out-back': 'cubic-bezier(0.175, 0.885, 0.320, 1.275)',\n  'ease-out-circ': 'cubic-bezier(0.075, 0.820, 0.165, 1.000)',\n  'ease-out-expo': 'cubic-bezier(0.190, 1.000, 0.220, 1.000)',\n  'ease-out-sine': 'cubic-bezier(0.390, 0.575, 0.565, 1.000)',\n  'ease-out-quint': 'cubic-bezier(0.230, 1.000, 0.320, 1.000)',\n  'ease-out-quart': 'cubic-bezier(0.165, 0.840, 0.440, 1.000)',\n  'ease-out-cubic': 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n  'ease-out-quad': 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n  'ease-in-back': 'cubic-bezier(0.600, -0.280, 0.735, 0.045)',\n  'ease-in-circ': 'cubic-bezier(0.600, 0.040, 0.980, 0.335)',\n  'ease-in-expo': 'cubic-bezier(0.950, 0.050, 0.795, 0.035)',\n  'ease-in-sine': 'cubic-bezier(0.470, 0.000, 0.745, 0.715)',\n  'ease-in-quint': 'cubic-bezier(0.755, 0.050, 0.855, 0.060)',\n  'ease-in-quart': 'cubic-bezier(0.895, 0.030, 0.685, 0.220)',\n  'ease-in-cubic': 'cubic-bezier(0.550, 0.055, 0.675, 0.190)',\n  'ease-in-quad': 'cubic-bezier(0.550, 0.085, 0.680, 0.530)'\n};\n\n/**\n * Keys.\n */\n\nvar keys = Object.keys(ease);\n\n/**\n * Provide additional easing functions:\n *\n *    #logo {\n *      transition: all 500ms ease-out-back;\n *    }\n *\n * yields:\n *\n *    #logo {\n *      transition: all 500ms cubic-bezier(0.175, 0.885, 0.320, 1.275)\n *    }\n *\n */\n\nmodule.exports = function() {\n  return function(style, rework){\n    visit.declarations(style, substitute);\n  }\n};\n\n/**\n * Substitute easing functions.\n *\n * @api private\n */\n\nfunction substitute(declarations) {\n  for (var i = 0, len = declarations.length; i < len; ++i) {\n    var decl = declarations[i];\n    if (!decl.property.match(/transition|animation|timing/)) continue;\n    for (var k = 0; k < keys.length; ++k) {\n      var key = keys[k];\n      if (~decl.value.indexOf(key)) {\n        decl.value = decl.value.replace(key, ease[key]);\n        break;\n      }\n    }\n  }\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/at2x.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('../utils')\n  , path = require('path')\n  , stripQuotes = utils.stripQuotes;\n\n/**\n * Translate\n *\n *   .logo {\n *     background-image: url('/public/images/logo.png')\n *   }\n *\n * yields:\n *\n *   .logo {\n *     background-image: url('/public/images/logo.png')\n *   }\n *\n *   @media all and (-webkit-min-device-pixel-ratio : 1.5) {\n *     .logo {\n *       background-image: url(\"/public/images/logo@2x.png\");\n *       background-size: contain\n *     }\n *   }\n *\n */\n\nmodule.exports = function(vendors) {\n  return function(style, rework){\n    vendors = vendors || rework.prefixes;\n\n    style.rules.forEach(function(rule){\n      if (!rule.declarations) return;\n\n      var backgroundSize = rule.declarations.filter(backgroundWithSize).map(value)[0] || 'contain';\n\n      rule.declarations.filter(backgroundWithURL).forEach(function(decl){\n        // parse url\n        var i = decl.value.indexOf('url(');\n        var url = stripQuotes(decl.value.slice(i + 4, decl.value.indexOf(')', i)));\n        var ext = path.extname(url);\n\n        // ignore .svg\n        if ('.svg' == ext) return;\n\n        // @2x value\n        url = path.join(path.dirname(url), path.basename(url, ext) + '@2x' + ext);\n\n        // wrap in @media\n        style.rules.push({\n          type: 'media',\n          media: 'all and (-webkit-min-device-pixel-ratio: 1.5)',\n          rules: [\n            {\n              type: 'rule',\n              selectors: rule.selectors,\n              declarations: [\n                {\n                  type: 'declaration',\n                  property: 'background-image',\n                  value: 'url(\"' + url + '\")'\n                },\n                {\n                  type: 'declaration',\n                  property: 'background-size',\n                  value: backgroundSize\n                }\n              ]\n            }\n          ]\n        });\n      });\n    });\n  };\n\n  return function(style, rework) {\n    vendors = vendors || rework.prefixes;\n    visit(style.rules, style);\n  };\n};\n\n/**\n * Filter background[-image] with url().\n */\n\nfunction backgroundWithURL(decl) {\n  return ('background' == decl.property\n    || 'background-image' == decl.property)\n    && ~decl.value.indexOf('url(');\n}\n\n/**\n * Predicate on background-size property.\n */\n\nfunction backgroundWithSize(decl) {\n  return 'background-size' == decl.property;\n}\n\n/**\n * Return value atribute of a declaration.\n */\n\nfunction value(decl) {\n  return decl.value;\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/colors.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar parse = require('color-parser')\n  , functions = require('./function');\n\n/**\n * Provide color manipulation helpers:\n *\n *    button {\n *      background: rgba(#eee, .5)\n *    }\n *\n * yields:\n *\n *    button {\n *      background: rgba(238, 238, 238, .5)\n *    }\n *\n */\n\nmodule.exports = function() {\n  return functions({\n    rgba: function(color, alpha){\n      if (2 == arguments.length) {\n        var c = parse(color.trim());\n        var args = [c.r, c.g, c.b, alpha];\n      } else {\n        var args = [].slice.call(arguments);\n      }\n      \n      return 'rgba(' + args.join(', ') + ')';\n    }\n  });\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/extend.js\", function(exports, require, module){\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('rework:extend');\n\n/**\n * Add extension support.\n */\n\nmodule.exports = function() {\n  debug('use extend');\n  return function(style, rework) {\n    var map = {};\n    var rules = style.rules.length;\n\n    for (var j = 0; j < rules; j++) {\n      var rule = style.rules[j];\n      if (!rule || !rule.selectors) return;\n\n      // map selectors\n      rule.selectors.forEach(function(sel, i) {\n        map[sel] = rule;\n        if ('%' == sel[0]) rule.selectors.splice(i, 1);\n      });\n\n      // visit extend: properties\n      visit(rule, map);\n\n      // clean up empty rules\n      if (!rule.declarations.length) {\n        style.rules.splice(j--, 1);\n      }\n    };\n  }\n};\n\n/**\n * Visit declarations and extensions.\n *\n * @param {Object} rule\n * @param {Object} map\n * @api private\n */\n\nfunction visit(rule, map) {\n  for (var i = 0; i < rule.declarations.length; ++i) {\n    var decl = rule.declarations[i];\n    var key = decl.property;\n    var val = decl.value;\n    if (!/^extends?$/.test(key)) continue;\n\n    var extend = map[val];\n    if (!extend) throw new Error('failed to extend \"' + val + '\"');\n\n    var keys = Object.keys(map);\n    keys.forEach(function(key) {\n      if (0 != key.indexOf(val)) return;\n      var extend = map[key];\n      var suffix = key.replace(val, '');\n      debug('extend %j with %j', rule.selectors, extend.selectors);\n      extend.selectors = extend.selectors.concat(rule.selectors.map(function(sel) {\n        return sel + suffix;\n      }));\n    });\n\n    rule.declarations.splice(i--, 1);\n  }\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/mixin.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('../utils')\n  , visit = require('../visit');\n\n/**\n * Define custom mixins.\n */\n\nmodule.exports = function(mixins) {\n  if (!mixins) throw new Error('mixins object required');\n  return function(style, rework){\n    visit.declarations(style, function(declarations){\n      mixin(declarations, mixins);\n    });\n  }\n};\n\n/**\n * Visit declarations and apply mixins.\n *\n * @param {Array} declarations\n * @param {Object} mixins\n * @api private\n */\n\nfunction mixin(declarations, mixins) {\n  for (var i = 0; i < declarations.length; ++i) {\n    var decl = declarations[i];\n    var key = decl.property;\n    var val = decl.value;\n    var fn = mixins[key];\n    if (!fn) continue;\n\n    // invoke mixin\n    var ret = fn(val);\n\n    // apply properties\n    for (var key in ret) {\n      declarations.splice(i++, 0, {\n        type: 'declaration',\n        property: key,\n        value: ret[key]\n      });\n    }\n\n    // remove original\n    declarations.splice(i, 1);\n  }\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/keyframes.js\", function(exports, require, module){\n\n/**\n * Prefix keyframes.\n *\n *   @keyframes animation {\n *     from {\n *       opacity: 0;\n *     }\n *\n *     to {\n *       opacity: 1;\n *     }\n *   }\n *\n * yields:\n *\n *   @keyframes animation {\n *     from {\n *       opacity: 0;\n *     }\n *\n *     to {\n *       opacity: 1;\n *     }\n *   }\n *\n *   @-webkit-keyframes animation {\n *     from {\n *       opacity: 0;\n *     }\n *\n *     to {\n *       opacity: 1;\n *     }\n *   }\n *\n */\n\nmodule.exports = function(vendors) {\n  return function(style, rework){\n    vendors = vendors || rework.prefixes;\n\n    style.rules.forEach(function(rule){\n      if (!rule.keyframes) return;\n\n      vendors.forEach(function(vendor){\n        if (vendor == rule.vendor) return;\n        var clone = cloneKeyframes(rule);\n        clone.vendor = vendor;\n        style.rules.push(clone);\n      });\n    });\n  }\n};\n\n/**\n * Clone keyframes.\n *\n * @param {Object} rule\n * @api private\n */\n\nfunction cloneKeyframes(rule) {\n  var clone = { name: rule.name };\n  clone.type = 'keyframes';\n  clone.vendor = rule.vendor;\n  clone.keyframes = [];\n  rule.keyframes.forEach(function(keyframe){\n    clone.keyframes.push(cloneKeyframe(keyframe));\n  });\n  return clone;\n}\n\n/**\n * Clone `keyframe`.\n *\n * @param {Object} keyframe\n * @api private\n */\n\nfunction cloneKeyframe(keyframe) {\n  var clone = {};\n  clone.type = 'keyframe';\n  clone.values = keyframe.values.slice();\n  clone.declarations = keyframe.declarations.map(function(decl){\n    return {\n      type: 'declaration',\n      property: decl.property,\n      value: decl.value\n    }\n  });\n  return clone;\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/references.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Provide property reference support.\n *\n *    button {\n *      width: 50px;\n *      height: @width;\n *      line-height: @height;\n *    }\n *\n * yields:\n *\n *    button {\n *      width: 50px;\n*      height: 50px;\n*      line-height: 50px;\n *    }\n *\n */\n\nmodule.exports = function() {\n  return function(style, rework){\n    visit.declarations(style, substitute);\n  }\n};\n\n/**\n * Substitute easing functions.\n *\n * @api private\n */\n\nfunction substitute(declarations) {\n  var map = {};\n\n  for (var i = 0, len = declarations.length; i < len; ++i) {\n    var decl = declarations[i];\n    var key = decl.property;\n    var val = decl.value;\n\n    decl.value = val.replace(/@([-\\w]+)/g, function(_, name){\n      if (null == map[name]) throw new Error('@' + name + ' is not defined in this scope');\n      return map[name];\n    });\n\n    map[key] = decl.value;\n  }\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/prefix-selectors.js\", function(exports, require, module){\n\n/**\n * Prefix selectors with `str`.\n *\n *    button {\n *      color: red;\n *    }\n *\n * yields:\n *\n *    #dialog button {\n *      color: red;\n *    }\n *\n */\n\nmodule.exports = function(str) {\n  return function(style){\n    style.rules = style.rules.map(function(rule){\n      if (!rule.selectors) return rule;\n      rule.selectors = rule.selectors.map(function(selector){\n        return str + ' ' + selector;\n      });\n      return rule;\n    });\n  }\n};\n});\nrequire.register(\"visionmedia-rework/lib/plugins/prefix-value.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Prefix `value`.\n *\n *    button {\n *      transition: height, transform 2s, width 0.3s linear;\n *    }\n *\n * yields:\n *\n *    button {\n *      -webkit-transition: height, -webkit-transform 2s, width 0.3s linear;\n *      -moz-transition: height, -moz-transform 2s, width 0.3s linear;\n *      transition: height, transform 2s, width 0.3s linear\n *    }\n *\n */\n\nmodule.exports = function(value, vendors) {\n  return function(style, rework){\n    vendors = vendors || rework.prefixes;\n\n    visit.declarations(style, function(declarations){\n      for (var i = 0; i < declarations.length; ++i) {\n        var decl = declarations[i];\n        if (!~decl.value.indexOf(value)) continue;\n\n        // ignore vendor-prefixed properties\n        if ('-' == decl.property[0]) continue;\n\n        // ignore vendor-prefixed values\n        if (~decl.value.indexOf('-' + value)) continue;\n\n        // vendor prefixed props\n        vendors.forEach(function(vendor){\n          var prop = 'transition' == decl.property\n            ? vendor + decl.property\n            : decl.property;\n\n          declarations.splice(i++, 0, {\n            type: 'declaration',\n            property: prop,\n            value: decl.value.replace(value, vendor + value)\n          });\n        });\n      }\n    });\n  }\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/prefix.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Prefix `prop`.\n *\n *   .button {\n *     border-radius: 5px;\n *   }\n *\n * yields:\n *\n *   .button {\n *     -webkit-border-radius: 5px;\n *     -moz-border-radius: 5px;\n *     border-radius: 5px;\n *   }\n *\n */\n\nmodule.exports = function(prop, vendors) {\n  var props = Array.isArray(prop)\n    ? prop\n    : [prop];\n\n  return function(style, rework){\n    vendors = vendors || rework.prefixes;\n    visit.declarations(style, function(declarations, node){\n      var only = node.vendor;\n      var isKeyframes = !! node.keyframes;\n\n      for (var i = 0; i < props.length; ++i) {\n        var prop = props[i];\n\n        for (var j = 0, len = declarations.length; j < len; ++j) {\n          var decl = declarations[j];\n          if (prop != decl.property) continue;\n\n          // vendor prefixed props\n          for (var k = 0; k < vendors.length; ++k) {\n            if (!only && isKeyframes) continue;\n            if (only && only != vendors[k]) continue;\n            declarations.push({\n              type: 'declaration',\n              property: vendors[k] + decl.property,\n              value: decl.value\n            });\n          }\n\n          // original prop\n          declarations.push(decl);\n          declarations.splice(j, 1);\n        }\n      }\n    });\n  }\n};\n\n});\nrequire.register(\"visionmedia-rework-mixins/index.js\", function(exports, require, module){\n\nexports['border-radius'] = require('./lib/border-radius');\nexports['overflow'] = require('./lib/ellipsis');\nexports['absolute'] = require('./lib/absolute');\nexports['relative'] = require('./lib/relative');\nexports['fixed'] = require('./lib/fixed');\nexports['opacity'] = require('./lib/opacity');\nexports['size'] = require('./lib/size');\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/absolute.js\", function(exports, require, module){\n\n/**\n * absolute: top left\n * absolute: top 5px left 5px\n */\n\nmodule.exports = require('./position')('absolute');\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/border-radius.js\", function(exports, require, module){\n\n/**\n * Positions.\n */\n\nvar position = {\n  top: true,\n  left: true,\n  right: true,\n  bottom: true\n};\n\n/**\n * border-radius: 5px\n * border-radius: 5px 10px\n * border-radius: top 5px\n * border-radius: top 5px left 10px\n */\n\nmodule.exports = function(str){\n  var vals = str.split(/\\s+/);\n  var pos;\n  var ret;\n\n  for (var i = 0; i < vals.length; ++i) {\n    var val = vals[i];\n    if (!position[val]) continue;\n    ret = ret || {};\n    pos = val;\n    val = vals[++i];\n    switch (pos) {\n      case 'top':\n      case 'bottom':\n        ret['border-' + pos + '-left-radius'] = val;\n        ret['border-' + pos + '-right-radius'] = val;\n        break;\n      case 'left':\n      case 'right':\n        ret['border-top-' + pos + '-radius'] = val;\n        ret['border-bottom-' + pos + '-radius'] = val;\n        break;\n    }\n  }\n\n  if (!ret) {\n    return {\n      'border-radius': str\n    }\n  }\n\n  return ret;\n};\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/ellipsis.js\", function(exports, require, module){\n\n/**\n * overflow: ellipsis\n */\n\nmodule.exports = function(type) {\n  if ('ellipsis' == type) {\n    return {\n      'white-space': 'nowrap',\n      'overflow': 'hidden',\n      'text-overflow': 'ellipsis'\n    }\n  }\n\n  return {\n    'overflow': type\n  };\n};\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/fixed.js\", function(exports, require, module){\n\n/**\n * fixed: top left\n * fixed: top 5px left 5px\n */\n\nmodule.exports = require('./position')('fixed');\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/opacity.js\", function(exports, require, module){\n\n/**\n * opacity: 1\n */\n\nmodule.exports = function(str){\n  var vals = str.split(/\\s+/);\n  var a = parseFloat(vals.shift());\n  var n = a * 100 | 0;\n  var tail = vals.length ? ' ' + vals.join(' '): '';\n  return {\n    'opacity': a + tail,\n    '-ms-filter': 'progid:DXImageTransform.Microsoft.Alpha(Opacity=' + n + ')' + tail,\n    'filter': 'alpha(opacity=' + n + ')' + tail\n  }\n};\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/position.js\", function(exports, require, module){\n\n/**\n * Positions.\n */\n\nvar positions = {\n  top: true,\n  left: true,\n  right: true,\n  bottom: true\n};\n\n/**\n * Return a mixin for the given position `type`.\n *\n * @param {String} type\n * @return {Function}\n * @api private\n */\n\nmodule.exports = function(type){\n  return function(str){\n    var val;\n    var pos;\n    var ret = {};\n    var vals = str.split(/\\s+/);\n\n    ret.position = type;\n\n    for (var i = 0; i < vals.length; ++i) {\n      val = vals[i];\n      if (positions[val]) {\n        pos = val;\n        ret[pos] = '0';\n      } else {\n        ret[pos] = val;\n      }\n    }\n\n    return ret;\n  };\n}\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/relative.js\", function(exports, require, module){\n\n/**\n * relative: top left\n * relative: top 5px left 5px\n */\n\nmodule.exports = require('./position')('relative');\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/size.js\", function(exports, require, module){\n/**\n * size: 100px 50px\n */\n\nmodule.exports = function(sizes) {\n  sizes = sizes.split(/\\s+/);\n  if ( sizes.length == 1 ) sizes[1] = sizes[0];\n\n  return {\n    width:  sizes[0],\n    height: sizes[1]\n  };\n};\n\n});\nrequire.register(\"styl/index.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar whitespace = require('css-whitespace');\nvar mixins = require('rework-mixins');\nvar rework = require('rework');\nvar props = rework.properties;\n\n/**\n * Expose `Style`.\n */\n\nmodule.exports = Style;\n\n/**\n * Initialize a new Style with the given css `str`.\n *\n * Options:\n *\n *  - `whitespace` utilize css whitespace transformations\n *  - `compress` enable output compression\n *\n * @param {String} str\n * @param {Object} options\n * @api public\n */\n\nfunction Style(str, options) {\n  if (!(this instanceof Style)) return new Style(str, options);\n  options = options || {};\n  if (options.whitespace) str = whitespace(str);\n  this.str = str;\n  this.compress = options.compress;\n  this.rework = rework(str);\n  this.delegate(['vendors', 'use']);\n  this.vendors(['-ms-', '-moz-', '-webkit-']);\n}\n\n/**\n * Delegate `methods` to rework.\n *\n * @param {Array} methods\n * @api private\n */\n\nStyle.prototype.delegate = function(methods){\n  var self = this;\n  methods.forEach(function(method){\n    self[method] = self.rework[method].bind(self.rework);\n  });\n};\n\n/**\n * Return the compiled CSS.\n *\n * @return {String}\n * @api public\n */\n\nStyle.prototype.toString = function(){\n  this.use(rework.mixin(mixins));\n  this.use(rework.keyframes());\n  this.use(rework.ease());\n  this.use(rework.prefixValue('linear-gradient'));\n  this.use(rework.prefixValue('radial-gradient'));\n  this.use(rework.prefixValue('transform'));\n  this.use(rework.prefix(props));\n  this.use(rework.colors());\n  this.use(rework.references());\n  this.use(rework.at2x());\n  this.use(rework.extend());\n  return this.rework.toString({ compress: this.compress });\n};\n\n});\n\n\n\n\n\n\n\nrequire.alias(\"visionmedia-debug/index.js\", \"styl/deps/debug/index.js\");\nrequire.alias(\"visionmedia-debug/debug.js\", \"styl/deps/debug/debug.js\");\nrequire.alias(\"visionmedia-debug/index.js\", \"debug/index.js\");\n\nrequire.alias(\"visionmedia-css-whitespace/index.js\", \"styl/deps/css-whitespace/index.js\");\nrequire.alias(\"visionmedia-css-whitespace/lib/compiler.js\", \"styl/deps/css-whitespace/lib/compiler.js\");\nrequire.alias(\"visionmedia-css-whitespace/lib/lexer.js\", \"styl/deps/css-whitespace/lib/lexer.js\");\nrequire.alias(\"visionmedia-css-whitespace/lib/parser.js\", \"styl/deps/css-whitespace/lib/parser.js\");\nrequire.alias(\"visionmedia-css-whitespace/index.js\", \"styl/deps/css-whitespace/index.js\");\nrequire.alias(\"visionmedia-css-whitespace/index.js\", \"css-whitespace/index.js\");\nrequire.alias(\"visionmedia-debug/index.js\", \"visionmedia-css-whitespace/deps/debug/index.js\");\nrequire.alias(\"visionmedia-debug/debug.js\", \"visionmedia-css-whitespace/deps/debug/debug.js\");\n\nrequire.alias(\"visionmedia-css-whitespace/index.js\", \"visionmedia-css-whitespace/index.js\");\nrequire.alias(\"visionmedia-rework/index.js\", \"styl/deps/rework/index.js\");\nrequire.alias(\"visionmedia-rework/lib/rework.js\", \"styl/deps/rework/lib/rework.js\");\nrequire.alias(\"visionmedia-rework/lib/utils.js\", \"styl/deps/rework/lib/utils.js\");\nrequire.alias(\"visionmedia-rework/lib/visit.js\", \"styl/deps/rework/lib/visit.js\");\nrequire.alias(\"visionmedia-rework/lib/properties.js\", \"styl/deps/rework/lib/properties.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/function.js\", \"styl/deps/rework/lib/plugins/function.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/url.js\", \"styl/deps/rework/lib/plugins/url.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/vars.js\", \"styl/deps/rework/lib/plugins/vars.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/ease.js\", \"styl/deps/rework/lib/plugins/ease.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/at2x.js\", \"styl/deps/rework/lib/plugins/at2x.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/colors.js\", \"styl/deps/rework/lib/plugins/colors.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/extend.js\", \"styl/deps/rework/lib/plugins/extend.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/mixin.js\", \"styl/deps/rework/lib/plugins/mixin.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/keyframes.js\", \"styl/deps/rework/lib/plugins/keyframes.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/references.js\", \"styl/deps/rework/lib/plugins/references.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/prefix-selectors.js\", \"styl/deps/rework/lib/plugins/prefix-selectors.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/prefix-value.js\", \"styl/deps/rework/lib/plugins/prefix-value.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/prefix.js\", \"styl/deps/rework/lib/plugins/prefix.js\");\nrequire.alias(\"visionmedia-rework/index.js\", \"rework/index.js\");\nrequire.alias(\"visionmedia-css/index.js\", \"visionmedia-rework/deps/css/index.js\");\nrequire.alias(\"visionmedia-css-parse/index.js\", \"visionmedia-css/deps/css-parse/index.js\");\n\nrequire.alias(\"visionmedia-css-stringify/index.js\", \"visionmedia-css/deps/css-stringify/index.js\");\nrequire.alias(\"visionmedia-css-stringify/lib/compress.js\", \"visionmedia-css/deps/css-stringify/lib/compress.js\");\nrequire.alias(\"visionmedia-css-stringify/lib/identity.js\", \"visionmedia-css/deps/css-stringify/lib/identity.js\");\n\nrequire.alias(\"visionmedia-debug/index.js\", \"visionmedia-rework/deps/debug/index.js\");\nrequire.alias(\"visionmedia-debug/debug.js\", \"visionmedia-rework/deps/debug/debug.js\");\n\nrequire.alias(\"component-color-parser/index.js\", \"visionmedia-rework/deps/color-parser/index.js\");\nrequire.alias(\"component-color-parser/colors.js\", \"visionmedia-rework/deps/color-parser/colors.js\");\n\nrequire.alias(\"component-path/index.js\", \"visionmedia-rework/deps/path/index.js\");\n\nrequire.alias(\"visionmedia-rework-mixins/index.js\", \"styl/deps/rework-mixins/index.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/absolute.js\", \"styl/deps/rework-mixins/lib/absolute.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/border-radius.js\", \"styl/deps/rework-mixins/lib/border-radius.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/ellipsis.js\", \"styl/deps/rework-mixins/lib/ellipsis.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/fixed.js\", \"styl/deps/rework-mixins/lib/fixed.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/opacity.js\", \"styl/deps/rework-mixins/lib/opacity.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/position.js\", \"styl/deps/rework-mixins/lib/position.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/relative.js\", \"styl/deps/rework-mixins/lib/relative.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/size.js\", \"styl/deps/rework-mixins/lib/size.js\");\nrequire.alias(\"visionmedia-rework-mixins/index.js\", \"styl/deps/rework-mixins/index.js\");\nrequire.alias(\"visionmedia-rework-mixins/index.js\", \"rework-mixins/index.js\");\nrequire.alias(\"visionmedia-rework-mixins/index.js\", \"visionmedia-rework-mixins/index.js\");\nrequire.alias(\"styl/index.js\", \"styl/index.js\");\n\nmodule.exports = require(\"styl/index.js\");\n",
          "type": "blob"
        },
        "pixie": {
          "path": "pixie",
          "content": "module.exports = {\"entryPoint\":\"lib/styl\",\"version\":\"0.2.8.1\"};",
          "type": "blob"
        },
        "test/test": {
          "path": "test/test",
          "content": "(function() {\n  var styl;\n\n  styl = require(\"../lib/styl\");\n\n  describe(\"styl\", function() {\n    return it(\"should compile a little\", function() {\n      var output, source;\n      console.log(styl);\n      source = \"body\\n  background-color: red\";\n      output = \"body {\\n  background-color: red;\\n}\";\n      return assert.equal(styl(source, {\n        whitespace: true\n      }).toString(), output);\n    });\n  });\n\n}).call(this);\n",
          "type": "blob"
        }
      },
      "progenitor": {
        "url": "http://www.danielx.net/editor/"
      },
      "version": "0.2.8.1",
      "entryPoint": "lib/styl",
      "repository": {
        "branch": "v0.2.8.1",
        "default_branch": "master",
        "full_name": "distri/styl",
        "homepage": null,
        "description": "Wrapper for styl",
        "html_url": "https://github.com/distri/styl",
        "url": "https://api.github.com/repos/distri/styl",
        "publishBranch": "gh-pages"
      },
      "dependencies": {}
    }
  }
});